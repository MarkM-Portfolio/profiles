-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2001, 2013                                    
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

-- 5724-S68                                                          
CONNECT TO PEOPLEDB@

------------------------------------------------
-- DDL Statements for table "EMPINST"."EMPLOYEE"
------------------------------------------------
--- step 1: disable constraints
--- keep the following stmt in sync with predbxfer.sql

DROP TRIGGER "EMPINST"."T_EMPLOYEE_INSRT"@

DROP TRIGGER "EMPINST"."T_EMPLOYEE_UPDT"@
COMMIT@


ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_MAIL_LOWER DROP EXPRESSION @ 
COMMIT@

ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_LOGIN_LOWER DROP EXPRESSION @
COMMIT@

ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_GW_EMAIL_LOWER DROP EXPRESSION @    
COMMIT@

ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_UID_LOWER DROP EXPRESSION @ 
COMMIT@

--- step 2: rename old table to temp

RENAME TABLE "EMPINST"."EMPLOYEE" TO "EMPLOYEE_T"@

--- step 3a: create new table
--- keep the following stmt in sync with createdb.sql

CREATE TABLE "EMPINST"."EMPLOYEE"  (
	"PROF_KEY" VARCHAR(36) NOT NULL,
	"PROF_UID" VARCHAR(256) NOT NULL ,
	"PROF_UID_LOWER" GENERATED ALWAYS AS (LOWER(PROF_UID)) ,
	"PROF_LAST_UPDATE" TIMESTAMP ,

	"PROF_MAIL" VARCHAR(256) ,
        "PROF_MAIL_LOWER" GENERATED ALWAYS AS (LOWER(PROF_MAIL)),
	"PROF_GUID" VARCHAR(256) NOT NULL,
	"PROF_SOURCE_UID" VARCHAR(256) NOT NULL,

        "PROF_DISPLAY_NAME" VARCHAR(256) ,
	"PROF_LOGIN" VARCHAR(36) ,
	"PROF_LOGIN_LOWER" GENERATED ALWAYS AS (LOWER(PROF_LOGIN)),
	"PROF_GIVEN_NAME"		VARCHAR(128)  ,
	"PROF_SURNAME"			VARCHAR(128),
	"PROF_ALTERNATE_LAST_NAME" VARCHAR(64) ,
	"PROF_PREFERRED_FIRST_NAME" VARCHAR(32) ,
	"PROF_PREFERRED_LAST_NAME" VARCHAR(64) ,
	"PROF_TYPE"			VARCHAR(64),

        "PROF_MANAGER_UID" VARCHAR(256) ,
        "PROF_SECRETARY_UID" VARCHAR(256) ,
        "PROF_IS_MANAGER" CHAR(1) ,

	"PROF_GROUPWARE_EMAIL" VARCHAR(128) ,
	"PROF_GW_EMAIL_LOWER" GENERATED ALWAYS AS (LOWER(PROF_GROUPWARE_EMAIL)),
	"PROF_JOB_RESPONSIBILITIES" VARCHAR(128) ,
        "PROF_ORGANIZATION_IDENTIFIER" VARCHAR(64) ,
	"PROF_ISO_COUNTRY_CODE" VARCHAR(3) ,
	"PROF_FAX_TELEPHONE_NUMBER" VARCHAR(32) ,
	"PROF_IP_TELEPHONE_NUMBER" VARCHAR(32),
	"PROF_MOBILE" VARCHAR(32) ,
	"PROF_PAGER" VARCHAR(32) ,
	"PROF_TELEPHONE_NUMBER" VARCHAR(32) ,
	"PROF_WORK_LOCATION" VARCHAR(32) ,

	"PROF_BUILDING_IDENTIFIER" VARCHAR(16) ,
	"PROF_DEPARTMENT_NUMBER" VARCHAR(16) ,
	"PROF_EMPLOYEE_TYPE" VARCHAR(256) ,
	"PROF_FLOOR" VARCHAR(16) ,
	"PROF_EMPLOYEE_NUMBER" VARCHAR(16) ,
	"PROF_PAGER_TYPE" VARCHAR(16) ,
	"PROF_PAGER_ID" VARCHAR(32) ,
	"PROF_PAGER_SERVICE_PROVIDER" VARCHAR(50) ,
	"PROF_PHYSICAL_DELIVERY_OFFICE" VARCHAR(32) ,
	"PROF_PREFERRED_LANGUAGE" VARCHAR(100) ,
	"PROF_SHIFT" VARCHAR(4) ,
	"PROF_TITLE" VARCHAR(256) ,
        "PROF_COURTESY_TITLE" VARCHAR(64) ,
	"PROF_TIMEZONE" VARCHAR(50) , 
	"PROF_NATIVE_LAST_NAME" VARCHAR(256) ,
	"PROF_NATIVE_FIRST_NAME" VARCHAR(256) ,
	"PROF_BLOG_URL" VARCHAR(256) ,
	"PROF_FREEBUSY_URL" VARCHAR(256) ,
        "PROF_CALENDAR_URL" VARCHAR(256) ,

	"PROF_DESCRIPTION" VARCHAR(4000) ,
        "PROF_EXPERIENCE" VARCHAR(4000) 
)

          IN "USERSPACE32K" INDEX IN USERSPACE4K @
COMMIT@

--- step 3b: drop constraints on new table
--- keep the following stmt in sync with predbxfer.sql

ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_MAIL_LOWER DROP EXPRESSION @ 
COMMIT@

ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_LOGIN_LOWER DROP EXPRESSION @
COMMIT@

ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_GW_EMAIL_LOWER DROP EXPRESSION @    
COMMIT@

ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_UID_LOWER DROP EXPRESSION @ 
COMMIT@

--- step 4a: copy data to new table

INSERT INTO "EMPINST"."EMPLOYEE" 
	("PROF_KEY",
	"PROF_UID",
	"PROF_UID_LOWER",
	"PROF_LAST_UPDATE",
	"PROF_MAIL",
        "PROF_MAIL_LOWER" ,
	"PROF_GUID" ,
	"PROF_SOURCE_UID" ,
        "PROF_DISPLAY_NAME",
	"PROF_LOGIN",
	"PROF_LOGIN_LOWER" ,
	"PROF_GIVEN_NAME",
	"PROF_SURNAME",
	"PROF_ALTERNATE_LAST_NAME" ,
	"PROF_PREFERRED_FIRST_NAME" ,
	"PROF_PREFERRED_LAST_NAME" ,
        "PROF_MANAGER_UID"  ,
        "PROF_SECRETARY_UID"  ,
        "PROF_IS_MANAGER" ,
	"PROF_GROUPWARE_EMAIL" ,
	"PROF_GW_EMAIL_LOWER" ,
	"PROF_JOB_RESPONSIBILITIES",
        "PROF_ORGANIZATION_IDENTIFIER",
	"PROF_ISO_COUNTRY_CODE",
	"PROF_FAX_TELEPHONE_NUMBER",
	"PROF_IP_TELEPHONE_NUMBER",
	"PROF_MOBILE",
	"PROF_PAGER",
	"PROF_TELEPHONE_NUMBER",
	"PROF_WORK_LOCATION",
	"PROF_BUILDING_IDENTIFIER",
	"PROF_DEPARTMENT_NUMBER",
	"PROF_EMPLOYEE_TYPE",
	"PROF_FLOOR",
	"PROF_EMPLOYEE_NUMBER" ,
	"PROF_PAGER_TYPE",
	"PROF_PAGER_ID",
	"PROF_PAGER_SERVICE_PROVIDER",
	"PROF_PHYSICAL_DELIVERY_OFFICE",
	"PROF_PREFERRED_LANGUAGE",
	"PROF_SHIFT",
	"PROF_TITLE",
        "PROF_COURTESY_TITLE" ,
	"PROF_TIMEZONE",
	"PROF_NATIVE_LAST_NAME" ,
	"PROF_NATIVE_FIRST_NAME" ,
	"PROF_BLOG_URL",
	"PROF_FREEBUSY_URL" ,
        "PROF_CALENDAR_URL",
	"PROF_DESCRIPTION" ,
        "PROF_EXPERIENCE")
   SELECT
	"PROF_KEY",
	"PROF_UID",
	"PROF_UID_LOWER",
	"PROF_LAST_UPDATE",
	"PROF_MAIL",
        "PROF_MAIL_LOWER" ,
	"PROF_GUID" ,
	"PROF_SOURCE_UID" ,
        "PROF_DISPLAY_NAME",
	"PROF_LOGIN",
	"PROF_LOGIN_LOWER" ,
	"PROF_GIVEN_NAME",
	"PROF_SURNAME",
	"PROF_ALTERNATE_LAST_NAME" ,
	"PROF_PREFERRED_FIRST_NAME" ,
	"PROF_PREFERRED_LAST_NAME" ,
        "PROF_MANAGER_UID" ,
        "PROF_SECRETARY_UID"  ,
        "PROF_IS_MANAGER" ,
	"PROF_GROUPWARE_EMAIL" ,
	"PROF_GW_EMAIL_LOWER" ,
	"PROF_JOB_RESPONSIBILITIES",
        "PROF_ORGANIZATION_IDENTIFIER",
	"PROF_ISO_COUNTRY_CODE",
	"PROF_FAX_TELEPHONE_NUMBER",
	"PROF_IP_TELEPHONE_NUMBER",
	"PROF_MOBILE",
	"PROF_PAGER",
	"PROF_TELEPHONE_NUMBER",
	"PROF_WORK_LOCATION",
	"PROF_BUILDING_IDENTIFIER",
	"PROF_DEPARTMENT_NUMBER",
	"PROF_EMPLOYEE_TYPE",
	"PROF_FLOOR",
	"PROF_EMPLOYEE_NUMBER" ,
	"PROF_PAGER_TYPE",
	"PROF_PAGER_ID",
	"PROF_PAGER_SERVICE_PROVIDER",
	"PROF_PHYSICAL_DELIVERY_OFFICE",
	"PROF_PREFERRED_LANGUAGE",
	"PROF_SHIFT",
	"PROF_TITLE",
        "PROF_COURTESY_TITLE" ,
	"PROF_TIMEZONE",
	"PROF_NATIVE_LAST_NAME" ,
	"PROF_NATIVE_FIRST_NAME" ,
	"PROF_BLOG_URL",
	"PROF_FREEBUSY_URL" ,
        "PROF_CALENDAR_URL",
	"PROF_DESCRIPTION",
	"PROF_EXPERIENCE"
FROM "EMPINST"."EMPLOYEE_T"@
COMMIT@

--- step 4b: add constraints on new table
--- keep the following stmt in sync with postdbxfer.sql

SET INTEGRITY FOR EMPINST.EMPLOYEE OFF@ 
ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN  PROF_MAIL_LOWER SET GENERATED ALWAYS AS (LOWER(PROF_MAIL))@ 
ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN  PROF_LOGIN_LOWER SET GENERATED ALWAYS AS (LOWER(PROF_LOGIN))@ 
ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN  PROF_GW_EMAIL_LOWER SET GENERATED ALWAYS AS (LOWER(PROF_GROUPWARE_EMAIL))@ 
ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN  PROF_UID_LOWER SET GENERATED ALWAYS AS (LOWER(PROF_UID))@ 
SET INTEGRITY FOR EMPINST.EMPLOYEE IMMEDIATE CHECKED FORCE GENERATED@ 
COMMIT@

--- step 5: drop temp table

DROP TABLE "EMPINST"."EMPLOYEE_T"@
COMMIT@

--- step 6: create triggers/indices new table
--- keep the following stmts in sync with createdb.sql

CREATE UNIQUE INDEX "EMPINST"."EMPLOYEE_PK" ON "EMPINST"."EMPLOYEE" 
		("PROF_KEY" ASC) ALLOW REVERSE SCANS@

-- DDL Statements for indexes on Table "EMPINST"."EMPLOYEE"

CREATE INDEX "EMPINST"."EMP_GUID_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_GUID" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."EMP_UID_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_UID" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."MAIL_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_MAIL" ASC) ALLOW REVERSE SCANS@	

CREATE INDEX "EMPINST"."MAIL_LOWER_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_MAIL_LOWER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."UID_LOWER_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_UID_LOWER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."GW_EMAIL_LOWER_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_GW_EMAIL_LOWER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."PREF_FNX" ON "EMPINST"."EMPLOYEE" 
		("PROF_PREFERRED_FIRST_NAME" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."PREF_LNX" ON "EMPINST"."EMPLOYEE" 
		("PROF_PREFERRED_LAST_NAME" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."DISPNMX" ON "EMPINST"."EMPLOYEE" 
		("PROF_DISPLAY_NAME" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."MGRIDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_MANAGER_UID" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."GRPEMAIL_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_GROUPWARE_EMAIL" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."JOB_RESP_UID_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_JOB_RESPONSIBILITIES", "PROF_KEY")@

CREATE INDEX "EMPINST"."ORG_UID_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_ORGANIZATION_IDENTIFIER", "PROF_KEY")@

CREATE INDEX "EMPINST"."COUNTRY_UID_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_ISO_COUNTRY_CODE", "PROF_KEY")@
		
CREATE INDEX "EMPINST"."FAX_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_FAX_TELEPHONE_NUMBER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."IPPHONE_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_IP_TELEPHONE_NUMBER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."MOBILE_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_MOBILE" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."PAGER_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_PAGER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."PHONE_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_TELEPHONE_NUMBER" ASC) ALLOW REVERSE SCANS@
                
CREATE INDEX "EMPINST"."WORKLOC_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_WORK_LOCATION" ASC) ALLOW REVERSE SCANS@
                           
CREATE INDEX "EMPINST"."LOGIN_LOWER_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_LOGIN_LOWER" ASC) ALLOW REVERSE SCANS@
                           
COMMIT@
		
-- DDL Statements for triggers on Table "EMPINST"."EMPLOYEE"

CREATE TRIGGER "EMPINST"."T_EMPLOYEE_INSRT" NO CASCADE BEFORE INSERT ON "EMPINST"."EMPLOYEE" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_LAST_UPDATE = CURRENT TIMESTAMP@

CREATE TRIGGER "EMPINST"."T_EMPLOYEE_UPDT" NO CASCADE BEFORE UPDATE ON "EMPINST"."EMPLOYEE" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_LAST_UPDATE = CURRENT TIMESTAMP@

COMMIT@




------------------------------------------------
-- DDL Statements for table "EMPINST"."PROFILE_EXTENSIONS"
------------------------------------------------
 
--- step 1: disable constraints
--- keep the following stmt in sync with predbxfer.sql

--- step 2: rename old table to temp

RENAME TABLE "EMPINST"."PROFILE_EXTENSIONS" TO "PROFILE_EXT_T"@
COMMIT@

--- step 3: create new table
--- keep the following stmt in sync with createdb.sql

CREATE TABLE "EMPINST "."PROFILE_EXTENSIONS"  (
		  "PROF_KEY" VARCHAR(36) NOT NULL ,
		  "PROF_PROPERTY_ID" VARCHAR(64) NOT NULL,  
		  "PROF_EXT_KEY" VARCHAR(256) ,
		  "PROF_NAME" VARCHAR(256) ,
		  "PROF_DATA_TYPE" VARCHAR(64) ,   
		  "PROF_VALUE" VARCHAR(1024),
		  "PROF_VALUE_EXTENDED" BLOB(10 M) NOT COMPACT) 
	IN USERSPACE4K INDEX IN USERSPACE4K@
COMMIT@


--- step 4: copy data to new table
INSERT INTO "EMPINST"."PROFILE_EXTENSIONS" 
	("PROF_KEY",
	"PROF_PROPERTY_ID",
	"PROF_EXT_KEY",
	"PROF_NAME",
	"PROF_DATA_TYPE",
	"PROF_VALUE",
	"PROF_VALUE_EXTENDED")
SELECT
	"PROF_KEY",
	"PROF_PROPERTY_ID",
	"PROF_EXT_KEY",
	"PROF_NAME",
	"PROF_DATA_TYPE",
	"PROF_VALUE",
	"PROF_VALUE_EXTENDED"	
FROM "EMPINST"."PROFILE_EXT_T"@

COMMIT@

--- step 5: drop temp table

DROP TABLE "EMPINST"."PROFILE_EXT_T"@

--- step 6: create triggers/indices new table
--- keep the following stmts in sync with createdb.sql

-- DDL Statements for indexes on Table "EMPINST"."GIVEN_NAME"

CREATE INDEX "EMPINST "."PROFILE_EXTENSIONS_IDX" ON "EMPINST "."PROFILE_EXTENSIONS" 
		("PROF_KEY" ASC) CLUSTER ALLOW REVERSE SCANS@

CREATE UNIQUE INDEX "EMPINST "."PROFILE_EXTENSIONS_UDX" ON "EMPINST "."PROFILE_EXTENSIONS" 
		("PROF_KEY" ,"PROF_PROPERTY_ID" ) @

COMMIT@


------------------------------------------------
-- DDL Statements for table "EMPINST"."PROFILE_EXT_DRAFT"
------------------------------------------------
 
--- step 1: disable constraints
--- keep the following stmt in sync with predbxfer.sql

DROP TRIGGER "EMPINST"."T_EXT_DRAFT_SEQ"@
COMMIT@

--- step 2: rename old table to temp

RENAME TABLE "EMPINST"."PROFILE_EXT_DRAFT" TO "PROFILE_EXT_DRAFT_T"@
COMMIT@

--- step 3: create new table
--- keep the following stmt in sync with createdb.sql

CREATE TABLE "EMPINST"."PROFILE_EXT_DRAFT"  (
		  "PROF_UPDATE_SEQUENCE" INTEGER NOT NULL,
		  "PROF_KEY" VARCHAR(36) NOT NULL ,
		  "PROF_PROPERTY_ID" VARCHAR(64) NOT NULL ,  
		  "PROF_EXT_KEY" VARCHAR(256),
		  "PROF_NAME" VARCHAR(256) ,
		  "PROF_DATA_TYPE" VARCHAR(64) ,   
		  "PROF_VALUE" VARCHAR(1024),
		  "PROF_VALUE_EXTENDED" BLOB(10 M) NOT COMPACT) 
	IN USERSPACE4K INDEX IN USERSPACE4K@
COMMIT@


--- step 4: copy data to new table
INSERT INTO "EMPINST"."PROFILE_EXT_DRAFT" 
	("PROF_UPDATE_SEQUENCE", 
	"PROF_KEY",
	"PROF_PROPERTY_ID",
	"PROF_EXT_KEY",
	"PROF_NAME",
	"PROF_DATA_TYPE",
	"PROF_VALUE")
   SELECT
	"PROF_UPDATE_SEQUENCE", 
	"PROF_KEY",
	"PROF_PROPERTY_ID",
	"PROF_EXT_KEY",
	"PROF_NAME",
	"PROF_DATA_TYPE",
	"PROF_VALUE"
FROM "EMPINST"."PROFILE_EXT_DRAFT_T"@

COMMIT@

--- step 5: drop temp table

DROP TABLE "EMPINST"."PROFILE_EXT_DRAFT_T"@

--- step 6: create triggers/indices new table
--- keep the following stmts in sync with createdb.sql

-- DDL Statements for triggers on Table "EMPINST"."PROFILE_EXT_DRAFT"
CREATE TRIGGER "EMPINST"."T_EXT_DRAFT_SEQ" NO CASCADE BEFORE INSERT ON "EMPINST"."PROFILE_EXT_DRAFT" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATE_SEQUENCE = NEXTVAL FOR "EMPINST"."EXT_DRAFT_SEQ"@


-- DDL Statements for indexes on Table "EMPINST"."PROFILE_EXT_DRAFT"

CREATE UNIQUE INDEX "EMPINST"."EXT_DRAFT_PK" ON "EMPINST"."PROFILE_EXT_DRAFT" 
		("PROF_KEY" ASC, "PROF_UPDATE_SEQUENCE" ASC) CLUSTER@

COMMIT@

------------------------------------------------
-- DDL Statements for table "EMPINST"."PEOPLE_TAG"
------------------------------------------------

--- step 1: disable constraints
--- keep the following stmt in sync with predbxfer.sql

--- step 2: rename old table to temp

RENAME TABLE "EMPINST"."PEOPLE_TAG" TO "PEOPLE_TAG_T"@
COMMIT@

--- step 3: create new table
--- keep the following stmt in sync with createdb.sql

CREATE TABLE "EMPINST "."PEOPLE_TAG" (
	"PROF_TAG_ID" VARCHAR(36) NOT NULL,
	"PROF_SOURCE_KEY" VARCHAR(36),
	"PROF_TARGET_KEY" VARCHAR(36) NOT NULL,
	"PROF_TAG" VARCHAR(256) NOT NULL,
	
	CONSTRAINT "PK" PRIMARY KEY (PROF_TARGET_KEY, PROF_TAG)) 
	IN USERSPACE4K INDEX IN USERSPACE4K@
COMMIT@


--- step 4: copy data to new table
INSERT INTO "EMPINST"."PEOPLE_TAG" 
	("PROF_TAG_ID",
	"PROF_TARGET_KEY", 
	"PROF_TAG") 
   SELECT 
	"PROF_TAG_ID",
	"PROF_KEY",
	"PROF_TAG"
FROM "EMPINST"."PEOPLE_TAG_T"@

COMMIT@

--- step 5: drop temp table

DROP TABLE "EMPINST"."PEOPLE_TAG_T"@
COMMIT@

--- step 6: create triggers/indices new table
--- keep the following stmts in sync with createdb.sql


-- DDL Statements for indexes on Table "EMPINST"."PEOPLE_TAG"


CREATE INDEX "EMPINST"."PEOPLE_TAG_IDX" ON "EMPINST"."PEOPLE_TAG" 
		("PROF_TAG" ASC, "PROF_TARGET_KEY" ASC) @

CREATE INDEX "EMPINST"."PEOPLE_TAG_IDX2" ON "EMPINST"."PEOPLE_TAG" 
		("PROF_TARGET_KEY" ASC) CLUSTER@

CREATE UNIQUE INDEX "EMPINST"."PEOPLE_TAG_UDX" ON "EMPINST"."PEOPLE_TAG" 
		("PROF_TAG_ID" ASC) @


------------------------------------------------
-- DDL Statements for table "EMPINST"."PHOTO"
------------------------------------------------

--- step 1: disable constraints
--- keep the following stmt in sync with predbxfer.sql

DROP TRIGGER "EMPINST "."T_PHOTO_INSRT"@
COMMIT@

DROP TRIGGER "EMPINST "."T_PHOTO_UPDT"@
COMMIT@

--- step 2: rename old table to temp

RENAME TABLE "EMPINST"."PHOTO" TO "PHOTO_T"@

--- step 3: create new table
--- keep the following stmt in sync with createdb.sql

 CREATE TABLE "EMPINST"."PHOTO"  (
		  "PROF_KEY" VARCHAR(36) NOT NULL , 
		  "PROF_FILE_TYPE" VARCHAR(50) , 
		  "PROF_UPDATED" TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
		  "PROF_IMAGE" BLOB(50000) NOT LOGGED NOT COMPACT,
		  "PROF_THUMBNAIL" BLOB(10000) NOT LOGGED NOT COMPACT  ) @ 

-- step 4: copy data to new table
INSERT INTO "EMPINST"."PHOTO" (
	"PROF_KEY", 
	"PROF_FILE_TYPE",
	"PROF_UPDATED",
	"PROF_IMAGE")
  SELECT
	"PROF_KEY", 
	"PROF_FILE_TYPE",
	"PROF_UPDATED",
	"PROF_IMAGE"
FROM "EMPINST"."PHOTO_T"@


--- step 5: drop temp table

DROP TABLE "EMPINST"."PHOTO_T"@

--- step 6: create triggers/indices new table
--- keep the following stmts in sync with createdb.sql


--- DDL Statements for indexes on Table "EMPINST"."PHOTO"

CREATE UNIQUE INDEX "EMPINST "."PHOTO_PK" ON "EMPINST "."PHOTO" 
		("PROF_KEY" ASC) @

CREATE INDEX "EMPINST"."PHOTOIDX" ON "EMPINST"."PHOTO" 
		("PROF_UPDATED" DESC) ALLOW REVERSE SCANS@


-- DDL Statements for triggers on Table "EMPINST "."PHOTO"
CREATE TRIGGER "EMPINST "."T_PHOTO_INSRT" NO CASCADE BEFORE INSERT ON "EMPINST "."PHOTO" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATED = CURRENT TIMESTAMP@

CREATE TRIGGER "EMPINST "."T_PHOTO_UPDT" NO CASCADE BEFORE UPDATE ON "EMPINST "."PHOTO" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATED = CURRENT TIMESTAMP@

------------------------------------------------
-- DDL Statements for table "EMPINST"."PRONUNCIATION"
------------------------------------------------

ALTER TABLE "EMPINST"."PRONUNCIATION"  ALTER COLUMN  "PROF_UPDATED" SET DEFAULT CURRENT TIMESTAMP@

------------------------------------------------
-- DDL Statements for sequence for Table "EMPINST"."EMP_DRAFT"
------------------------------------------------

--- step 1: disable constraints
--- keep the following stmt in sync with predbxfer.sql


DROP TRIGGER "EMPINST"."T_EMP_DRAFT_SEQ"@
COMMIT@

DROP TRIGGER "EMPINST "."T_EMP_INS"@
COMMIT@

DROP TRIGGER "EMPINST "."T_EMP_DEL"@
COMMIT@

DROP TRIGGER "EMPINST "."T_EMP_UPD"@
COMMIT@


--- step 2: rename old table to temp

RENAME TABLE "EMPINST"."EMP_DRAFT" TO "EMP_DRAFT_T"@
COMMIT@

--- step 3a: create new table
--- keep the following stmt in sync with createdb.sql

CREATE TABLE "EMPINST"."EMP_DRAFT"  (
	"PROF_UPDATE_SEQUENCE" INTEGER NOT NULL,
	"PROF_KEY" VARCHAR(36) NOT NULL ,
	"PROF_UID" VARCHAR(256) NOT NULL ,

	"PROF_LAST_UPDATE" TIMESTAMP ,
	"PROF_MAIL" VARCHAR(64) ,
        "PROF_SOURCE_UID" VARCHAR(256),
	"PROF_GUID" VARCHAR(256),
        "PROF_DISPLAY_NAME" VARCHAR(256) ,
	"PROF_LOGIN" VARCHAR(36) ,
	"PROF_GIVEN_NAME" VARCHAR(128)  ,
	"PROF_SURNAME" VARCHAR(128),
	"PROF_ALTERNATE_LAST_NAME" VARCHAR(64) ,
	"PROF_PREFERRED_FIRST_NAME" VARCHAR(32) ,
	"PROF_PREFERRED_LAST_NAME" VARCHAR(64) ,
	"PROF_TYPE" VARCHAR(64),

        "PROF_MANAGER_UID" VARCHAR(256) ,
        "PROF_SECRETARY_UID" VARCHAR(256) ,
        "PROF_IS_MANAGER" CHAR(1) ,

	"PROF_GROUPWARE_EMAIL" VARCHAR(128) ,
	"PROF_JOB_RESPONSIBILITIES" VARCHAR(128) ,
        "PROF_ORGANIZATION_IDENTIFIER" VARCHAR(64) ,
	"PROF_ISO_COUNTRY_CODE" VARCHAR(3) ,
	"PROF_FAX_TELEPHONE_NUMBER" VARCHAR(32) ,
	"PROF_IP_TELEPHONE_NUMBER" VARCHAR(32), 
	"PROF_MOBILE" VARCHAR(32) ,
	"PROF_PAGER" VARCHAR(32) ,
	"PROF_TELEPHONE_NUMBER" VARCHAR(32) ,
	"PROF_WORK_LOCATION" VARCHAR(32) ,

	"PROF_BUILDING_IDENTIFIER" VARCHAR(16) ,
	"PROF_DEPARTMENT_NUMBER" VARCHAR(16) ,
	"PROF_EMPLOYEE_TYPE" VARCHAR(256) ,
	"PROF_FLOOR" VARCHAR(16) ,
	"PROF_EMPLOYEE_NUMBER" VARCHAR(16) ,
	"PROF_PAGER_TYPE" VARCHAR(16) ,
	"PROF_PAGER_ID" VARCHAR(32) ,
	"PROF_PAGER_SERVICE_PROVIDER" VARCHAR(50) ,
	"PROF_PHYSICAL_DELIVERY_OFFICE" VARCHAR(32) ,
	"PROF_PREFERRED_LANGUAGE" VARCHAR(100) ,
	"PROF_SHIFT" VARCHAR(4) ,
	"PROF_TITLE" VARCHAR(256) ,
        "PROF_COURTESY_TITLE" VARCHAR(64) ,
	"PROF_TIMEZONE" VARCHAR(50) ,
	"PROF_NATIVE_LAST_NAME" VARCHAR(256) , 
	"PROF_NATIVE_FIRST_NAME" VARCHAR(256) ,
	"PROF_BLOG_URL" VARCHAR(256) ,
	"PROF_FREEBUSY_URL" VARCHAR(256) ,
        "PROF_CALENDAR_URL" VARCHAR(256) ,
	
        "PROF_DESCRIPTION" VARCHAR(4000) ,
        "PROF_EXPERIENCE" VARCHAR(4000) ,

	CONSTRAINT "PK" PRIMARY KEY (PROF_UPDATE_SEQUENCE, PROF_KEY) )
        IN "USERSPACE32K" INDEX IN USERSPACE4K @

--- step 3b: drop constraints on new table
--- keep the following stmt in sync with predbxfer.sql

--- step 4a: copy data to new table

INSERT INTO "EMPINST"."EMP_DRAFT" SELECT
	"PROF_UPDATE_SEQUENCE",
	"PROF_KEY",
	"PROF_UID",

	"PROF_LAST_UPDATE"  ,
	"PROF_MAIL",
	"PROF_SOURCE_UID",
	"PROF_GUID",
        "PROF_DISPLAY_NAME",
	"PROF_LOGIN",
	"PROF_GIVEN_NAME",
	"PROF_SURNAME",
	"PROF_ALTERNATE_LAST_NAME",
	"PROF_PREFERRED_FIRST_NAME",
	"PROF_PREFERRED_LAST_NAME",
	"PROF_TYPE",

        "PROF_MANAGER_UID",
        "PROF_SECRETARY_UID",
        "PROF_IS_MANAGER",

	"PROF_GROUPWARE_EMAIL",
	"PROF_JOB_RESPONSIBILITIES",
        "PROF_ORGANIZATION_IDENTIFIER",
	"PROF_ISO_COUNTRY_CODE",
	"PROF_FAX_TELEPHONE_NUMBER",
	"PROF_IP_TELEPHONE_NUMBER",
	"PROF_MOBILE" ,
	"PROF_PAGER",
	"PROF_TELEPHONE_NUMBER",
	"PROF_WORK_LOCATION",

	"PROF_BUILDING_IDENTIFIER",
	"PROF_DEPARTMENT_NUMBER",
	"PROF_EMPLOYEE_TYPE",
	"PROF_FLOOR",
	"PROF_EMPLOYEE_NUMBER" ,
	"PROF_PAGER_TYPE"  ,
	"PROF_PAGER_ID" ,
	"PROF_PAGER_SERVICE_PROVIDER",
	"PROF_PHYSICAL_DELIVERY_OFFICE",
	"PROF_PREFERRED_LANGUAGE",
	"PROF_SHIFT",
	"PROF_TITLE",
        "PROF_COURTESY_TITLE",
	"PROF_TIMEZONE", 
	"PROF_NATIVE_LAST_NAME",
	"PROF_NATIVE_FIRST_NAME",
	"PROF_BLOG_URL",
	"PROF_FREEBUSY_URL",
        "PROF_CALENDAR_URL",
		
	"PROF_DESCRIPTION",
        "PROF_EXPERIENCE"

FROM "EMPINST"."EMP_DRAFT_T"@
COMMIT@


--- step 4b: add constraints on new table
--- keep the following stmt in sync with postdbxfer.sql

--- step 5: drop temp table

DROP TABLE "EMPINST"."EMP_DRAFT_T"@
COMMIT@

--- step 6: create triggers/indices new table
--- keep the following stmts in sync with createdb.sql

CREATE UNIQUE INDEX "EMPINST"."EMP_DRAFT_PK" ON "EMPINST "."EMP_DRAFT" 
		("PROF_KEY" ASC, "PROF_UPDATE_SEQUENCE" ASC) @

-- DDL Statements for indexes on Table "EMPINST "."EMP_DRAFT"

CREATE INDEX "EMPINST"."ED_MAIL" ON "EMPINST "."EMP_DRAFT" 
		("PROF_MAIL" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."ED_PREF_FNX" ON "EMPINST "."EMP_DRAFT" 
		("PROF_PREFERRED_FIRST_NAME" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."ED_PREF_LNX" ON "EMPINST "."EMP_DRAFT" 
		("PROF_PREFERRED_LAST_NAME" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."ED_DISPNMX" ON "EMPINST "."EMP_DRAFT" 
		("PROF_DISPLAY_NAME" ASC) ALLOW REVERSE SCANS@
                        
COMMIT@
		
-- DDL Statements for triggers on Table "EMPINST"."EMP_DRAFT"

CREATE TRIGGER "EMPINST "."T_EMP_DRAFT_SEQ" NO CASCADE BEFORE INSERT ON "EMPINST "."EMP_DRAFT" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATE_SEQUENCE = NEXTVAL FOR "EMPINST"."EMP_DRAFT_SEQ"@


CREATE TRIGGER "EMPINST"."T_EMP_INS" AFTER INSERT ON "EMPINST"."EMP_DRAFT" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 INSERT INTO "EMPINST"."CHG_EMP_DRAFT" VALUES (NEXTVAL FOR "EMPINST"."CHG_EMP_DRAFT_SEQ", 0, 
			CURRENT_DATE, 'I', N.PROF_UPDATE_SEQUENCE, N.PROF_KEY )@

CREATE TRIGGER "EMPINST"."T_EMP_DEL" AFTER DELETE ON "EMPINST"."EMP_DRAFT" REFERENCING OLD AS N 
	FOR EACH ROW MODE DB2SQL
		 INSERT INTO "EMPINST"."CHG_EMP_DRAFT" VALUES (NEXTVAL FOR "EMPINST"."CHG_EMP_DRAFT_SEQ", 0, 
			CURRENT_DATE, 'D', N.PROF_UPDATE_SEQUENCE, N.PROF_KEY )@

CREATE TRIGGER "EMPINST"."T_EMP_UPD" AFTER UPDATE ON "EMPINST"."EMP_DRAFT" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 INSERT INTO "EMPINST"."CHG_EMP_DRAFT" VALUES (NEXTVAL FOR "EMPINST"."CHG_EMP_DRAFT_SEQ", 0, 
			CURRENT_DATE, 'U', N.PROF_UPDATE_SEQUENCE, N.PROF_KEY )@

COMMIT@

------------------------------------------------
-- update schema to current version
------------------------------------------------

UPDATE EMPINST.SNPROF_SCHEMA SET DBSCHEMAVER= 2 WHERE COMPKEY='Profiles'@
