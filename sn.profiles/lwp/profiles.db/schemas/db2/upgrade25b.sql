-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2001, 2013                                    
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

-- 5724-S68                                                          
CONNECT TO PEOPLEDB@ 
UPDATE DATABASE CONFIGURATION USING LOGPRIMARY 40 DEFERRED @ 
UPDATE DATABASE CONFIGURATION USING LOGSECOND 13 IMMEDIATE @ 
UPDATE DATABASE CONFIGURATION USING LOGFILSIZ 4096 DEFERRED @ 
CONNECT RESET@


CONNECT TO PEOPLEDB@


-- UPGRADE25A.SQL AND MigrateEmployeeTable JAVA PROGRAM MUST BE RUN BEFORE THIS SCRIPT

--- step 4b: add constraints on new table
--- keep the following stmt in sync with postdbxfer.sql

SET INTEGRITY FOR EMPINST.EMPLOYEE OFF@ 
ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN  PROF_MAIL_LOWER SET GENERATED ALWAYS AS (LOWER(PROF_MAIL))@ 
ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN  PROF_LOGIN_LOWER SET GENERATED ALWAYS AS (LOWER(PROF_LOGIN))@ 
ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN  PROF_GW_EMAIL_LOWER SET GENERATED ALWAYS AS (LOWER(PROF_GROUPWARE_EMAIL))@ 
ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN  PROF_UID_LOWER SET GENERATED ALWAYS AS (LOWER(PROF_UID))@ 
ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN  PROF_MANAGER_UID_LOWER SET GENERATED ALWAYS AS (LOWER(PROF_MANAGER_UID))@ 
SET INTEGRITY FOR EMPINST.EMPLOYEE IMMEDIATE CHECKED FORCE GENERATED@ 
COMMIT@

--- step 5: drop temp table

DROP TABLE "EMPINST"."EMPLOYEE_T"@
COMMIT@


--- step 6: create triggers/indices new table
--- keep the following stmts in sync with createdb.sql
-- DDL Statements for indexes on Table "EMPINST"."EMPLOYEE"

CREATE UNIQUE INDEX "EMPINST"."EMP_GUID_UDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_GUID" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."EMP_UID_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_UID" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."MAIL_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_MAIL" ASC) ALLOW REVERSE SCANS@	

CREATE INDEX "EMPINST"."MAIL_LOWER_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_MAIL_LOWER" ASC) ALLOW REVERSE SCANS@

CREATE UNIQUE INDEX "EMPINST"."UID_LOWER_UDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_UID_LOWER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."SRC_UID_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_SOURCE_UID" ASC) ALLOW REVERSE SCANS@

CREATE UNIQUE INDEX "EMPINST"."UID_LOWER_UDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_UID_LOWER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."GW_EMAIL_LOWER_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_GW_EMAIL_LOWER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."PREF_FNX" ON "EMPINST"."EMPLOYEE" 
		("PROF_PREFERRED_FIRST_NAME" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."PREF_LNX" ON "EMPINST"."EMPLOYEE" 
		("PROF_PREFERRED_LAST_NAME" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."DISPNMX" ON "EMPINST"."EMPLOYEE" 
		("PROF_DISPLAY_NAME" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."MGRIDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_MANAGER_UID" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."GRPEMAIL_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_GROUPWARE_EMAIL" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."JOB_RESP_UID_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_JOB_RESPONSIBILITIES", "PROF_KEY")@

CREATE INDEX "EMPINST"."ORG_UID_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_ORGANIZATION_IDENTIFIER", "PROF_KEY")@

CREATE INDEX "EMPINST"."COUNTRY_UID_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_ISO_COUNTRY_CODE", "PROF_KEY")@
		
CREATE INDEX "EMPINST"."FAX_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_FAX_TELEPHONE_NUMBER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."IPPHONE_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_IP_TELEPHONE_NUMBER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."MOBILE_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_MOBILE" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."PAGER_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_PAGER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."PHONE_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_TELEPHONE_NUMBER" ASC) ALLOW REVERSE SCANS@
                
CREATE INDEX "EMPINST"."WORKLOC_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_WORK_LOCATION" ASC) ALLOW REVERSE SCANS@
                           
CREATE INDEX "EMPINST"."LOGIN_LOWER_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_LOGIN_LOWER" ASC) ALLOW REVERSE SCANS@
                           

CREATE INDEX "EMPINST"."MANAGER_UID_LOWER_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_MANAGER_UID_LOWER" ASC) ALLOW REVERSE SCANS@

CREATE INDEX "EMPINST"."PROFILE_SEARCH_IDX" ON "EMPINST"."EMPLOYEE"
                ("PROF_LAST_UPDATE" ASC, "PROF_KEY" ASC)@
	
CREATE INDEX "EMPINST"."PROF_TYPE_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_TYPE" ASC) ALLOW REVERSE SCANS@

COMMIT@
		
-- DDL Statements for triggers on Table "EMPINST"."EMPLOYEE"

CREATE TRIGGER "EMPINST"."T_EMPLOYEE_INSRT" NO CASCADE BEFORE INSERT ON "EMPINST"."EMPLOYEE" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_LAST_UPDATE = CURRENT TIMESTAMP@

CREATE TRIGGER "EMPINST"."T_EMPLOYEE_UPDT" NO CASCADE BEFORE UPDATE ON "EMPINST"."EMPLOYEE" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_LAST_UPDATE = CURRENT TIMESTAMP@

COMMIT@


------------------------------------------------
-- DDL Statements for table "EMPINST"."GIVEN_NAME"
------------------------------------------------

ALTER TABLE "EMPINST"."GIVEN_NAME" ADD COLUMN "PROF_NAME_SOURCE" INTEGER DEFAULT 0@

RENAME TABLE "EMPINST"."GIVEN_NAME" TO "GIVEN_NAME_T"@
COMMIT@

CREATE TABLE "EMPINST"."GIVEN_NAME"  (
		  "PROF_KEY" VARCHAR(36) NOT NULL , 
		  "PROF_GIVENNAME" VARCHAR(128) NOT NULL,
		  "PROF_NAME_SOURCE" INTEGER DEFAULT 0 )
		  IN USERSPACE4K INDEX IN USERSPACE4K@


-- copy old data without duplicates 
INSERT INTO "EMPINST"."GIVEN_NAME" (SELECT DISTINCT * FROM "EMPINST"."GIVEN_NAME_T")@


DROP TABLE "EMPINST"."GIVEN_NAME_T"@
COMMIT@

-- DDL Statements for indexes on Table "EMPINST"."GIVEN_NAME"

CREATE INDEX "EMPINST"."GIVEN_NAMEX" ON "EMPINST"."GIVEN_NAME" 
		("PROF_KEY" ASC) @

CREATE INDEX "EMPINST"."GIVEN_NAME_IDX" ON "EMPINST"."GIVEN_NAME" 
		("PROF_GIVENNAME" ASC) @
		
CREATE UNIQUE INDEX "EMPINST"."GIVEN_NAME_UDX" ON "EMPINST"."GIVEN_NAME" 
		("PROF_KEY" ASC, "PROF_GIVENNAME" ASC) ALLOW REVERSE SCANS@


------------------------------------------------
-- DDL Statements for table "EMPINST"."SURNAME"
------------------------------------------------ 

ALTER TABLE "EMPINST"."SURNAME" ADD COLUMN "PROF_NAME_SOURCE" INTEGER DEFAULT 0@

RENAME TABLE "EMPINST"."SURNAME" TO "SURNAME_T"@
COMMIT@

CREATE TABLE "EMPINST"."SURNAME"  (
		  "PROF_KEY" VARCHAR(36) NOT NULL , 
		  "PROF_SURNAME" VARCHAR(128) NOT NULL,
		  "PROF_NAME_SOURCE" INTEGER DEFAULT 0 ) 
		  IN USERSPACE4K INDEX IN USERSPACE4K@


-- copy old data without duplicates 
INSERT INTO "EMPINST"."SURNAME" (SELECT DISTINCT * FROM "EMPINST"."SURNAME_T")@


DROP TABLE "EMPINST"."SURNAME_T"@
COMMIT@

-- DDL Statements for indexes on Table "EMPINST"."SURNAME"

CREATE INDEX "EMPINST"."SURNAMEX" ON "EMPINST"."SURNAME" 
		("PROF_KEY" ASC) @

CREATE INDEX "EMPINST"."SURNAME_IDX" ON "EMPINST"."SURNAME" 
		("PROF_SURNAME" ASC) @

CREATE UNIQUE INDEX "EMPINST"."SURNAME_UDX" ON "EMPINST"."SURNAME" 
		("PROF_KEY" ASC, "PROF_SURNAME" ASC)  ALLOW REVERSE SCANS@



------------------------------------------------
-- DDL Statements for table "EMPINST"."PHOTO"
------------------------------------------------

DROP TRIGGER "EMPINST "."T_PHOTO_INSRT"@ 
DROP TRIGGER "EMPINST "."T_PHOTO_UPDT"@ 

DROP INDEX  EMPINST.PHOTO_PK@
DROP INDEX  EMPINST.PHOTOIDX@

CALL SYSPROC.ALTOBJ ( 'APPLY_CONTINUE_ON_ERROR', 'CREATE TABLE EMPINST.PHOTO ( PROF_KEY VARCHAR (36) NOT NULL , PROF_FILE_TYPE VARCHAR (50) , PROF_UPDATED TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP , PROF_IMAGE BLOB (50000 ) LOGGED NOT COMPACT , PROF_THUMBNAIL BLOB (10000 ) LOGGED NOT COMPACT ) IN USERSPACE4K ', -1, ? )@

ALTER TABLE EMPINST.PHOTO ADD CONSTRAINT PHOTO_PK PRIMARY KEY (PROF_KEY)@


-- DDL Statements for indexes on Table "EMPINST"."PHOTO"

CREATE INDEX "EMPINST"."PHOTOIDX" ON "EMPINST"."PHOTO" 
		("PROF_UPDATED" DESC) ALLOW REVERSE SCANS@


-- DDL Statements for triggers on Table "EMPINST"."PHOTO"

CREATE TRIGGER "EMPINST"."T_PHOTO_INSRT" NO CASCADE BEFORE INSERT ON "EMPINST"."PHOTO" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATED = CURRENT TIMESTAMP@

CREATE TRIGGER "EMPINST"."T_PHOTO_UPDT" NO CASCADE BEFORE UPDATE ON "EMPINST"."PHOTO" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATED = CURRENT TIMESTAMP@

------------------------------------------------
-- DDL Statements for table "EMPINST"."PRONUNCIATION"
------------------------------------------------

DROP TRIGGER "EMPINST "."T_PRONOUNCE_INSRT"@ 
DROP TRIGGER "EMPINST "."T_PRONOUNCE_UPDT"@ 

DROP INDEX  EMPINST.PRONOUNCE_PK@
DROP INDEX  EMPINST.PRONOUNCEIDX@


CALL SYSPROC.ALTOBJ ( 'APPLY_CONTINUE_ON_ERROR', 'CREATE TABLE EMPINST.PRONUNCIATION ( PROF_KEY VARCHAR (36) NOT NULL , PROF_PRONOUNCE BLOB (100000 ) LOGGED NOT COMPACT , PROF_UPDATED TIMESTAMP NOT NULL WITH DEFAULT CURRENT TIMESTAMP ) IN USERSPACE4K ', -1, ? )@


ALTER TABLE EMPINST.PRONUNCIATION ADD CONSTRAINT PRONOUNCE_PK PRIMARY KEY (PROF_KEY)@

-- DDL Statements for indexes on Table "EMPINST"."PRONUNCIATION"

CREATE INDEX "EMPINST"."PRONOUNCEIDX" ON "EMPINST"."PRONUNCIATION" 
		("PROF_UPDATED" DESC) ALLOW REVERSE SCANS@

-- DDL Statements for indexes on Table "EMPINST"."PRONUNCIATION"

-- DDL Statements for triggers on Table "EMPINST"."PRONUNCIATION"
CREATE TRIGGER "EMPINST"."T_PRONOUNCE_INSRT" NO CASCADE BEFORE INSERT ON "EMPINST"."PRONUNCIATION" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATED = CURRENT TIMESTAMP@

CREATE TRIGGER "EMPINST"."T_PRONOUNCE_UPDT" NO CASCADE BEFORE UPDATE ON "EMPINST"."PRONUNCIATION" REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL 
		 SET N.PROF_UPDATED = CURRENT TIMESTAMP@

------------------------------------------------
-- DDL Statements for table "EMPINST"."WORKLOC"
------------------------------------------------

DROP INDEX  EMPINST.WORKLOC_PK@
ALTER TABLE EMPINST.WORKLOC ADD CONSTRAINT WORKLOC_PK PRIMARY KEY (PROF_WORK_LOC)@


------------------------------------------------
-- DDL Statements for table "EMPINST"."PROF_CONNECTIONS"
------------------------------------------------

CREATE INDEX "EMPINST"."CONN_TARGET_IDX" ON "EMPINST"."PROF_CONNECTIONS" 
	("PROF_TARGET_KEY" ASC, "PROF_STATUS" ASC, "PROF_TYPE" ASC) ALLOW REVERSE SCANS@

------------------------------------------------
-- DDL Statements for table "EMPINST"."PROF_CONSTANTS"
------------------------------------------------

CREATE TABLE EMPINST.PROF_CONSTANTS (
    PROF_PROPERTY_KEY VARCHAR (64) NOT NULL,
    PROF_PROPERTY_VALUE VARCHAR (128) NOT NULL,
 	CONSTRAINT PROF_CONSTANTS_PK PRIMARY KEY (PROF_PROPERTY_KEY)
) IN USERSPACE4K INDEX IN USERSPACE4K@

INSERT INTO EMPINST.PROF_CONSTANTS VALUES ('USERID_PROPERTY', 'guid')@

------------------------------------------------
-- DDL Statements for table "EMPINST"."SNCORE_SCHEMA"
------------------------------------------------

CREATE TABLE EMPINST.SNCORE_SCHEMA  (
	COMPKEY VARCHAR(128) NOT NULL,
	DBSCHEMAVER INTEGER NOT NULL,
	CONSTRAINT SNCORE_SCHEMA_PK PRIMARY KEY (COMPKEY)
) IN USERSPACE4K INDEX IN USERSPACE4K@

INSERT INTO EMPINST.SNCORE_SCHEMA (COMPKEY, DBSCHEMAVER) VALUES ('LC_APPEXT_CORE', 1)@



------------------------------------------------
-- DDL Statements for view "EMPINST"."EVENTLOG"
------------------------------------------------

CREATE TABLE EMPINST.EVENTLOG (
	"EVENT_KEY" 				VARCHAR(36) NOT NULL, 
	"EVENT_SOURCE" 				VARCHAR(36) NOT NULL, 
	"OBJECT_KEY"				VARCHAR(36) NOT NULL,
	"EVENT_NAME"				VARCHAR(128) NOT NULL, 
	"EVENT_TYPE"				INTEGER NOT NULL DEFAULT -1, 
	"CREATED" 				TIMESTAMP NOT NULL,
	"CREATED_BY_KEY"			VARCHAR(36) NOT NULL,
	"CREATED_BY_GUID"			VARCHAR(256) NOT NULL, 
	"CREATED_BY_UID"			VARCHAR(256) NOT NULL, 
	"CREATED_BY_NAME"			VARCHAR(128),
	"ISPRIVATE"				SMALLINT DEFAULT 0,
	"ISSYSEVENT"				SMALLINT DEFAULT 0,
	"EVENT_METADATA"			CLOB(2 M) LOGGED COMPACT,
	CONSTRAINT "PK" PRIMARY KEY ("EVENT_KEY")
) IN USERSPACE4K INDEX IN USERSPACE4K@

CREATE INDEX "EMPINST"."EVLOG_TYPE_IDX" ON EMPINST.EVENTLOG ("EVENT_TYPE" ASC,"CREATED" ASC, "EVENT_KEY" ASC) ALLOW REVERSE SCANS@


------------------------------------------------
-- DDL Statements for table "EMPINST"."PROFILE_LOGIN"
------------------------------------------------

CREATE TABLE "EMPINST"."PROFILE_LOGIN"  (
	"PROF_KEY" VARCHAR(36) NOT NULL , 
	"PROF_LOGIN" VARCHAR(256) NOT NULL,
	CONSTRAINT "LOGIN_PK" PRIMARY KEY ("PROF_KEY", "PROF_LOGIN" )
) IN USERSPACE4K INDEX IN USERSPACE4K@

CREATE UNIQUE INDEX "EMPINST"."LOGIN_UDX" ON "EMPINST"."PROFILE_LOGIN"
		("PROF_LOGIN")@


------------------------------------------------
-- DDL Statements for table "EMPINST"."PROFILE_PREFS"
------------------------------------------------

CREATE TABLE "EMPINST"."PROFILE_PREFS"  (
	"PROF_KEY" VARCHAR(36) NOT NULL , 
	"PROF_PREFID" VARCHAR(128) NOT NULL,
	"PROF_VALUE" VARCHAR(1024),
	CONSTRAINT "PREF_PK" PRIMARY KEY ("PROF_KEY", "PROF_PREFID" ) 
) IN USERSPACE4K INDEX IN USERSPACE4K@


------------------------------------------------
-- DDL Statements for table "EMPINST"."PROFILE_LAST_LOGIN"
------------------------------------------------
CREATE TABLE "EMPINST"."PROFILE_LAST_LOGIN"  (
	"PROF_KEY" VARCHAR(36) NOT NULL , 
	"PROF_LAST_LOGIN" TIMESTAMP NOT NULL,
	CONSTRAINT "LAST_LOGIN_PK" PRIMARY KEY ("PROF_KEY") 
) IN USERSPACE4K INDEX IN USERSPACE4K@



------------------------------------------------
-- DDL Statements for table "EMPINST"."PROFILE_EXTENSIONS"
------------------------------------------------

CREATE INDEX EMPINST.PROFILE_EXTENSIONS_IDX2 ON EMPINST.PROFILE_EXTENSIONS
 (PROF_NAME ASC, PROF_PROPERTY_ID ASC) ALLOW REVERSE SCANS@


------------------------------------------------
-- DDL Statements for table "EMPINST"."SNPROF_SCHEMA"
------------------------------------------------

------------------------------------------------
-- update schema to current version
------------------------------------------------

ALTER TABLE "EMPINST"."SNPROF_SCHEMA" ADD COLUMN "RELEASEVER" VARCHAR(32)@

UPDATE EMPINST.SNPROF_SCHEMA SET DBSCHEMAVER= 17 WHERE COMPKEY='Profiles'@
UPDATE EMPINST.SNPROF_SCHEMA SET RELEASEVER= '2.5.0.0' WHERE COMPKEY='Profiles'@

ALTER TABLE "EMPINST"."SNPROF_SCHEMA" ALTER COLUMN "RELEASEVER" SET NOT NULL@

UPDATE EMPINST.SNCORE_SCHEMA SET DBSCHEMAVER = 2 WHERE COMPKEY='LC_APPEXT_CORE'@

------------------------------------------------
-- Include msgvector work
------------------------------------------------
{include.createMsgVectorSchema250.sql}

------------------------------------------------
-- update permissions
------------------------------------------------

-- BECAUSE THE EMPLOYEE TABLE WAS RECREATED, THE PERMISSIONS MUST BE REGRANTED

GRANT DELETE, INSERT, SELECT, UPDATE ON "EMPINST"."EMPLOYEE" TO USER LCUSER@

-- THE FOLLOWING ARE NEW ADDITIONS TO APPGRANTS SINCE 2.0.1

GRANT DELETE, INSERT, SELECT, UPDATE ON "EMPINST"."PROF_CONSTANTS" TO USER LCUSER@
GRANT DELETE, INSERT, SELECT, UPDATE ON "EMPINST"."SNCORE_SCHEMA" TO USER LCUSER@
GRANT DELETE, INSERT, SELECT, UPDATE ON "EMPINST"."EVENTLOG" TO USER LCUSER@
GRANT DELETE, INSERT, SELECT, UPDATE ON "EMPINST"."PROFILE_LOGIN" TO USER LCUSER@
GRANT DELETE, INSERT, SELECT, UPDATE ON "EMPINST"."PROFILE_PREFS" TO USER LCUSER@
GRANT DELETE, INSERT, SELECT, UPDATE ON "EMPINST"."PROFILE_LAST_LOGIN" TO USER LCUSER@

-- includes grants for the wall
{include.msgVector-appGrants.sql}


-- includes grants for the wall
{include.msgVector-integOn.sql}

COMMIT@
CONNECT RESET@
