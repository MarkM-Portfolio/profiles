-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2009, 2013                                    
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

-- 5724-S68                                                          
CONNECT TO PEOPLEDB@

DROP TABLE EMPINST.USER_STATE_LAIDX@

{include.dynaDefsFixUp05.sql}

-- fix some indexes
DROP INDEX "EMPINST"."CONN_INDEX1"@
DROP INDEX "EMPINST"."CONN_INDEX2"@
DROP INDEX "EMPINST"."CONN_TARGET_IDX"@

-- Main index to select a users connections for showing friends in UI
CREATE INDEX EMPINST.CONN_INDEX1 ON EMPINST.PROF_CONNECTIONS
	(PROF_SOURCE_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_LASTMOD DESC, PROF_TARGET_KEY ASC) ALLOW REVERSE SCANS@

-- Friends in common@ get list of connection keys
-- 'isConnection' query
CREATE INDEX EMPINST.CONN_INDEX2 ON EMPINST.PROF_CONNECTIONS 
	(PROF_SOURCE_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_TARGET_KEY ASC, PROF_LASTMOD ASC) ALLOW REVERSE SCANS@

-- Reverse index for deletes
CREATE INDEX EMPINST.CONN_REV_IDX ON EMPINST.PROF_CONNECTIONS 
	(PROF_TARGET_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_SOURCE_KEY ASC, PROF_LASTMOD ASC) ALLOW REVERSE SCANS@
	

------------------------------------------------
-- DDL Statements for view "EMPINST"."EMPLOYEE"
------------------------------------------------

ALTER TABLE "EMPINST"."EMPLOYEE" ALTER COLUMN "PROF_TIMEZONE" SET DATA TYPE VARCHAR (64)@

COMMIT@	
	
--
-- User state look aside index table
--
CREATE TABLE EMPINST.USER_STATE_LAIDX (
	IDXID    CHAR(16) FOR BIT DATA NOT NULL,
	DEFID    CHAR(16) FOR BIT DATA NOT NULL,
	ATTRID	 CHAR(16) FOR BIT DATA NOT NULL,
	USRSTATE INTEGER NOT NULL,
	USRSTATE_UPDATED TIMESTAMP NOT NULL,
	OBJID    CHAR(16) FOR BIT DATA NOT NULL,
	OBJIDSTR   CHAR(36) NOT NULL,
	CONSTRAINT USRSTATE_PK PRIMARY KEY (IDXID)
) IN USERSPACE4K INDEX IN USERSPACE4K@

--
-- Foriegn key constraint on obj-ref table to clean up on deletion
--
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT USRSTATE_DEF_FK FOREIGN KEY (DEFID) 
	REFERENCES EMPINST.DYNA_DEFS(DEFID)
	ON DELETE CASCADE ON UPDATE NO ACTION ENFORCED ENABLE QUERY OPTIMIZATION@

--
-- Foriegn key constraint to reference field which contains value
--
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT USRSTATE_ATTR_FK FOREIGN KEY (ATTRID) 
	REFERENCES EMPINST.DYNA_ATTRS(ATTRID)
	ON DELETE CASCADE ON UPDATE NO ACTION ENFORCED ENABLE QUERY OPTIMIZATION@

--
-- Enforce single attr/idx-val
--
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT USRSTE_ATTR_UK UNIQUE (ATTRID)@

--
-- Constrain to one value per user
--
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT OBJID_UNIQUE UNIQUE (OBJID)@
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT OBJIDSTR_UNIQUE UNIQUE (OBJIDSTR)@

CREATE INDEX EMPINST.USRSTATE_CONS_VALB 
	ON EMPINST.USER_STATE_LAIDX (OBJID ASC, OBJIDSTR ASC, USRSTATE ASC, USRSTATE_UPDATED ASC)
	ALLOW REVERSE SCANS@
	
CREATE INDEX EMPINST.USRSTATE_CONS_VALS 
	ON EMPINST.USER_STATE_LAIDX (OBJIDSTR ASC, OBJID ASC, USRSTATE ASC, USRSTATE_UPDATED ASC)
	ALLOW REVERSE SCANS@
	
--
-- Main index for scanning
--
CREATE INDEX USRSTATE_IDX
	ON EMPINST.USER_STATE_LAIDX (USRSTATE ASC, USRSTATE_UPDATED ASC, OBJID ASC, OBJIDSTR ASC)
	ALLOW REVERSE SCANS@

--
-- User state look aside index table
--
CREATE TABLE EMPINST.USER_ORGS_LAIDX (
	IDXID    CHAR(16) FOR BIT DATA NOT NULL,
	DEFID    CHAR(16) FOR BIT DATA NOT NULL,
	ATTRID	  CHAR(16) FOR BIT DATA NOT NULL,
	ORGID	  VARCHAR(128) NOT NULL,
	OBJID    CHAR(16) FOR BIT DATA NOT NULL,
	OBJIDSTR CHAR(36) NOT NULL,
	CONSTRAINT USRORGS_PK PRIMARY KEY (IDXID)
) IN USERSPACE4K INDEX IN USERSPACE4K@

--
-- Foriegn key constraint on obj-ref table to clean up on deletion
--
ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_DEF_FK FOREIGN KEY (DEFID) 
	REFERENCES EMPINST.DYNA_DEFS(DEFID)
	ON DELETE CASCADE ON UPDATE NO ACTION ENFORCED ENABLE QUERY OPTIMIZATION@

--
-- Foriegn key constraint to reference field which contains value
--
ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_ATTR_FK FOREIGN KEY (ATTRID) 
	REFERENCES EMPINST.DYNA_ATTRS(ATTRID)
	ON DELETE CASCADE ON UPDATE NO ACTION ENFORCED ENABLE QUERY OPTIMIZATION@

--
-- Enforce single attr/idx-val
--
ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_ATTR_UK UNIQUE (ATTRID)@

--
-- Main index for scanning
--
CREATE INDEX EMPINST.USRORGS_IDX
	ON EMPINST.USER_ORGS_LAIDX (DEFID ASC, ORGID ASC, OBJIDSTR ASC, OBJID ASC)
	ALLOW REVERSE SCANS@

ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_C_OBJID UNIQUE (DEFID, OBJID, ORGID)@
ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_C_OBJIDS UNIQUE (DEFID, OBJIDSTR, ORGID)@

CREATE INDEX EMPINST.USRORGS_MEM_BIDX
	ON EMPINST.USER_ORGS_LAIDX (OBJID ASC, DEFID ASC, ORGID ASC, OBJIDSTR ASC)
	ALLOW REVERSE SCANS@

CREATE INDEX EMPINST.USRORGS_MEM_SIDX
	ON EMPINST.USER_ORGS_LAIDX (OBJIDSTR ASC, DEFID ASC, ORGID ASC, OBJID ASC)
	ALLOW REVERSE SCANS@

--
-- Denormalized names tables for query optimization
--

-- Fix given_name
ALTER TABLE EMPINST.GIVEN_NAME ADD COLUMN PROF_USRSTATE INTEGER DEFAULT 0 NOT NULL@

DROP INDEX EMPINST.GIVEN_NAMEX@	
DROP INDEX EMPINST.GIVEN_NAME_IDX@ 

CREATE INDEX EMPINST.GIVEN_NAME_IDX ON EMPINST.GIVEN_NAME (PROF_GIVENNAME ASC, PROF_KEY ASC, PROF_USRSTATE ASC)@

CREATE INDEX EMPINST.GIVEN_NAME_IDX2 ON EMPINST.GIVEN_NAME (PROF_USRSTATE ASC, PROF_GIVENNAME ASC, PROF_KEY ASC)@

CREATE INDEX EMPINST.GIVEN_NAMEX ON EMPINST.GIVEN_NAME (PROF_KEY ASC, PROF_GIVENNAME ASC, PROF_USRSTATE ASC)@

-- Fix surname
ALTER TABLE EMPINST.SURNAME ADD COLUMN PROF_USRSTATE INTEGER DEFAULT 0 NOT NULL@

DROP INDEX EMPINST.SURNAMEX@
DROP INDEX EMPINST.SURNAME_IDX@

CREATE INDEX EMPINST.SURNAME_IDX ON EMPINST.SURNAME (PROF_SURNAME ASC, PROF_KEY ASC, PROF_USRSTATE ASC)@

CREATE INDEX EMPINST.SURNAME_IDX2 ON EMPINST.SURNAME (PROF_USRSTATE ASC, PROF_SURNAME ASC, PROF_KEY ASC)@

CREATE INDEX EMPINST.SURNAMEX ON EMPINST.SURNAME (PROF_KEY ASC, PROF_SURNAME ASC, PROF_USRSTATE ASC)@

-- Update schema versions
UPDATE EMPINST.SNPROF_SCHEMA SET DBSCHEMAVER= 28 WHERE COMPKEY='Profiles'@


COMMIT@
CONNECT RESET@
