-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2007, 2016
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

------------------------------------------------
-- DDL Statements for schema EMPINST
------------------------------------------------

CREATE SCHEMA EMPINST;

------------------------------------------------
-- DDL Statements for table EMPINST.SNCOMM_SCHEMA
------------------------------------------------

CREATE TABLE EMPINST.SNPROF_SCHEMA (
	COMPKEY			VARCHAR(36) CCSID 1208 NOT NULL,
	DBSCHEMAVER		INTEGER NOT NULL,
	PRESCHEMAVER	VARCHAR(10) DEFAULT '0' NOT NULL,
	POSTSCHEMAVER	VARCHAR(10) DEFAULT '0' NOT NULL,
	RELEASEVER		VARCHAR(32) CCSID 1208 NOT NULL
);

INSERT INTO EMPINST.SNPROF_SCHEMA (COMPKEY, DBSCHEMAVER, POSTSCHEMAVER, RELEASEVER) VALUES ('Profiles', 55, '55.3', '6.0.0.0');

------------------------------------------------
-- DDL Statements for table EMPINST.TENANT
------------------------------------------------

CREATE TABLE EMPINST.TENANT  (
	TENANT_KEY VARCHAR(36) CCSID 1208 NOT NULL,
	TENANT_EXID VARCHAR(256) CCSID 1208 NOT NULL,
	TENANT_NAME  VARCHAR(256) CCSID 1208 NOT NULL,
	TENANT_NAME_LOWER  VARCHAR(256) CCSID 1208 NOT NULL,
	TENANT_STATE SMALLINT NOT NULL,
	TENANT_CREATED TIMESTAMP NOT NULL,
	--TENANT_CREATED_BY_KEY VARCHAR(36) CCSID 1208 NOT NULL,
	TENANT_LASTUPDATE TIMESTAMP NOT NULL
	--TENANT_LASTMOD_BY_KEY VARCHAR(36) CCSID 1208 NOT NULL
);

ALTER TABLE EMPINST.TENANT ADD CONSTRAINT EMPINST.TENANT_PK PRIMARY KEY (TENANT_KEY);

CREATE UNIQUE INDEX EMPINST.TENANT_EXID_UDX ON EMPINST.TENANT (TENANT_EXID ASC) ALLOW REVERSE SCANS ;

INSERT INTO EMPINST.TENANT(
	TENANT_KEY           ,
	TENANT_EXID          ,
	TENANT_NAME          ,
	TENANT_NAME_LOWER    ,
	TENANT_STATE        ,
	TENANT_CREATED       ,
	--TENANT_CREATED_BY_KEY,
	TENANT_LASTUPDATE
	--TENANT_LASTMOD_BY_KEY
)
VALUES(
	'a',
	'a',
	'Default Tenant',
	'default tenant',
	0,
	CURRENT_TIMESTAMP,    -- round to get rid of nano-seconds ?
	-- no admin,
	CURRENT_TIMESTAMP
	-- no admin
);

------------------------------------------------
-- DDL Statements for table EMPINST.EMPLOYEE
------------------------------------------------
 
CREATE TABLE EMPINST.EMPLOYEE  (
	PROF_KEY VARCHAR(36) CCSID 1208 NOT NULL,
	PROF_UID VARCHAR(256) CCSID 1208 NOT NULL,
	PROF_UID_LOWER  VARCHAR(256) CCSID 1208 NOT NULL,
	PROF_IDHASH VARCHAR(256) CCSID 1208 DEFAULT '?' NOT NULL,
	PROF_LAST_UPDATE TIMESTAMP NOT NULL,

	PROF_MAIL VARCHAR(256) CCSID 1208 ,
	PROF_MAIL_LOWER VARCHAR(256) CCSID 1208,
	PROF_GUID VARCHAR(256) CCSID 1208 NOT NULL,
	PROF_SOURCE_UID VARCHAR(256) CCSID 1208 NOT NULL,

	PROF_DISPLAY_NAME VARCHAR(256) CCSID 1208 ,
	PROF_LOGIN VARCHAR(256) CCSID 1208 ,
	PROF_LOGIN_LOWER VARCHAR(256) CCSID 1208,
	PROF_GIVEN_NAME VARCHAR(128) CCSID 1208,
	PROF_SURNAME VARCHAR(128) CCSID 1208,
	PROF_ALTERNATE_LAST_NAME VARCHAR(64) CCSID 1208 ,
	PROF_PREFERRED_FIRST_NAME VARCHAR(32) CCSID 1208 ,
	PROF_PREFERRED_LAST_NAME VARCHAR(64) CCSID 1208 ,
	PROF_TYPE			VARCHAR(64) CCSID 1208,

	PROF_MANAGER_UID VARCHAR(256) CCSID 1208 ,
	PROF_MANAGER_UID_LOWER VARCHAR(256) CCSID 1208,
	PROF_SECRETARY_UID VARCHAR(256) CCSID 1208 ,
	PROF_IS_MANAGER CHAR(1) CCSID 1208 ,

	PROF_GROUPWARE_EMAIL VARCHAR(128) CCSID 1208 ,
	PROF_GW_EMAIL_LOWER VARCHAR(128) CCSID 1208,
	PROF_JOB_RESPONSIBILITIES VARCHAR(128) CCSID 1208 ,
	PROF_ORGANIZATION_IDENTIFIER VARCHAR(64) CCSID 1208 ,
	PROF_ISO_COUNTRY_CODE VARCHAR(3) CCSID 1208 ,
	PROF_FAX_TELEPHONE_NUMBER VARCHAR(32) CCSID 1208 ,
	PROF_IP_TELEPHONE_NUMBER VARCHAR(32) CCSID 1208,
	PROF_MOBILE VARCHAR(32) CCSID 1208 ,
	PROF_PAGER VARCHAR(32) CCSID 1208 ,
	PROF_TELEPHONE_NUMBER VARCHAR(32) CCSID 1208 ,
	PROF_WORK_LOCATION VARCHAR(32) CCSID 1208 ,

	PROF_BUILDING_IDENTIFIER VARCHAR(64) CCSID 1208 ,
	PROF_DEPARTMENT_NUMBER VARCHAR(24) CCSID 1208 ,
	PROF_EMPLOYEE_TYPE VARCHAR(256) CCSID 1208 ,
	PROF_FLOOR VARCHAR(16) CCSID 1208 ,
	PROF_EMPLOYEE_NUMBER VARCHAR(16) CCSID 1208 ,
	PROF_PAGER_TYPE VARCHAR(16) CCSID 1208 ,
	PROF_PAGER_ID VARCHAR(32) CCSID 1208 ,
	PROF_PAGER_SERVICE_PROVIDER VARCHAR(50) CCSID 1208 ,
	PROF_PHYSICAL_DELIVERY_OFFICE VARCHAR(32) CCSID 1208 ,
	PROF_PREFERRED_LANGUAGE VARCHAR(100) CCSID 1208 ,
	PROF_SHIFT VARCHAR(4) CCSID 1208 ,
	PROF_TITLE VARCHAR(256) CCSID 1208 ,
	PROF_COURTESY_TITLE VARCHAR(64) CCSID 1208 ,
	PROF_TIMEZONE VARCHAR(64) CCSID 1208 , 
	PROF_NATIVE_LAST_NAME VARCHAR(256) CCSID 1208 ,
	PROF_NATIVE_FIRST_NAME VARCHAR(256) CCSID 1208 ,
	PROF_BLOG_URL VARCHAR(256) CCSID 1208 ,
	PROF_FREEBUSY_URL VARCHAR(256) CCSID 1208 ,
	PROF_CALENDAR_URL VARCHAR(256) CCSID 1208 ,

	PROF_DESCRIPTION CLOB(1 M) CCSID 1208 ,
	PROF_EXPERIENCE CLOB(1 M) CCSID 1208,
	PROF_SOURCE_URL VARCHAR(256) CCSID 1208,
	PROF_SRC_UID_LOWER VARCHAR(256) CCSID 1208 NOT NULL,
	TENANT_KEY		VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL,
	H_TENANT_KEY	VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL,
	PROF_STATE INTEGER DEFAULT 0 NOT NULL,
	PROF_MODE		SMALLINT DEFAULT 0 NOT NULL
);

COMMIT WORK;

ALTER TABLE EMPINST.EMPLOYEE ADD CONSTRAINT EMPINST.EMPLOYEE_PK PRIMARY KEY (PROF_KEY,TENANT_KEY);

CREATE UNIQUE INDEX EMPINST.EMP_GUID_UDX ON EMPINST.EMPLOYEE 
		(PROF_GUID ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.MAIL_LOWER_IDX ON EMPINST.EMPLOYEE 
		(PROF_MAIL_LOWER ASC, TENANT_KEY) ;

CREATE UNIQUE INDEX EMPINST.UID_LOWER_UDX ON EMPINST.EMPLOYEE 
		(PROF_UID_LOWER ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.IDHASH_UDX ON EMPINST.EMPLOYEE 
		(PROF_IDHASH ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.DISPNMX ON EMPINST.EMPLOYEE 
		(PROF_DISPLAY_NAME ASC, TENANT_KEY) ;
		
CREATE INDEX EMPINST.PROF_DISP_IDX ON EMPINST.EMPLOYEE 
		(PROF_KEY ASC, PROF_DISPLAY_NAME ASC, PROF_SURNAME ASC, PROF_GIVEN_NAME ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.PROF_SNGN_IDX ON EMPINST.EMPLOYEE 
		(PROF_KEY ASC, PROF_SURNAME ASC, PROF_GIVEN_NAME ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.PROF_GN2_IDX ON EMPINST.EMPLOYEE 
		(PROF_GIVEN_NAME ASC, PROF_KEY ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.PROF_SN2_IDX ON EMPINST.EMPLOYEE 
		(PROF_SURNAME ASC, PROF_KEY ASC, TENANT_KEY) ;
		                           
CREATE INDEX EMPINST.LOGIN_LOWER_IDX ON EMPINST.EMPLOYEE
		(PROF_LOGIN_LOWER ASC, TENANT_KEY) ;
                           
CREATE INDEX EMPINST.MANAGER_UID_LOWER_IDX ON EMPINST.EMPLOYEE
		(PROF_MANAGER_UID_LOWER ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.PROFILE_SEARCH_IDX ON EMPINST.EMPLOYEE
		(PROF_LAST_UPDATE ASC, PROF_KEY ASC);
	
CREATE INDEX EMPINST.PROF_TYPE_IDX ON EMPINST.EMPLOYEE 
		(PROF_TYPE ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.SRC_UID_LOWER_IDX ON EMPINST.EMPLOYEE 
		(PROF_SRC_UID_LOWER ASC, PROF_KEY ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.PROF_SRC_UID_IDX ON EMPINST.EMPLOYEE
		(PROF_SOURCE_UID ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.PROF_MODE ON EMPINST.EMPLOYEE 
		(PROF_MODE ASC, TENANT_KEY) ALLOW REVERSE SCANS ;
------------------------------------------------
-- DDL Statements for table EMPINST.GIVEN_NAME
------------------------------------------------
 
CREATE TABLE EMPINST.GIVEN_NAME  (
		PROF_KEY VARCHAR(36) CCSID 1208 NOT NULL , 
		PROF_GIVENNAME VARCHAR(128) CCSID 1208 NOT NULL,
		PROF_NAME_SOURCE INTEGER DEFAULT 0,
		PROF_USRSTATE INTEGER DEFAULT 0 NOT NULL,
		PROF_MODE		SMALLINT DEFAULT 0 NOT NULL,
		TENANT_KEY VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
);

ALTER TABLE EMPINST.GIVEN_NAME ADD CONSTRAINT EMPINST.GIVEN_NAME_PK PRIMARY KEY (PROF_KEY, PROF_GIVENNAME, TENANT_KEY);

CREATE INDEX EMPINST.GIVEN_NAME_IDX ON EMPINST.GIVEN_NAME (PROF_GIVENNAME ASC, PROF_KEY ASC, PROF_USRSTATE ASC, PROF_MODE ASC, TENANT_KEY);

CREATE INDEX EMPINST.GIVEN_NAME_IDX2 ON EMPINST.GIVEN_NAME (PROF_USRSTATE ASC, PROF_MODE ASC, PROF_GIVENNAME ASC, PROF_KEY ASC, TENANT_KEY);

CREATE INDEX EMPINST.GIVEN_NAMEX ON EMPINST.GIVEN_NAME (PROF_KEY ASC, PROF_GIVENNAME ASC, PROF_USRSTATE ASC, PROF_MODE ASC, TENANT_KEY);

------------------------------------------------
-- DDL Statements for table EMPINST.SURNAME
------------------------------------------------
 
CREATE TABLE EMPINST.SURNAME  (
		PROF_KEY VARCHAR(36) CCSID 1208 NOT NULL , 
		PROF_SURNAME VARCHAR(128) CCSID 1208 NOT NULL,
		PROF_NAME_SOURCE INTEGER DEFAULT 0,
		PROF_USRSTATE INTEGER DEFAULT 0 NOT NULL,
		PROF_MODE SMALLINT DEFAULT 0 NOT NULL,
		TENANT_KEY VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
);

ALTER TABLE EMPINST.SURNAME ADD CONSTRAINT EMPINST.SURNAME_PK PRIMARY KEY (PROF_KEY, PROF_SURNAME, TENANT_KEY);

CREATE INDEX EMPINST.SURNAME_IDX ON EMPINST.SURNAME (PROF_SURNAME ASC, PROF_KEY ASC, PROF_USRSTATE ASC, PROF_MODE ASC, TENANT_KEY);

CREATE INDEX EMPINST.SURNAME_IDX2 ON EMPINST.SURNAME (PROF_USRSTATE ASC, PROF_MODE ASC, PROF_SURNAME ASC, PROF_KEY ASC, TENANT_KEY);

CREATE INDEX EMPINST.SURNAMEX ON EMPINST.SURNAME (PROF_KEY ASC, PROF_SURNAME ASC, PROF_USRSTATE ASC, PROF_MODE ASC, TENANT_KEY);

------------------------------------------------
-- DDL Statements for table EMPINST.PROFILE_EXTENSIONS
------------------------------------------------
 
CREATE TABLE EMPINST.PROFILE_EXTENSIONS  (
		  PROF_KEY VARCHAR(36) CCSID 1208 NOT NULL ,     
		  PROF_PROPERTY_ID VARCHAR(64) CCSID 1208 NOT NULL ,  
		  PROF_EXT_KEY VARCHAR(256) CCSID 1208 ,
		  PROF_NAME VARCHAR(256) CCSID 1208 ,
		  PROF_DATA_TYPE VARCHAR(64) CCSID 1208 ,   
		  PROF_VALUE VARCHAR(1024) CCSID 1208,
		  PROF_VALUE_EXTENDED BLOB(10 M),
		  SUPPORT_LABEL SMALLINT  DEFAULT 0 NOT NULL,
		  TENANT_KEY VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
	) ;


ALTER TABLE EMPINST.PROFILE_EXTENSIONS ADD CONSTRAINT EMPINST.PROF_EXT_PK PRIMARY KEY (PROF_KEY, PROF_PROPERTY_ID, TENANT_KEY);

CREATE INDEX EMPINST.PROFILE_EXTENSIONS_IDX ON EMPINST.PROFILE_EXTENSIONS 
		(PROF_KEY ASC, TENANT_KEY)  ;
	
CREATE INDEX EMPINST.PROFILE_EXTENSIONS_IDX2 ON EMPINST.PROFILE_EXTENSIONS
 (PROF_NAME ASC, PROF_PROPERTY_ID ASC, TENANT_KEY) ;

------------------------------------------------
-- DDL Statements for sequence for Table EMPINST.PROFILE_EXT_DRAFT
------------------------------------------------

CREATE SEQUENCE EMPINST.EXT_DRAFT_SEQ;

------------------------------------------------
-- DDL Statements for sequence for Table EMPINST.PROFILE_EXT_DRAFT
------------------------------------------------
CREATE TABLE EMPINST.PROFILE_EXT_DRAFT  (
		  PROF_UPDATE_SEQUENCE INTEGER NOT NULL,
		  PROF_KEY VARCHAR(36) CCSID 1208 NOT NULL ,
		  PROF_PROPERTY_ID VARCHAR(64) CCSID 1208 NOT NULL,  
		  PROF_EXT_KEY VARCHAR(256) CCSID 1208 ,
		  PROF_NAME VARCHAR(256) CCSID 1208 ,
		  PROF_DATA_TYPE VARCHAR(64) CCSID 1208 ,   
		  PROF_VALUE VARCHAR(1024) CCSID 1208,
		  PROF_VALUE_EXTENDED BLOB(10 M),
		  TENANT_KEY		VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
	) ;

ALTER TABLE EMPINST.PROFILE_EXT_DRAFT ADD CONSTRAINT EMPINST.EXT_DRAFT_PK PRIMARY KEY (PROF_KEY, TENANT_KEY, PROF_UPDATE_SEQUENCE);

CREATE TRIGGER EMPINST.T_EXT_DRAFT_SEQ NO CASCADE BEFORE INSERT ON EMPINST.PROFILE_EXT_DRAFT REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2ROW 
		 SET N.PROF_UPDATE_SEQUENCE = NEXTVAL FOR EMPINST.EXT_DRAFT_SEQ;

------------------------------------------------
-- DDL Statements for table EMPINST.PEOPLE_TAG
------------------------------------------------
CREATE TABLE EMPINST.PEOPLE_TAG (
		PROF_TAG_ID VARCHAR(36) CCSID 1208 NOT NULL,
		PROF_SOURCE_KEY VARCHAR(36) CCSID 1208 NOT NULL,
		PROF_TARGET_KEY VARCHAR(36) CCSID 1208 NOT NULL,
		PROF_TAG VARCHAR(256) CCSID 1208 NOT NULL,
		PROF_TYPE	VARCHAR(36) CCSID 1208 DEFAULT 'general' NOT NULL,		
		TENANT_KEY	VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
);

ALTER TABLE EMPINST.PEOPLE_TAG ADD CONSTRAINT EMPINST.PEOPLE_TAG_PK PRIMARY KEY (PROF_TAG_ID, TENANT_KEY);

CREATE INDEX EMPINST.PEOPLE_TAG_IDX ON EMPINST.PEOPLE_TAG 
		(PROF_TAG ASC, PROF_TARGET_KEY ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.PEOPLE_TAG_IDX2 ON EMPINST.PEOPLE_TAG 
		(PROF_TARGET_KEY ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.PEOPLE_TAG_IDX3 ON EMPINST.PEOPLE_TAG 
		(PROF_TAG ASC, PROF_TYPE ASC, TENANT_KEY) ;

CREATE UNIQUE INDEX EMPINST.PEOPLE_TAG_UDX ON EMPINST.PEOPLE_TAG 
		(PROF_SOURCE_KEY ASC, PROF_TARGET_KEY ASC, PROF_TAG ASC, PROF_TYPE ASC, TENANT_KEY) ;

------------------------------------------------
-- DDL Statements for table EMPINST.DEPARTMENT
------------------------------------------------
 
CREATE TABLE EMPINST.DEPARTMENT  (
		  PROF_DEPARTMENT_CODE VARCHAR(24) CCSID 1208 NOT NULL, 
		  PROF_DEPARTMENT_TITLE VARCHAR(256) CCSID 1208,
		  TENANT_KEY VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
	) ; 

ALTER TABLE EMPINST.DEPARTMENT ADD CONSTRAINT EMPINST.DEPARTMENT_PK PRIMARY KEY (PROF_DEPARTMENT_CODE, TENANT_KEY);

------------------------------------------------
-- DDL Statements for table EMPINST.ORGANIZATION
------------------------------------------------
 
 CREATE TABLE EMPINST.ORGANIZATION  (
		  PROF_ORGANIZATION_CODE VARCHAR(64) CCSID 1208 NOT NULL, 
		  PROF_ORGANIZATION_TITLE VARCHAR(256) CCSID 1208,
		  TENANT_KEY VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
 ) ; 

ALTER TABLE EMPINST.ORGANIZATION ADD CONSTRAINT EMPINST.ORG_PK PRIMARY KEY (PROF_ORGANIZATION_CODE, TENANT_KEY);

------------------------------------------------
-- DDL Statements for table EMPINST.COUNTRY
------------------------------------------------

CREATE TABLE EMPINST.COUNTRY  (
		  PROF_ISO_COUNTRY_CODE VARCHAR(3) CCSID 1208 NOT NULL, 
		  PROF_COUNTRY_DESC VARCHAR(256) CCSID 1208,
		  TENANT_KEY VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
	) ;

ALTER TABLE EMPINST.COUNTRY ADD CONSTRAINT EMPINST.COUNTRY_PK PRIMARY KEY (PROF_ISO_COUNTRY_CODE, TENANT_KEY);

------------------------------------------------
-- DDL Statements for table EMPINST.EMP_TYPE
------------------------------------------------
 
CREATE TABLE EMPINST.EMP_TYPE  (
		  PROF_EMPLOYEE_TYPE VARCHAR(256) CCSID 1208 NOT NULL, 
		  PROF_EMPLOYEE_DESC VARCHAR(256) CCSID 1208,
		  TENANT_KEY VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
	) ;

ALTER TABLE EMPINST.EMP_TYPE ADD CONSTRAINT EMPINST.EMPTYPE_PK PRIMARY KEY (PROF_EMPLOYEE_TYPE, TENANT_KEY);

------------------------------------------------
-- DDL Statements for table EMPINST.PHOTO
------------------------------------------------
 
CREATE TABLE EMPINST.PHOTO  (
		  PROF_KEY VARCHAR(36) CCSID 1208 NOT NULL ,
		  PROF_FILE_TYPE VARCHAR(50) CCSID 1208 , 
		  PROF_UPDATED TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
		  PROF_IMAGE BLOB(50000) ,
		  PROF_THUMBNAIL BLOB(10000) ,
		  TENANT_KEY		VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
	) ; 

ALTER TABLE EMPINST.PHOTO ADD CONSTRAINT EMPINST.PHOTO_PK PRIMARY KEY (PROF_KEY, TENANT_KEY);

CREATE INDEX EMPINST.PHOTOIDX ON EMPINST.PHOTO 
		(PROF_UPDATED DESC, TENANT_KEY) ;

CREATE TABLE EMPINST.PHOTOBKUP  (
		  PROF_KEY			VARCHAR(36) CCSID 1208 NOT NULL , 
		  PROF_FILE_TYPE	VARCHAR(50) CCSID 1208 , 
		  PROF_UPDATED		TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
		  PROF_IMAGE		BLOB(50000) ,
		  PROF_THUMBNAIL	BLOB(10000) ,
		  TENANT_KEY		VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
	) ; 

ALTER TABLE EMPINST.PHOTOBKUP ADD CONSTRAINT EMPINST.PHOTOBK_PK PRIMARY KEY (PROF_KEY, TENANT_KEY);

CREATE TABLE EMPINST.PHOTO_GUID (
		  PROF_GUID			VARCHAR(36) CCSID 1208 NOT NULL , 
		  PROF_FILE_TYPE	VARCHAR(50) CCSID 1208 , 
		  PROF_UPDATED		TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL ,
		  PROF_IMAGE		BLOB(50000) ,
		  PROF_THUMBNAIL	BLOB(10000) ,
		  H_TENANT_KEY		VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
 ) ;
 
ALTER TABLE EMPINST.PHOTO_GUID ADD CONSTRAINT EMPINST.PHOTO_GUID_PK PRIMARY KEY (PROF_GUID);

------------------------------------------------
-- DDL Statements for table EMPINST.PRONUNCIATION
------------------------------------------------
 
CREATE TABLE EMPINST.PRONUNCIATION  (
		  PROF_KEY VARCHAR(36) CCSID 1208 NOT NULL , 
		  PROF_PRONOUNCE BLOB(100000) , 
		  PROF_UPDATED TIMESTAMP DEFAULT CURRENT TIMESTAMP NOT NULL,
		  PROF_FILE_TYPE VARCHAR(50) CCSID 1208 NOT NULL DEFAULT 'audio/wav',
		  TENANT_KEY		VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
	) ;  

ALTER TABLE EMPINST.PRONUNCIATION ADD CONSTRAINT EMPINST.PRONUNCIATION_PK PRIMARY KEY (PROF_KEY, TENANT_KEY);

CREATE INDEX EMPINST.PRONOUNCEIDX ON EMPINST.PRONUNCIATION 
		(PROF_UPDATED DESC, TENANT_KEY) ;

------------------------------------------------
-- DDL Statements for table EMPINST.WORKLOC
------------------------------------------------
 
CREATE TABLE EMPINST.WORKLOC  (
		PROF_WORK_LOC VARCHAR(32) CCSID 1208 NOT NULL , 
		PROF_ADDRESS1 VARCHAR(256) CCSID 1208 , 
		PROF_ADDRESS2 VARCHAR(256) CCSID 1208 , 
		PROF_CITY VARCHAR(128) CCSID 1208 , 
		PROF_STATE VARCHAR(16) CCSID 1208 , 
		PROF_POSTAL_CODE VARCHAR(16) CCSID 1208,
		TENANT_KEY VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
	) ; 

ALTER TABLE EMPINST.WORKLOC ADD CONSTRAINT EMPINST.WORKLOC_PK PRIMARY KEY (PROF_WORK_LOC, TENANT_KEY);

------------------------------------------------
-- DDL Statements for sequence for Table EMPINST.EMP_DRAFT
------------------------------------------------

CREATE SEQUENCE EMPINST.EMP_DRAFT_SEQ;

------------------------------------------------
-- DDL Statements for sequence for Table EMPINST.EMP_DRAFT
------------------------------------------------
CREATE TABLE EMPINST.EMP_DRAFT  (
	PROF_UPDATE_SEQUENCE INTEGER NOT NULL,
	PROF_KEY VARCHAR(36) CCSID 1208 NOT NULL ,
	PROF_UID VARCHAR(256) CCSID 1208 NOT NULL ,

	PROF_LAST_UPDATE TIMESTAMP NOT NULL,
	PROF_MAIL VARCHAR(64) CCSID 1208 ,
	PROF_SOURCE_UID VARCHAR(256) CCSID 1208,
	PROF_GUID VARCHAR(256) CCSID 1208,
	PROF_DISPLAY_NAME VARCHAR(256) CCSID 1208 ,
	PROF_LOGIN VARCHAR(256) CCSID 1208 ,
	PROF_GIVEN_NAME VARCHAR(128) CCSID 1208  ,
	PROF_SURNAME VARCHAR(128) CCSID 1208,
	PROF_ALTERNATE_LAST_NAME VARCHAR(64) CCSID 1208 ,
	PROF_PREFERRED_FIRST_NAME VARCHAR(32) CCSID 1208 ,
	PROF_PREFERRED_LAST_NAME VARCHAR(64) CCSID 1208 ,
	PROF_TYPE VARCHAR(64) CCSID 1208,

	PROF_MANAGER_UID VARCHAR(256) CCSID 1208 ,
	PROF_SECRETARY_UID VARCHAR(256) CCSID 1208 ,
	PROF_IS_MANAGER CHAR(1) CCSID 1208 ,

	PROF_GROUPWARE_EMAIL VARCHAR(128) CCSID 1208 ,
	PROF_JOB_RESPONSIBILITIES VARCHAR(128) CCSID 1208 ,
	PROF_ORGANIZATION_IDENTIFIER VARCHAR(64) CCSID 1208 ,
	PROF_ISO_COUNTRY_CODE VARCHAR(3) CCSID 1208 ,
	PROF_FAX_TELEPHONE_NUMBER VARCHAR(32) CCSID 1208 ,
	PROF_IP_TELEPHONE_NUMBER VARCHAR(32) CCSID 1208, 
	PROF_MOBILE VARCHAR(32) CCSID 1208 ,
	PROF_PAGER VARCHAR(32) CCSID 1208 ,
	PROF_TELEPHONE_NUMBER VARCHAR(32) CCSID 1208 ,
	PROF_WORK_LOCATION VARCHAR(32) CCSID 1208 ,

	PROF_BUILDING_IDENTIFIER VARCHAR(64) CCSID 1208 ,
	PROF_DEPARTMENT_NUMBER VARCHAR(24) CCSID 1208 ,
	PROF_EMPLOYEE_TYPE VARCHAR(256) CCSID 1208 ,
	PROF_FLOOR VARCHAR(16) CCSID 1208 ,
	PROF_EMPLOYEE_NUMBER VARCHAR(16) CCSID 1208 ,
	PROF_PAGER_TYPE VARCHAR(16) CCSID 1208 ,
	PROF_PAGER_ID VARCHAR(32) CCSID 1208 ,
	PROF_PAGER_SERVICE_PROVIDER VARCHAR(50) CCSID 1208 ,
	PROF_PHYSICAL_DELIVERY_OFFICE VARCHAR(32) CCSID 1208 ,
	PROF_PREFERRED_LANGUAGE VARCHAR(100) CCSID 1208 ,
	PROF_SHIFT VARCHAR(4) CCSID 1208 ,
	PROF_TITLE VARCHAR(256) CCSID 1208 ,
	PROF_COURTESY_TITLE VARCHAR(64) CCSID 1208 ,
	PROF_TIMEZONE VARCHAR(64) CCSID 1208 ,
	PROF_NATIVE_LAST_NAME VARCHAR(256) CCSID 1208 , 
	PROF_NATIVE_FIRST_NAME VARCHAR(256) CCSID 1208 ,
	PROF_BLOG_URL VARCHAR(256) CCSID 1208 ,
	PROF_FREEBUSY_URL VARCHAR(256) CCSID 1208 ,
	PROF_CALENDAR_URL VARCHAR(256) CCSID 1208 ,
	
	PROF_DESCRIPTION CLOB(1 M) CCSID 1208 ,
	PROF_EXPERIENCE CLOB(1 M) CCSID 1208 ,
	TENANT_KEY		VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
	);

ALTER TABLE EMPINST.EMP_DRAFT ADD CONSTRAINT EMPINST.EMP_DRAFT_PK PRIMARY KEY (PROF_KEY, PROF_UPDATE_SEQUENCE, TENANT_KEY);

CREATE TRIGGER EMPINST.EMPDRAFT_TENT_FK_DELETE_CASCADE
  AFTER DELETE ON EMPINST.TENANT
	REFERENCING  OLD AS OLDROW
    FOR EACH ROW  MODE DB2ROW
  WHEN (OLDROW.TENANT_KEY IS NOT NULL)
  BEGIN ATOMIC
	DELETE FROM EMPINST.EMP_DRAFT WHERE TENANT_KEY = OLDROW.TENANT_KEY;
  END;
--MODIFICATION end

	
CREATE TRIGGER EMPINST.T_EMP_DRAFT_SEQ NO CASCADE BEFORE INSERT ON EMPINST.EMP_DRAFT REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2ROW
		 SET N.PROF_UPDATE_SEQUENCE = NEXTVAL FOR EMPINST.EMP_DRAFT_SEQ;

CREATE INDEX EMPINST.ED_MAIL ON EMPINST.EMP_DRAFT 
		(PROF_MAIL ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.ED_DISPNMX ON EMPINST.EMP_DRAFT 
		(PROF_DISPLAY_NAME ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.ED_UPDATE_IDX ON EMPINST.EMP_DRAFT 
		(PROF_LAST_UPDATE DESC, PROF_KEY DESC, PROF_UPDATE_SEQUENCE DESC, TENANT_KEY);

------------------------------------------------
-- DDL Statements for table EMPINST.CHG_EMP_DRAFT
------------------------------------------------

CREATE TABLE EMPINST.CHG_EMP_DRAFT ( 
	IBMSNAP_COMMITSEQ INTEGER, 
	IBMSNAP_INTENTSEQ INTEGER, 
	IBMSNAP_LOGMARKER DATE, 
	IBMSNAP_OPERATION CHAR,
	PROF_UPDATE_SEQUENCE INTEGER NOT NULL,
	PROF_KEY VARCHAR(36) CCSID 1208 NOT NULL,
	TENANT_KEY		VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
) ;

CREATE SEQUENCE EMPINST.CHG_EMP_DRAFT_SEQ;


CREATE TRIGGER EMPINST.T_EMP_INS AFTER INSERT ON EMPINST.EMP_DRAFT REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL
		 INSERT INTO EMPINST.CHG_EMP_DRAFT VALUES (NEXTVAL FOR EMPINST.CHG_EMP_DRAFT_SEQ, 0, 
			CURRENT_DATE, 'I', N.PROF_UPDATE_SEQUENCE, N.PROF_KEY, N.TENANT_KEY);

CREATE TRIGGER EMPINST.T_EMP_DEL AFTER DELETE ON EMPINST.EMP_DRAFT REFERENCING OLD AS N 
	FOR EACH ROW MODE DB2SQL
		 INSERT INTO EMPINST.CHG_EMP_DRAFT VALUES (NEXTVAL FOR EMPINST.CHG_EMP_DRAFT_SEQ, 0, 
			CURRENT_DATE, 'D', N.PROF_UPDATE_SEQUENCE, N.PROF_KEY, N.TENANT_KEY );

CREATE TRIGGER EMPINST.T_EMP_UPD AFTER UPDATE ON EMPINST.EMP_DRAFT REFERENCING NEW AS N 
	FOR EACH ROW MODE DB2SQL
		 INSERT INTO EMPINST.CHG_EMP_DRAFT VALUES (NEXTVAL FOR EMPINST.CHG_EMP_DRAFT_SEQ, 0, 
			CURRENT_DATE, 'U', N.PROF_UPDATE_SEQUENCE, N.PROF_KEY, N.TENANT_KEY);


------------------------------------------------
-- DDL Statements for table EMPINST.PROF_CONNECTIONS
------------------------------------------------

CREATE TABLE EMPINST.PROF_CONNECTIONS (
		PROF_CONNECTION_ID VARCHAR(36) CCSID 1208 NOT NULL,
		PROF_SOURCE_KEY VARCHAR(36) CCSID 1208 NOT NULL,
		PROF_TARGET_KEY VARCHAR(36) CCSID 1208 NOT NULL,
		PROF_CREATED_BY_KEY VARCHAR(36) CCSID 1208 NOT NULL,
		PROF_LASTMOD_BY_KEY VARCHAR(36) CCSID 1208 NOT NULL,
		PROF_LASTMOD TIMESTAMP NOT NULL,
		PROF_CREATED TIMESTAMP NOT NULL,
		PROF_STATUS SMALLINT NOT NULL,
		PROF_TYPE VARCHAR(36) CCSID 1208 NOT NULL,
		PROF_MESSAGE VARCHAR(2000) CCSID 1208,
		TENANT_KEY		VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
	) ;
	
ALTER TABLE EMPINST.PROF_CONNECTIONS ADD CONSTRAINT EMPINST.CONNECTIONS_PK PRIMARY KEY (PROF_CONNECTION_ID, TENANT_KEY);

CREATE UNIQUE INDEX EMPINST.CONN_UDX ON EMPINST.PROF_CONNECTIONS
		(PROF_SOURCE_KEY ASC, PROF_TARGET_KEY ASC, PROF_TYPE ASC, TENANT_KEY);

-- Main index to select a users connections for showing friends in UI
CREATE INDEX EMPINST.CONN_INDEX1 ON EMPINST.PROF_CONNECTIONS
	(PROF_SOURCE_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_LASTMOD DESC, PROF_TARGET_KEY ASC, TENANT_KEY) ;

-- Friends in common; get list of connection keys 'isConnection' query
CREATE INDEX EMPINST.CONN_INDEX2 ON EMPINST.PROF_CONNECTIONS 
	(PROF_SOURCE_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_TARGET_KEY ASC, PROF_LASTMOD ASC, TENANT_KEY) ;

-- Reverse index for deletes
CREATE INDEX EMPINST.CONN_REV_IDX ON EMPINST.PROF_CONNECTIONS 
	(PROF_TARGET_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_SOURCE_KEY ASC, PROF_LASTMOD ASC, TENANT_KEY) ;

------------------------------------------------
-- DDL Statements for table EMPINST.PROF_CONSTANTS
------------------------------------------------

CREATE TABLE EMPINST.PROF_CONSTANTS (
    PROF_PROPERTY_KEY VARCHAR(64) CCSID 1208 NOT NULL,
    PROF_PROPERTY_VALUE VARCHAR(128) CCSID 1208 NOT NULL,
 	CONSTRAINT EMPINST.PROF_CONSTANTS_PK PRIMARY KEY (PROF_PROPERTY_KEY)
) ;

INSERT INTO EMPINST.PROF_CONSTANTS VALUES ('USERID_PROPERTY', 'guid');
INSERT INTO EMPINST.PROF_CONSTANTS VALUES ('sys.usrPhotoThumbnail.task', 'complete');

------------------------------------------------
-- DDL Statements for view EMPINST.EVENTLOG
------------------------------------------------

CREATE TABLE EMPINST.EVENTLOG (
	EVENT_KEY 		VARCHAR(36) CCSID 1208 NOT NULL, 
	EVENT_SOURCE 		VARCHAR(36) CCSID 1208 NOT NULL, 
	OBJECT_KEY		VARCHAR(36) CCSID 1208 NOT NULL,
	EVENT_NAME		VARCHAR(128) CCSID 1208 NOT NULL, 
	EVENT_TYPE		INTEGER NOT NULL DEFAULT -1, 
	CREATED 			TIMESTAMP NOT NULL,
	CREATED_BY_KEY	VARCHAR(36) CCSID 1208 NOT NULL,
	CREATED_BY_GUID	VARCHAR(256) CCSID 1208 NOT NULL, 
	CREATED_BY_UID	VARCHAR(256) CCSID 1208 NOT NULL, 
	CREATED_BY_NAME	VARCHAR(128) CCSID 1208,
	ISPRIVATE			SMALLINT DEFAULT 0,
	ISSYSEVENT		SMALLINT DEFAULT 0,
	EVENT_METADATA	CLOB(2 M) CCSID 1208,
	TENANT_KEY		VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
);

ALTER TABLE EMPINST.EVENTLOG ADD CONSTRAINT EMPINST.EVENTLOG_PK PRIMARY KEY (EVENT_KEY, TENANT_KEY);

CREATE INDEX EMPINST.EVLOG_TYPE_IDX ON EMPINST.EVENTLOG
	(EVENT_TYPE ASC,CREATED ASC, EVENT_KEY ASC, TENANT_KEY) ;

CREATE INDEX EMPINST.EVLOG_AUDIT_IDX ON EMPINST.EVENTLOG
	(ISSYSEVENT ASC, EVENT_KEY ASC, TENANT_KEY) ;

------------------------------------------------
-- DDL Statements for table EMPINST.PROFILE_LOGIN
------------------------------------------------

CREATE TABLE EMPINST.PROFILE_LOGIN  (
	PROF_KEY VARCHAR(36) CCSID 1208 NOT NULL , 
	PROF_LOGIN VARCHAR(256) CCSID 1208 NOT NULL,
	TENANT_KEY VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
) ;

ALTER TABLE EMPINST.PROFILE_LOGIN ADD CONSTRAINT EMPINST.PROFILE_LOGIN_PK PRIMARY KEY (PROF_KEY, PROF_LOGIN, TENANT_KEY);

CREATE UNIQUE INDEX EMPINST.LOGIN_UDX ON EMPINST.PROFILE_LOGIN
		(PROF_LOGIN,TENANT_KEY);

------------------------------------------------
-- DDL Statements for table EMPINST.PROFILE_PREFS
------------------------------------------------

CREATE TABLE EMPINST.PROFILE_PREFS  (
	PROF_KEY VARCHAR(36) CCSID 1208 NOT NULL , 
	PROF_PREFID VARCHAR(128) CCSID 1208 NOT NULL,
	PROF_VALUE VARCHAR(1024) CCSID 1208,
	TENANT_KEY	VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
) ;

ALTER TABLE EMPINST.PROFILE_PREFS ADD CONSTRAINT EMPINST.PROFILE_PREFS_PK PRIMARY KEY (PROF_KEY, PROF_PREFID, TENANT_KEY);

------------------------------------------------
-- DDL Statements for user to role mappings
------------------------------------------------

CREATE TABLE EMPINST.EMP_ROLE_MAP(
	MAP_KEY        VARCHAR(36) CCSID 1208 NOT NULL ,
	PROF_KEY       VARCHAR(36) CCSID 1208 NOT NULL ,
	ROLE_ID        VARCHAR(128) CCSID 1208 NOT NULL ,
	CREATED        TIMESTAMP NOT NULL ,
	TENANT_KEY	   VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
) ;

ALTER TABLE EMPINST.EMP_ROLE_MAP ADD CONSTRAINT EMPINST.EMP_ROLEMAP_PK PRIMARY KEY (MAP_KEY, TENANT_KEY);

CREATE UNIQUE INDEX EMPINST.EMP_ROLE_UDX ON EMPINST.EMP_ROLE_MAP (PROF_KEY, ROLE_ID, TENANT_KEY);

------------------------------------------------
-- DDL Statements for table EMPINST.PROFILE_LAST_LOGIN
------------------------------------------------

CREATE TABLE EMPINST.PROFILE_LAST_LOGIN  (
	PROF_KEY VARCHAR(36) CCSID 1208 NOT NULL , 
	PROF_LAST_LOGIN TIMESTAMP NOT NULL,
	PROF_LOCALE VARCHAR(32) CCSID 1208,
	TENANT_KEY	VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
) ;

ALTER TABLE EMPINST.PROFILE_LAST_LOGIN ADD CONSTRAINT EMPINST.LASTLOGIN_PK PRIMARY KEY (PROF_KEY, TENANT_KEY);

------------------------------------------------
-- DDL Statements for table EMPINST.EMP_UPDATE_TIMESTAMP
------------------------------------------------

CREATE TABLE EMPINST.EMP_UPDATE_TIMESTAMP (
	PROF_KEY 						VARCHAR(36) CCSID 1208 NOT NULL, 
	TENANT_KEY						VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL,
	LDAP_MOD_TIMESTAMP_SOURCE		VARCHAR(36)  CCSID 1208 NOT NULL,
	LDAP_MOD_TIMESTAMP	 			VARCHAR(128) CCSID 1208 DEFAULT '0' NOT NULL,
	MARK 							VARCHAR(1)  CCSID 1208 DEFAULT '0' NOT NULL
) ;

ALTER TABLE EMPINST.EMP_UPDATE_TIMESTAMP ADD CONSTRAINT EMPINST.TS_PK PRIMARY KEY (PROF_KEY, TENANT_KEY, LDAP_MOD_TIMESTAMP_SOURCE);

------------------------------------------------
-- DDL Statements for table EMPINST.USER_PLATFORM_EVENTS
------------------------------------------------

CREATE TABLE EMPINST.USER_PLATFORM_EVENTS  (
	EVENT_KEY BIGINT NOT NULL, 
	EVENT_TYPE VARCHAR(36) CCSID 1208 NOT NULL,
	PAYLOAD CLOB(100K) CCSID 1208,
	CREATED TIMESTAMP NOT NULL,
	TENANT_KEY VARCHAR(36) CCSID 1208 DEFAULT '00000000-0000-0000-0000-040508202233' NOT NULL
) ;

ALTER TABLE EMPINST.USER_PLATFORM_EVENTS ADD CONSTRAINT EMPINST.PLATFORMEVENTS_PK PRIMARY KEY (EVENT_KEY, TENANT_KEY);

CREATE SEQUENCE EMPINST.USER_PLATFORM_EVENT_INDEX_SEQ
	START WITH 0
	INCREMENT BY 1
	NO MAXVALUE
	NO CYCLE
	CACHE 20;

-------------------------------------------------------------------
-- START ADDING SCHEDULER TABLES
-------------------------------------------------------------------

CREATE TABLE EMPINST.PROFILES_SCHEDULER_TASK (
	TASKID BIGINT NOT NULL,
	VERSION VARCHAR(5) CCSID 1208 NOT NULL,
	ROW_VERSION INTEGER NOT NULL,
	TASKTYPE INTEGER NOT NULL,
	TASKSUSPENDED SMALLINT NOT NULL,
	CANCELLED SMALLINT NOT NULL,
	NEXTFIRETIME BIGINT NOT NULL,
	STARTBYINTERVAL VARCHAR(254) CCSID 1208,
	STARTBYTIME BIGINT,
	VALIDFROMTIME BIGINT,
	VALIDTOTIME BIGINT,
	REPEATINTERVAL VARCHAR(254) CCSID 1208,
	MAXREPEATS INTEGER NOT NULL,
	REPEATSLEFT INTEGER NOT NULL,
	TASKINFO BLOB(102400) ,
	NAME VARCHAR(254) CCSID 1208 NOT NULL,
	AUTOPURGE INTEGER NOT NULL,
	FAILUREACTION INTEGER,
	MAXATTEMPTS INTEGER,
	QOS INTEGER,
	PARTITIONID INTEGER,
	OWNERTOKEN VARCHAR(200) CCSID 1208 NOT NULL,
	CREATETIME BIGINT NOT NULL
) 
;

ALTER TABLE EMPINST.PROFILES_SCHEDULER_TASK 
	ADD PRIMARY KEY (TASKID);

CREATE INDEX EMPINST.PROFILES_SCHEDULER_TASK_IDX1 
	ON EMPINST.PROFILES_SCHEDULER_TASK (TASKID, OWNERTOKEN);

CREATE INDEX EMPINST.PROFILES_SCHEDULER_TASK_IDX2 
	ON EMPINST.PROFILES_SCHEDULER_TASK (NEXTFIRETIME ASC, REPEATSLEFT, PARTITIONID) ;

CREATE TABLE EMPINST.PROFILES_SCHEDULER_TREG (
	REGKEY VARCHAR(254) CCSID 1208 NOT NULL,
	REGVALUE VARCHAR(254) CCSID 1208 
) 
;

ALTER TABLE EMPINST.PROFILES_SCHEDULER_TREG 
	ADD PRIMARY KEY (REGKEY);

CREATE TABLE EMPINST.PROFILES_SCHEDULER_LMGR (
	LEASENAME VARCHAR(254) CCSID 1208 NOT NULL,
	LEASEOWNER VARCHAR(254) CCSID 1208 NOT NULL,
	LEASE_EXPIRE_TIME  BIGINT,
	DISABLED VARCHAR(5) CCSID 1208
)
;

ALTER TABLE EMPINST.PROFILES_SCHEDULER_LMGR
	ADD PRIMARY KEY (LEASENAME);

CREATE TABLE EMPINST.PROFILES_SCHEDULER_LMPR (
	LEASENAME VARCHAR(254) CCSID 1208 NOT NULL,
	NAME VARCHAR(254) CCSID 1208 NOT NULL,
	VALUE VARCHAR(254) CCSID 1208 NOT NULL
)
;

CREATE INDEX EMPINST.PROFILES_SCHEDULER_LMPR_IDX1 
	ON EMPINST.PROFILES_SCHEDULER_LMPR (LEASENAME, NAME);
	
-------------------------------------------------------------------
-- END ADDING SCHEDULER TABLES
-------------------------------------------------------------------

COMMIT;
