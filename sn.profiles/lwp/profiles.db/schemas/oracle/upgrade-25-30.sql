-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2009, 2010                                    
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

-- 5724-S68                                                          
------------------------------------------------
-- DDL Statements for view "EMPINST"."EMPLOYEE"
------------------------------------------------

DROP TRIGGER EMPINST.T_EMPLOYEE_INSRT;
DROP TRIGGER EMPINST."T_EMPLOYEE_UPDT";
DROP TRIGGER EMPINST."T_EMPLOYEE_UID_UPDT";
DROP TRIGGER EMPINST."T_EMPLOYEE_MAIL_UPDT";
DROP TRIGGER EMPINST."T_EMPLOYEE_GW_MAIL_UPDT";
DROP TRIGGER EMPINST."T_EMPLOYEE_LOGIN_UPDT";
DROP TRIGGER EMPINST."T_EMPLOYEE_MANAGER_UID_UPDT";

CREATE INDEX "EMPINST"."DISP_IDX" ON "EMPINST"."EMPLOYEE" 
	("PROF_KEY" ASC, "PROF_DISPLAY_NAME" ASC, "PROF_SURNAME" ASC, "PROF_GIVEN_NAME" ASC)
	TABLESPACE PROFINDEXTABSPACE;

CREATE INDEX "EMPINST"."PROF_SNGN_IDX" ON "EMPINST"."EMPLOYEE" 
	("PROF_KEY" ASC, "PROF_SURNAME" ASC, "PROF_GIVEN_NAME" ASC)
	TABLESPACE PROFINDEXTABSPACE;

CREATE INDEX "EMPINST"."PROF_GN2_IDX" ON "EMPINST"."EMPLOYEE" 
	("PROF_GIVEN_NAME" ASC, "PROF_KEY" ASC)
	TABLESPACE PROFINDEXTABSPACE;

CREATE INDEX "EMPINST"."PROF_SN2_IDX" ON "EMPINST"."EMPLOYEE" 
	("PROF_SURNAME" ASC, "PROF_KEY" ASC)
	TABLESPACE PROFINDEXTABSPACE;

ALTER TABLE "EMPINST"."EMPLOYEE" MODIFY "PROF_DEPARTMENT_NUMBER" VARCHAR2(24);
ALTER TABLE "EMPINST"."EMPLOYEE" MODIFY "PROF_TIMEZONE" VARCHAR2(64);

UPDATE EMPINST.EMPLOYEE SET PROF_LAST_UPDATE=CURRENT_TIMESTAMP WHERE PROF_LAST_UPDATE IS NULL;
ALTER TABLE EMPINST.EMPLOYEE MODIFY PROF_LAST_UPDATE NOT NULL;

UPDATE EMPINST.EMPLOYEE SET PROF_UID_LOWER=LOWER(PROF_UID);
UPDATE EMPINST.EMPLOYEE SET PROF_MAIL_LOWER=LOWER(PROF_MAIL);
UPDATE EMPINST.EMPLOYEE SET PROF_LOGIN_LOWER=LOWER(PROF_LOGIN);
UPDATE EMPINST.EMPLOYEE SET PROF_MANAGER_UID_LOWER=LOWER(PROF_MANAGER_UID);
UPDATE EMPINST.EMPLOYEE SET PROF_GW_EMAIL_LOWER=LOWER(PROF_GROUPWARE_EMAIL);

ALTER TABLE EMPINST.EMPLOYEE MODIFY PROF_UID_LOWER NOT NULL;
ALTER TABLE EMPINST.EMPLOYEE MODIFY PROF_SOURCE_UID NOT NULL;

ALTER TABLE EMPINST.EMPLOYEE ADD PROF_SRC_UID_LOWER VARCHAR2(256);
UPDATE EMPINST.EMPLOYEE SET PROF_SRC_UID_LOWER=LOWER(PROF_SOURCE_UID);
ALTER TABLE EMPINST.EMPLOYEE MODIFY PROF_SRC_UID_LOWER NOT NULL;

CREATE INDEX "EMPINST"."SRC_UID_LOWER_IDX" ON "EMPINST"."EMPLOYEE" 
		("PROF_SRC_UID_LOWER" ASC, "PROF_KEY" ASC) TABLESPACE PROFINDEXTABSPACE;

------------------------------------------------
-- DDL Statements for table "EMPINST"."SURNAME"
------------------------------------------------

ALTER TABLE EMPINST.SURNAME ADD PROF_USRSTATE NUMBER(19,0) DEFAULT 0 NOT NULL;

DROP INDEX EMPINST.SURNAME_UDX;
DROP INDEX EMPINST.SURNAMEX;
DROP INDEX EMPINST.SURNAME_IDX;

ALTER TABLE EMPINST.SURNAME ADD CONSTRAINT SURNAME_PK PRIMARY KEY (PROF_KEY, PROF_SURNAME);

CREATE INDEX EMPINST.SURNAME_IDX ON EMPINST.SURNAME (PROF_SURNAME ASC, PROF_KEY ASC, PROF_USRSTATE ASC) TABLESPACE PROFINDEXTABSPACE;

CREATE INDEX EMPINST.SURNAME_IDX2 ON EMPINST.SURNAME (PROF_USRSTATE ASC, PROF_SURNAME ASC, PROF_KEY ASC) TABLESPACE PROFINDEXTABSPACE;

CREATE INDEX EMPINST.SURNAMEX ON EMPINST.SURNAME (PROF_KEY ASC, PROF_SURNAME ASC, PROF_USRSTATE ASC) TABLESPACE PROFINDEXTABSPACE;

------------------------------------------------
-- DDL Statements for table "EMPINST"."GIVEN_NAME"
------------------------------------------------

ALTER TABLE EMPINST.GIVEN_NAME ADD PROF_USRSTATE NUMBER(19,0) DEFAULT 0 NOT NULL;

DROP INDEX EMPINST.GIVEN_NAME_UDX;
DROP INDEX EMPINST.GIVEN_NAMEX;	
DROP INDEX EMPINST.GIVEN_NAME_IDX;

ALTER TABLE EMPINST.GIVEN_NAME ADD CONSTRAINT GIVEN_NAME_PK PRIMARY KEY (PROF_KEY, PROF_GIVENNAME);

CREATE INDEX EMPINST.GIVEN_NAME_IDX ON EMPINST.GIVEN_NAME (PROF_GIVENNAME ASC, PROF_KEY ASC, PROF_USRSTATE ASC) TABLESPACE PROFINDEXTABSPACE;

CREATE INDEX EMPINST.GIVEN_NAME_IDX2 ON EMPINST.GIVEN_NAME (PROF_USRSTATE ASC, PROF_GIVENNAME ASC, PROF_KEY ASC) TABLESPACE PROFINDEXTABSPACE;

CREATE INDEX EMPINST.GIVEN_NAMEX ON EMPINST.GIVEN_NAME (PROF_KEY ASC, PROF_GIVENNAME ASC, PROF_USRSTATE ASC) TABLESPACE PROFINDEXTABSPACE;


------------------------------------------------
-- DDL Statements for table "EMPINST"."EMP_DRAFT"
------------------------------------------------

ALTER TABLE "EMPINST"."EMP_DRAFT" MODIFY "PROF_DEPARTMENT_NUMBER" VARCHAR2(24);
ALTER TABLE "EMPINST"."EMP_DRAFT" MODIFY "PROF_TIMEZONE" VARCHAR2(64);

UPDATE EMPINST.EMP_DRAFT SET PROF_LAST_UPDATE=CURRENT_TIMESTAMP WHERE PROF_LAST_UPDATE IS NULL;

ALTER TABLE EMPINST.EMP_DRAFT MODIFY PROF_LAST_UPDATE NOT NULL;

DROP INDEX EMPINST.ED_PREF_FNX;
DROP INDEX EMPINST.ED_PREF_LNX;

CREATE INDEX ED_UPDATE_IDX ON EMPINST.EMP_DRAFT 
	(PROF_LAST_UPDATE DESC, PROF_KEY DESC, PROF_UPDATE_SEQUENCE DESC) TABLESPACE PROFINDEXTABSPACE;

------------------------------------------------
-- DDL Statements for table "EMPINST"."PROF_CONNECTIONS"
------------------------------------------------

-- fix some indexes
DROP INDEX "EMPINST"."INDEX CONN_INDEX1";
DROP INDEX "EMPINST"."INDEX CONN_INDEX2";
DROP INDEX "EMPINST"."CONN_TARGET_IDX";

-- Main index to select a users connections for showing friends in UI
CREATE INDEX EMPINST.CONN_INDEX1 ON EMPINST.PROF_CONNECTIONS
	(PROF_SOURCE_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_LASTMOD DESC, PROF_TARGET_KEY ASC) TABLESPACE PROFINDEXTABSPACE;
CREATE INDEX EMPINST.CONN_INDEX1B ON EMPINST.PROF_CONNECTIONS
	(PROF_SOURCE_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_LASTMOD ASC, PROF_TARGET_KEY ASC) TABLESPACE PROFINDEXTABSPACE;

-- Friends in common; get list of connection keys
-- 'isConnection' query
CREATE INDEX EMPINST.CONN_INDEX2 ON EMPINST.PROF_CONNECTIONS 
	(PROF_SOURCE_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_TARGET_KEY ASC, PROF_LASTMOD ASC) TABLESPACE PROFINDEXTABSPACE;

-- Reverse index for deletes
CREATE INDEX EMPINST.CONN_REV_IDX ON EMPINST.PROF_CONNECTIONS 
	(PROF_TARGET_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_SOURCE_KEY ASC, PROF_LASTMOD ASC) TABLESPACE PROFINDEXTABSPACE;

------------------------------------------------
-- DDL Statements for table "EMPINST"."DEPARTMENT"
------------------------------------------------

ALTER TABLE "EMPINST"."DEPARTMENT" MODIFY "PROF_DEPARTMENT_CODE" VARCHAR2(24);

------------------------------------------------
-- DDL Statements for view "EMPINST"."PHOTO"
------------------------------------------------

DROP TRIGGER "EMPINST"."T_PHOTO_INSRT";

DROP TRIGGER "EMPINST"."T_PHOTO_UPDT";

------------------------------------------------
-- DDL Statements for table "EMPINST"."PRONUNCIATION"
------------------------------------------------

DROP TRIGGER "EMPINST"."T_PRONOUNCE_INSRT";

DROP TRIGGER "EMPINST"."T_PRONOUNCE_UPDT";

ALTER TABLE "EMPINST"."PRONUNCIATION" ADD "PROF_FILE_TYPE" VARCHAR (50) DEFAULT 'audio/wav' NOT NULL ;


------------------------------------------------
-- DDL Statements for view "EMPINST"."EVENTLOG"
------------------------------------------------

CREATE INDEX EVLOG_AUDIT_IDX ON EMPINST.EVENTLOG (ISSYSEVENT ASC, EVENT_KEY ASC) TABLESPACE PROFINDEXTABSPACE;

------------------------------------------------
-- DDL Statements for table "EMPINST"."PEOPLE_TAG"
------------------------------------------------

CREATE INDEX EMPINST."PEOPLE_TAG_IDX2" ON EMPINST."PEOPLE_TAG" 
	("PROF_TARGET_KEY" ASC, "PROF_TAG" ASC, "PROF_SOURCE_KEY" ASC) TABLESPACE PROFINDEXTABSPACE;

------------------------------------------------
-- DDL Statements for table "EMPINST"."USER_PLATFORM_EVENTS"
------------------------------------------------

CREATE TABLE "EMPINST"."USER_PLATFORM_EVENTS"  (
	"EVENT_KEY" NUMBER(19, 0) NOT NULL, 
	"EVENT_TYPE" VARCHAR2(36) NOT NULL,
	"PAYLOAD" CLOB,
	"CREATED" TIMESTAMP NOT NULL,
	PRIMARY KEY ("EVENT_KEY") 
) TABLESPACE PROFREGTABSPACE;

CREATE SEQUENCE "EMPINST"."USER_PLATFORM_EVENT_INDEX_SEQ"
	START WITH 0
	INCREMENT BY 1
	NOMAXVALUE
	MINVALUE 0
	NOCYCLE
	CACHE 20;

-------------------------------------------------------------------
-- START ADDING SCHEDULER TABLES
-------------------------------------------------------------------

CREATE TABLE "EMPINST"."PROFILES_SCHEDULER_TASK" (
	TASKID NUMBER(19, 0) NOT NULL,
	VERSION VARCHAR2(5) NOT NULL,
	ROW_VERSION NUMBER(10, 0) NOT NULL,
	TASKTYPE NUMBER(10, 0) NOT NULL,
	TASKSUSPENDED NUMBER(5, 0) NOT NULL,
	CANCELLED NUMBER(5, 0) NOT NULL,
	NEXTFIRETIME NUMBER(19, 0) NOT NULL,
	STARTBYINTERVAL VARCHAR2(254),
	STARTBYTIME NUMBER(19, 0),
	VALIDFROMTIME NUMBER(19, 0),
	VALIDTOTIME NUMBER(19, 0),
	REPEATINTERVAL VARCHAR2(254),
	MAXREPEATS NUMBER(10, 0) NOT NULL,
	REPEATSLEFT NUMBER(10, 0) NOT NULL,
	TASKINFO BLOB,
	NAME VARCHAR2(254) NOT NULL,
	AUTOPURGE NUMBER(10, 0) NOT NULL,
	FAILUREACTION NUMBER(10, 0),
	MAXATTEMPTS NUMBER(10, 0),
	QOS NUMBER(10, 0),
	PARTITIONID NUMBER(10, 0),
	OWNERTOKEN VARCHAR2(200) NOT NULL,
	CREATETIME NUMBER(19, 0) NOT NULL,
	PRIMARY KEY (TASKID)
) 
TABLESPACE PROFREGTABSPACE;

CREATE INDEX "EMPINST".PROFILES_SCHEDULER_TASK_IDX1 
	ON "EMPINST"."PROFILES_SCHEDULER_TASK" ("TASKID", "OWNERTOKEN") TABLESPACE PROFINDEXTABSPACE;

CREATE INDEX "EMPINST".PROFILES_SCHEDULER_TASK_IDX2 
	ON "EMPINST"."PROFILES_SCHEDULER_TASK" ("NEXTFIRETIME" ASC, "REPEATSLEFT", "PARTITIONID") TABLESPACE PROFINDEXTABSPACE;

CREATE TABLE "EMPINST"."PROFILES_SCHEDULER_TREG" (
	REGKEY VARCHAR2(254) NOT NULL,
	REGVALUE VARCHAR2(254),
	PRIMARY KEY (REGKEY)
) 
TABLESPACE PROFREGTABSPACE;

CREATE TABLE "EMPINST"."PROFILES_SCHEDULER_LMGR" (
	LEASENAME VARCHAR2(254) NOT NULL,
	LEASEOWNER VARCHAR2(254) NOT NULL,
	LEASE_EXPIRE_TIME  NUMBER(19, 0),
	DISABLED VARCHAR2(5),
	PRIMARY KEY (LEASENAME)
)
TABLESPACE PROFREGTABSPACE;


CREATE TABLE "EMPINST"."PROFILES_SCHEDULER_LMPR" (
	LEASENAME VARCHAR2(254) NOT NULL,
	NAME VARCHAR2(254) NOT NULL,
	VALUE VARCHAR2(254) NOT NULL
)
TABLESPACE PROFREGTABSPACE;

CREATE INDEX "EMPINST"."PROFILES_SCHEDULER_LMPR_IDX1"
	ON "EMPINST"."PROFILES_SCHEDULER_LMPR" ("LEASENAME", "NAME") TABLESPACE PROFINDEXTABSPACE;
	
-------------------------------------------------------------------
-- END ADDING SCHEDULER TABLES
-------------------------------------------------------------------

------------------------------------------------
-- Stuff to create external index dynattr
------------------------------------------------

{include.createDynaDefs.sql}

--
-- User state look aside index table
--
CREATE TABLE EMPINST.USER_STATE_LAIDX (
	IDXID    RAW(16) NOT NULL,
	DEFID    RAW(16) NOT NULL,
	ATTRID	 RAW(16) NOT NULL,
	USRSTATE INTEGER NOT NULL,
	USRSTATE_UPDATED TIMESTAMP NOT NULL,
	OBJID    RAW(16) NOT NULL,
	OBJIDSTR   CHAR(36) NOT NULL,
	CONSTRAINT USRSTATE_PK PRIMARY KEY (IDXID)
) TABLESPACE PROFREGTABSPACE;

--
-- Foriegn key constraint on obj-ref table to clean up on deletion
--
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT USRSTATE_DEF_FK FOREIGN KEY (DEFID) 
	REFERENCES EMPINST.DYNA_DEFS(DEFID)
	ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE;

--
-- Foriegn key constraint to reference field which contains value
--
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT USRSTATE_ATTR_FK FOREIGN KEY (ATTRID) 
	REFERENCES EMPINST.DYNA_ATTRS(ATTRID)
	ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE;

--
-- Enforce single attr/idx-val
--
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT USRSTATE_ATTR_UK UNIQUE (ATTRID);

--
-- Constrain to one value per user
--
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT OBJID_UNIQUE UNIQUE (OBJID);
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT OBJIDSTR_UNIQUE UNIQUE (OBJIDSTR);

CREATE INDEX USRSTATE_CONS_VALB 
	ON EMPINST.USER_STATE_LAIDX (OBJID ASC, OBJIDSTR ASC, USRSTATE ASC, USRSTATE_UPDATED ASC)
	 TABLESPACE PROFINDEXTABSPACE;
	
CREATE INDEX EMPINST.USRSTATE_CONS_VALS 
	ON EMPINST.USER_STATE_LAIDX (OBJIDSTR ASC, OBJID ASC, USRSTATE ASC, USRSTATE_UPDATED ASC)
	TABLESPACE PROFINDEXTABSPACE; 

--
-- Main index for scanning
--
CREATE INDEX EMPINST.USRSTATE_IDX
	ON EMPINST.USER_STATE_LAIDX (USRSTATE ASC, USRSTATE_UPDATED ASC, OBJID ASC, OBJIDSTR ASC)
	TABLESPACE PROFINDEXTABSPACE;


--
-- User state look aside index table
--
CREATE TABLE EMPINST.USER_ORGS_LAIDX (
	IDXID    RAW(16) NOT NULL,
	DEFID    RAW(16) NOT NULL,
	ATTRID	 RAW(16) NOT NULL,
	ORGID	 VARCHAR2(128) NOT NULL,
	OBJID    RAW(16) NOT NULL,
	OBJIDSTR CHAR(36) NOT NULL,
	CONSTRAINT USRORGS_PK PRIMARY KEY (IDXID)
) TABLESPACE PROFREGTABSPACE;

--
-- Foriegn key constraint on obj-ref table to clean up on deletion
--
ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_DEF_FK FOREIGN KEY (DEFID) 
	REFERENCES EMPINST.DYNA_DEFS(DEFID)
	ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE;

--
-- Foriegn key constraint to reference field which contains value
--
ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_ATTR_FK FOREIGN KEY (ATTRID) 
	REFERENCES EMPINST.DYNA_ATTRS(ATTRID)
	ON DELETE CASCADE INITIALLY DEFERRED DEFERRABLE;

--
--
--
ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRSTE_ATTR_UK UNIQUE (ATTRID);

--
-- Main index for scanning
--
CREATE INDEX EMPINST.USRORGS_IDX
	ON EMPINST.USER_ORGS_LAIDX (DEFID ASC, ORGID ASC, OBJIDSTR ASC, OBJID ASC);


ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_C_OBJID UNIQUE (DEFID, OBJID, ORGID);
ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_C_OBJIDS UNIQUE (DEFID, OBJIDSTR, ORGID);

CREATE INDEX EMPINST.USRORGS_MEM_BIDX
	ON EMPINST.USER_ORGS_LAIDX (OBJID ASC, DEFID ASC, ORGID ASC, OBJIDSTR ASC)
	TABLESPACE PROFINDEXTABSPACE;
	
CREATE UNIQUE INDEX EMPINST.USRORGS_MEM_SIDX
	ON EMPINST.USER_ORGS_LAIDX (OBJIDSTR ASC, DEFID ASC, ORGID ASC, OBJID ASC)
	TABLESPACE PROFINDEXTABSPACE;

--
-- Board schema updates
--
{include.msgVector-fixup5.sql}

--
-- Add state field for lookaside index tables
--
INSERT INTO EMPINST.PROF_CONSTANTS VALUES ('LA_IDX_STATE', 'inconsistent');

--
-- compile triggers
--
ALTER TRIGGER EMPINST.T_EMP_DEL       COMPILE;
ALTER TRIGGER EMPINST.T_EMP_DRAFT_SEQ COMPILE;
ALTER TRIGGER EMPINST.T_EMP_INS       COMPILE;
ALTER TRIGGER EMPINST.T_EMP_UPD       COMPILE;
ALTER TRIGGER EMPINST.T_EXT_DRAFT_SEQ COMPILE;

------------------------------------------------
-- Update schema version
------------------------------------------------
UPDATE EMPINST.SNPROF_SCHEMA SET DBSCHEMAVER= 29, RELEASEVER='3.0.0.0' WHERE COMPKEY='Profiles';

COMMIT;

QUIT;
