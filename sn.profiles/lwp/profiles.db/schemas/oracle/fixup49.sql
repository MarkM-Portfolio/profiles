-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2014, 2015
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

-- 5724-S68

------
-- add TENANT TENANT_EXID_IDX
------

SELECT COUNT(*) AS INITIAL_STATE
    FROM ALL_INDEXES
    WHERE INDEX_NAME = 'CONN_UDX' AND OWNER = 'EMPINST' AND TABLE_NAME = 'PROF_CONNECTIONS';

-- CREATE UNIQUE INDEX EMPINST."CONN_UDX" ON EMPINST.PROF_CONNECTIONS (PROF_SOURCE_KEY, PROF_TARGET_KEY, PROF_TYPE, TENANT_KEY) TABLESPACE PROFINDEXTABSPACE;

DECLARE
  COUNT_INDEXES INTEGER;
BEGIN
  SELECT COUNT(*) INTO COUNT_INDEXES
    FROM ALL_INDEXES
    WHERE INDEX_NAME = 'CONN_UDX' AND OWNER = 'EMPINST' AND TABLE_NAME = 'PROF_CONNECTIONS';

  IF COUNT_INDEXES > 0 THEN
    EXECUTE IMMEDIATE 'DROP INDEX EMPINST.CONN_UDX';
  END IF;
END;
/

SELECT COUNT(*) AS AFTER_DROP_WHEN_EXISTS
    FROM ALL_INDEXES
    WHERE INDEX_NAME = 'CONN_UDX' AND OWNER = 'EMPINST' AND TABLE_NAME = 'PROF_CONNECTIONS';

DECLARE
  COUNT_INDEXES INTEGER;
BEGIN
  SELECT COUNT(*) INTO COUNT_INDEXES
    FROM ALL_INDEXES
    WHERE INDEX_NAME = 'CONN_UDX' AND OWNER = 'EMPINST' AND TABLE_NAME = 'PROF_CONNECTIONS';

  IF COUNT_INDEXES > 0 THEN
    EXECUTE IMMEDIATE 'DROP INDEX EMPINST.CONN_UDX';
  END IF;
END;
/

SELECT COUNT(*) AS AFTER_DROP_WHEN_NOT_EXISTS
    FROM ALL_INDEXES
    WHERE INDEX_NAME = 'CONN_UDX' AND OWNER = 'EMPINST' AND TABLE_NAME = 'PROF_CONNECTIONS';

DECLARE
  COUNT_INDEXES INTEGER;
BEGIN
  SELECT COUNT(*) INTO COUNT_INDEXES
    FROM ALL_INDEXES
    WHERE INDEX_NAME = 'CONN_UDX' AND OWNER = 'EMPINST' AND TABLE_NAME = 'PROF_CONNECTIONS';

  IF COUNT_INDEXES <= 0 THEN
    EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX EMPINST.CONN_UDX ON EMPINST.PROF_CONNECTIONS (PROF_SOURCE_KEY, PROF_TARGET_KEY, PROF_TYPE, TENANT_KEY) TABLESPACE PROFINDEXTABSPACE';
  END IF;
END;
/

SELECT COUNT(*) AS AFTER_CREATE_WHEN_NOT_EXISTS
    FROM ALL_INDEXES
    WHERE INDEX_NAME = 'CONN_UDX' AND OWNER = 'EMPINST' AND TABLE_NAME = 'PROF_CONNECTIONS';

DECLARE
  COUNT_INDEXES INTEGER;
BEGIN
  SELECT COUNT(*) INTO COUNT_INDEXES
    FROM ALL_INDEXES
    WHERE INDEX_NAME = 'CONN_UDX' AND OWNER = 'EMPINST' AND TABLE_NAME = 'PROF_CONNECTIONS';

  IF COUNT_INDEXES <= 0 THEN
    EXECUTE IMMEDIATE 'CREATE UNIQUE INDEX EMPINST.CONN_UDX ON EMPINST.PROF_CONNECTIONS (PROF_SOURCE_KEY, PROF_TARGET_KEY, PROF_TYPE, TENANT_KEY) TABLESPACE PROFINDEXTABSPACE';
  END IF;
END;
/

SELECT COUNT(*) AS AFTER_CREATE_WHEN_EXISTS
    FROM ALL_INDEXES
    WHERE INDEX_NAME = 'CONN_UDX' AND OWNER = 'EMPINST' AND TABLE_NAME = 'PROF_CONNECTIONS';


------
-- Update schema version
------

UPDATE EMPINST.SNPROF_SCHEMA SET DBSCHEMAVER= 49, RELEASEVER='5.0.0.0' WHERE COMPKEY='Profiles';

COMMIT;

------
-- Disconnect
------

QUIT;
