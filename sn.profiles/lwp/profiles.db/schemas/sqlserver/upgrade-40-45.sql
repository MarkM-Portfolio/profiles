-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2012, 2013                             
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 


-- 5724-S68                                                          
USE PEOPLEDB;
GO

------
-- EMPLOYEE
------
CREATE INDEX PROF_SRC_UID_IDX ON EMPINST.EMPLOYEE (PROF_SOURCE_UID ASC);
GO

------
-- PROFILE_EXTENSIONS: add TENANT columns and FK constraints
------
ALTER TABLE EMPINST.PROFILE_EXTENSIONS
	ADD TENANT_KEY NVARCHAR(36) NOT NULL DEFAULT '00000000-0000-0000-0000-040508202233';
GO

ALTER TABLE EMPINST.PROFILE_EXTENSIONS ADD CONSTRAINT PROFEXT_TENT_FK FOREIGN KEY (TENANT_KEY)
	REFERENCES EMPINST.TENANT(TENANT_KEY)
	ON DELETE CASCADE ON UPDATE NO ACTION;

------
-- PROFILE_EXT_DRAFT: add TENANT columns and FK constraints
------
ALTER TABLE EMPINST.PROFILE_EXT_DRAFT
	ADD TENANT_KEY NVARCHAR(36) NOT NULL DEFAULT '00000000-0000-0000-0000-040508202233';
GO

ALTER TABLE EMPINST.PROFILE_EXT_DRAFT ADD CONSTRAINT PREXTDRFT_TENT_FK FOREIGN KEY (TENANT_KEY)
	REFERENCES EMPINST.TENANT(TENANT_KEY)
	ON DELETE CASCADE ON UPDATE NO ACTION;
GO

------
-- PEOPLE_TAG: add TENANT columns and FK constraints
------
ALTER TABLE EMPINST.PEOPLE_TAG
	ADD TENANT_KEY NVARCHAR(36) NOT NULL DEFAULT '00000000-0000-0000-0000-040508202233';
GO

ALTER TABLE EMPINST.PEOPLE_TAG ADD CONSTRAINT PPLTAG_TENT_FK FOREIGN KEY (TENANT_KEY)
	REFERENCES EMPINST.TENANT(TENANT_KEY)
	ON DELETE CASCADE ON UPDATE NO ACTION;
GO

------
-- PHOTO: add TENANT columns and FK constraints
------
ALTER TABLE EMPINST.PHOTO
	ADD TENANT_KEY NVARCHAR(36) NOT NULL DEFAULT '00000000-0000-0000-0000-040508202233';
GO

ALTER TABLE EMPINST.PHOTO ADD CONSTRAINT PHOTO_TENT_UK UNIQUE (PROF_KEY, TENANT_KEY);
GO

ALTER TABLE EMPINST.PHOTO ADD CONSTRAINT PHOTO_TENT_FK FOREIGN KEY (TENANT_KEY)
	REFERENCES EMPINST.TENANT(TENANT_KEY)
	ON DELETE CASCADE ON UPDATE NO ACTION;
GO

------
-- PRONUNCIATION: add TENANT columns and FK constraints
------
ALTER TABLE EMPINST.PRONUNCIATION
	ADD TENANT_KEY NVARCHAR(36) NOT NULL DEFAULT '00000000-0000-0000-0000-040508202233';
GO

ALTER TABLE EMPINST.PRONUNCIATION ADD CONSTRAINT PRONUNC_TENT_UK UNIQUE (PROF_KEY, TENANT_KEY);
GO

ALTER TABLE EMPINST.PRONUNCIATION ADD CONSTRAINT PRONUNC_TENT_FK FOREIGN KEY (TENANT_KEY)
	REFERENCES EMPINST.TENANT(TENANT_KEY)
	ON DELETE CASCADE ON UPDATE NO ACTION;
GO

------
-- EMP_DRAFT: add TENANT columns and FK constraints
------
ALTER TABLE EMPINST.EMP_DRAFT
	ADD TENANT_KEY NVARCHAR(36) NOT NULL DEFAULT '00000000-0000-0000-0000-040508202233';
GO

ALTER TABLE EMPINST.EMP_DRAFT ADD CONSTRAINT EMPDRAFT_TENT_FK FOREIGN KEY (TENANT_KEY)
	REFERENCES EMPINST.TENANT(TENANT_KEY)
	ON DELETE CASCADE ON UPDATE NO ACTION;
GO

------
-- CHG_EMP_DRAFT: add TENANT columns and FK constraints
------
ALTER TABLE EMPINST.CHG_EMP_DRAFT
	ADD TENANT_KEY NVARCHAR(36) NOT NULL DEFAULT '00000000-0000-0000-0000-040508202233';
GO

ALTER TABLE EMPINST.CHG_EMP_DRAFT ADD CONSTRAINT CHEMPDRFT_TENT_FK FOREIGN KEY (TENANT_KEY)
	REFERENCES EMPINST.TENANT(TENANT_KEY)
	ON DELETE CASCADE ON UPDATE NO ACTION;
GO

DROP TRIGGER EMPINST.T_EMP_INS;
GO

DROP TRIGGER EMPINST.T_EMP_DEL;
GO

DROP TRIGGER EMPINST.T_EMP_UPD;
GO

CREATE TRIGGER EMPINST.T_EMP_INS
    ON EMPINST.EMP_DRAFT
    AFTER INSERT 
AS
    IF @@ROWCOUNT = 0
        BEGIN
        SET NOCOUNT ON;
        RETURN
        END
    ELSE IF @@ROWCOUNT = 1
        BEGIN
        SET NOCOUNT ON;
        DECLARE @n_seq NUMERIC(19,0), @n_id NVARCHAR(36), @n_tk NVARCHAR(36)
        SELECT @n_seq = PROF_UPDATE_SEQUENCE,@n_id = PROF_KEY,@n_tk = TENANT_KEY FROM inserted
        INSERT INTO EMPINST.CHG_EMP_DRAFT (IBMSNAP_INTENTSEQ, IBMSNAP_LOGMARKER, IBMSNAP_OPERATION,PROF_UPDATE_SEQUENCE, PROF_KEY, TENANT_KEY) VALUES (0, CURRENT_TIMESTAMP, N'I', @n_seq, @n_id, @n_tk )
        END
    ELSE
        BEGIN
        SET NOCOUNT ON;
        INSERT INTO EMPINST.CHG_EMP_DRAFT SELECT 0, CURRENT_TIMESTAMP, N'I', PROF_UPDATE_SEQUENCE, PROF_KEY, TENANT_KEY FROM inserted
        END
GO

CREATE TRIGGER EMPINST.T_EMP_DEL
    ON EMPINST.EMP_DRAFT
    AFTER DELETE 
AS
    IF @@ROWCOUNT = 0
        BEGIN
        SET NOCOUNT ON;
        RETURN
        END
    ELSE IF @@ROWCOUNT = 1
        BEGIN
        SET NOCOUNT ON;
        DECLARE @n_seq NUMERIC(19,0), @n_id NVARCHAR(36), @n_tk NVARCHAR(36)
        SELECT @n_seq = PROF_UPDATE_SEQUENCE,@n_id = PROF_UID FROM deleted
        INSERT INTO EMPINST.CHG_EMP_DRAFT (IBMSNAP_INTENTSEQ, IBMSNAP_LOGMARKER, IBMSNAP_OPERATION,PROF_UPDATE_SEQUENCE, PROF_KEY, TENANT_KEY) VALUES (0, CURRENT_TIMESTAMP, N'D', @n_seq, @n_id, @n_tk )
        END
    ELSE
        BEGIN
        SET NOCOUNT ON;
        INSERT INTO EMPINST.CHG_EMP_DRAFT SELECT 0, CURRENT_TIMESTAMP, N'D', PROF_UPDATE_SEQUENCE, PROF_KEY, TENANT_KEY FROM deleted
        END
GO

CREATE TRIGGER EMPINST.T_EMP_UPD
    ON EMPINST.EMP_DRAFT
    AFTER UPDATE 
AS
    IF @@ROWCOUNT = 0
        BEGIN
        SET NOCOUNT ON;
        RETURN
        END
    ELSE IF @@ROWCOUNT = 1
        BEGIN
        SET NOCOUNT ON;
        DECLARE @n_seq NUMERIC(19,0), @n_id NVARCHAR(36), @n_tk NVARCHAR(36)
        SELECT @n_seq = PROF_UPDATE_SEQUENCE,@n_id = PROF_UID FROM inserted
        INSERT INTO EMPINST.CHG_EMP_DRAFT (IBMSNAP_INTENTSEQ, IBMSNAP_LOGMARKER, IBMSNAP_OPERATION,PROF_UPDATE_SEQUENCE, PROF_KEY, TENANT_KEY) VALUES (0, CURRENT_TIMESTAMP, N'U', @n_seq, @n_id, @n_tk )
        END
    ELSE
        BEGIN
        SET NOCOUNT ON;
        INSERT INTO EMPINST.CHG_EMP_DRAFT SELECT 0, CURRENT_TIMESTAMP, N'U', PROF_UPDATE_SEQUENCE, PROF_KEY, TENANT_KEY FROM inserted
        END
GO

------
-- PROF_CONNECTIONS: add TENANT columns and FK constraints
------
ALTER TABLE EMPINST.PROF_CONNECTIONS
	ADD TENANT_KEY NVARCHAR(36) NOT NULL DEFAULT '00000000-0000-0000-0000-040508202233';
GO

ALTER TABLE EMPINST.PROF_CONNECTIONS ADD CONSTRAINT CONNECT_TENT_FK FOREIGN KEY (TENANT_KEY)
	REFERENCES EMPINST.TENANT(TENANT_KEY)
	ON DELETE CASCADE ON UPDATE NO ACTION;
GO

------
-- PROFILE_PREFS: add TENANT columns and FK constraints
------
ALTER TABLE EMPINST.PROFILE_PREFS
	ADD TENANT_KEY NVARCHAR(36) NOT NULL DEFAULT '00000000-0000-0000-0000-040508202233';
GO

ALTER TABLE EMPINST.PROFILE_PREFS ADD CONSTRAINT PROFPREF_TENT_UK UNIQUE (PROF_KEY, TENANT_KEY);
GO

ALTER TABLE EMPINST.PROFILE_PREFS ADD CONSTRAINT PROFPREF_TENT_FK FOREIGN KEY (TENANT_KEY)
	REFERENCES EMPINST.TENANT(TENANT_KEY)
	ON DELETE CASCADE ON UPDATE NO ACTION;
GO

------
-- PROFILE_LAST_LOGIN: add TENANT columns and FK constraints
------
ALTER TABLE EMPINST.PROFILE_LAST_LOGIN
	ADD TENANT_KEY NVARCHAR(36) NOT NULL DEFAULT '00000000-0000-0000-0000-040508202233';
GO

ALTER TABLE EMPINST.PROFILE_LAST_LOGIN ADD CONSTRAINT LASTLOGIN_TENT_UK UNIQUE (PROF_KEY, TENANT_KEY);
GO

ALTER TABLE EMPINST.PROFILE_LAST_LOGIN ADD CONSTRAINT LASTLOGIN_TENT_FK FOREIGN KEY (TENANT_KEY)
	REFERENCES EMPINST.TENANT(TENANT_KEY)
	ON DELETE CASCADE ON UPDATE NO ACTION;
GO

------
-- Update schema versions
------

UPDATE EMPINST.SNPROF_SCHEMA SET DBSCHEMAVER= 36, RELEASEVER='4.5.0.0' WHERE COMPKEY='Profiles';
GO