-- ***************************************************************** 
--                                                                   
-- IBM Confidential                                                  
--                                                                   
-- OCO Source Materials                                              
--                                                                   
-- Copyright IBM Corp. 2001, 2010                                    
--                                                                   
-- The source code for this program is not published or otherwise    
-- divested of its trade secrets, irrespective of what has been      
-- deposited with the U.S. Copyright Office.                         
--                                                                   
-- ***************************************************************** 

-- 5724-S68                                                          
USE PEOPLEDB;
GO

------------------------------------------------
-- DDL Statements for view "EMPINST"."EMPLOYEE"
------------------------------------------------


DROP TRIGGER EMPINST.T_EMPLOYEE_INSRT;
GO

DROP TRIGGER EMPINST.T_EMPLOYEE_UPD;
GO

ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_DEPARTMENT_NUMBER NVARCHAR(24);
GO

ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_TIMEZONE NVARCHAR(64);
GO

DROP INDEX EMPINST.EMPLOYEE.PROFILE_SEARCH_IDX;
GO

UPDATE EMPINST.EMPLOYEE SET PROF_LAST_UPDATE=CURRENT_TIMESTAMP WHERE PROF_LAST_UPDATE IS NULL;
ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_LAST_UPDATE DATETIME NOT NULL;
GO

CREATE INDEX PROFILE_SEARCH_IDX ON EMPINST.EMPLOYEE
        		(PROF_LAST_UPDATE ASC, PROF_KEY ASC);
GO

UPDATE EMPINST.EMPLOYEE SET PROF_UID_LOWER=LOWER(PROF_UID);
UPDATE EMPINST.EMPLOYEE SET PROF_MAIL_LOWER=LOWER(PROF_MAIL);
UPDATE EMPINST.EMPLOYEE SET PROF_LOGIN_LOWER=LOWER(PROF_LOGIN);
UPDATE EMPINST.EMPLOYEE SET PROF_MANAGER_UID_LOWER=LOWER(PROF_MANAGER_UID);
UPDATE EMPINST.EMPLOYEE SET PROF_GW_EMAIL_LOWER=LOWER(PROF_GROUPWARE_EMAIL);
GO

DROP INDEX EMPINST.EMPLOYEE.UID_LOWER_UDX;
GO

ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_UID_LOWER NVARCHAR(256) NOT NULL;
GO

ALTER TABLE EMPINST.EMPLOYEE ADD PROF_SRC_UID_LOWER NVARCHAR(256);
GO
UPDATE EMPINST.EMPLOYEE SET PROF_SRC_UID_LOWER=LOWER(PROF_SOURCE_UID);
GO
ALTER TABLE EMPINST.EMPLOYEE ALTER COLUMN PROF_SRC_UID_LOWER NVARCHAR(256) NOT NULL;
GO

CREATE UNIQUE INDEX UID_LOWER_UDX ON EMPINST.EMPLOYEE 
		(PROF_UID_LOWER ASC);
GO

CREATE INDEX DISP_IDX ON EMPINST.EMPLOYEE 
		(PROF_KEY ASC, PROF_DISPLAY_NAME ASC) INCLUDE (PROF_SURNAME, PROF_GIVEN_NAME);
GO

CREATE INDEX PROF_SNGN_IDX ON EMPINST.EMPLOYEE 
		(PROF_KEY ASC, PROF_SURNAME ASC, PROF_GIVEN_NAME ASC);
GO

CREATE INDEX PROF_GN2_IDX ON EMPINST.EMPLOYEE 
		(PROF_GIVEN_NAME ASC, PROF_KEY ASC);
GO

CREATE INDEX PROF_SN2_IDX ON EMPINST.EMPLOYEE 
		(PROF_SURNAME ASC, PROF_KEY ASC);
GO

CREATE INDEX SRC_UID_LOWER_IDX ON EMPINST.EMPLOYEE
        		(PROF_SRC_UID_LOWER ASC, PROF_KEY ASC);
GO

------------------------------------------------
-- DDL Statements for table "EMPINST"."SURNAME"
------------------------------------------------


DROP INDEX EMPINST.SURNAME.SURNAMEX;
GO
DROP INDEX EMPINST.SURNAME.SURNAME_UDX;
GO
DROP INDEX EMPINST.SURNAME.SURNAME_IDX;
GO

ALTER TABLE EMPINST.SURNAME ADD PROF_USRSTATE INTEGER DEFAULT 0 NOT NULL;
GO

ALTER TABLE EMPINST.SURNAME ADD CONSTRAINT SURNAME_PK PRIMARY KEY (PROF_KEY, PROF_SURNAME);
GO

CREATE INDEX SURNAME_IDX ON EMPINST.SURNAME (PROF_SURNAME ASC, PROF_KEY ASC, PROF_USRSTATE ASC);
GO

CREATE INDEX SURNAME_IDX2 ON EMPINST.SURNAME (PROF_USRSTATE ASC, PROF_SURNAME ASC, PROF_KEY ASC);
GO

CREATE INDEX SURNAMEX ON EMPINST.SURNAME (PROF_KEY ASC, PROF_SURNAME ASC, PROF_USRSTATE ASC);
GO

------------------------------------------------
-- DDL Statements for table "EMPINST"."GIVEN_NAME"
------------------------------------------------

DROP INDEX EMPINST.GIVEN_NAME.GIVEN_NAME_UDX;
GO
DROP INDEX EMPINST.GIVEN_NAME.GIVEN_NAME_IDX;
GO
DROP INDEX EMPINST.GIVEN_NAME.GIVEN_NAMEX;
GO


ALTER TABLE EMPINST.GIVEN_NAME ADD PROF_USRSTATE INTEGER DEFAULT 0 NOT NULL;
GO

ALTER TABLE EMPINST.GIVEN_NAME ADD CONSTRAINT GIVEN_NAME_PK PRIMARY KEY (PROF_KEY, PROF_GIVENNAME);
GO

CREATE INDEX GIVEN_NAME_IDX ON EMPINST.GIVEN_NAME (PROF_GIVENNAME ASC, PROF_KEY ASC, PROF_USRSTATE ASC);
GO

CREATE INDEX GIVEN_NAME_IDX2 ON EMPINST.GIVEN_NAME (PROF_USRSTATE ASC, PROF_GIVENNAME ASC, PROF_KEY ASC);
GO

CREATE INDEX GIVEN_NAMEX ON EMPINST.GIVEN_NAME (PROF_KEY ASC, PROF_GIVENNAME ASC, PROF_USRSTATE ASC);
GO


------------------------------------------------
-- DDL Statements for table "EMPINST"."EMP_DRAFT"
------------------------------------------------

ALTER TABLE EMPINST.EMP_DRAFT ALTER COLUMN PROF_BUILDING_IDENTIFIER NVARCHAR(64);
GO

ALTER TABLE EMPINST.EMP_DRAFT ALTER COLUMN PROF_DEPARTMENT_NUMBER NVARCHAR(24);
GO

ALTER TABLE EMPINST.EMP_DRAFT ALTER COLUMN PROF_TIMEZONE NVARCHAR(64);
GO

UPDATE EMPINST.EMP_DRAFT SET PROF_LAST_UPDATE=CURRENT_TIMESTAMP WHERE PROF_LAST_UPDATE IS NULL;
GO

ALTER TABLE EMPINST.EMP_DRAFT ALTER COLUMN PROF_LAST_UPDATE DATETIME NOT NULL;
GO

DROP INDEX EMPINST.EMP_DRAFT.ED_PREF_FNX;
DROP INDEX EMPINST.EMP_DRAFT.ED_PREF_LNX;
GO

CREATE INDEX ED_UPDATE_IDX ON EMPINST.EMP_DRAFT 
	(PROF_LAST_UPDATE DESC, PROF_KEY DESC, PROF_UPDATE_SEQUENCE DESC);
GO

------------------------------------------------
-- DDL Statements for table EMPINST.PROFILE_EXTENSIONS
------------------------------------------------

DROP INDEX EMPINST.PROFILE_EXTENSIONS.PROFILE_EXTENSIONS_IDX;
GO

ALTER TABLE EMPINST.PROFILE_EXTENSIONS ADD CONSTRAINT PROFILE_EXTENSIONS_PK PRIMARY KEY (PROF_KEY, PROF_PROPERTY_ID);
GO

------------------------------------------------
-- DDL Statements for sequence for Table EMPINST.PROFILE_EXT_DRAFT
------------------------------------------------

DROP INDEX  EMPINST.PROFILE_EXT_DRAFT.EXT_DRAFT_PK;
GO

ALTER TABLE EMPINST.PROFILE_EXT_DRAFT ADD CONSTRAINT EXT_DRAFT_PK PRIMARY KEY (PROF_KEY, PROF_UPDATE_SEQUENCE);
GO


------------------------------------------------
-- DDL Statements for view "EMPINST"."PHOTO"
------------------------------------------------

DROP TRIGGER EMPINST.T_PHOTO_INSRT;
GO

------------------------------------------------
-- DDL Statements for table "EMPINST"."PRONUNCIATION"
------------------------------------------------

DROP TRIGGER EMPINST.T_PRONOUNCE_INSRT;
GO

ALTER TABLE EMPINST.PRONUNCIATION ADD PROF_FILE_TYPE NVARCHAR(50) NOT NULL DEFAULT 'audio/wav';
GO


------------------------------------------------
-- DDL Statements for view "EMPINST"."DEPARTMENT"
------------------------------------------------

exec sp_rename 'EMPINST.DEPARTMENT', 'DEPT_T'
GO

 
 CREATE TABLE EMPINST.DEPARTMENT  (
		  PROF_DEPARTMENT_CODE 	NVARCHAR(24) NOT NULL, 
		  PROF_DEPARTMENT_TITLE 	NVARCHAR(256)) ; 
GO

-- copy old data
INSERT INTO EMPINST.DEPARTMENT (PROF_DEPARTMENT_CODE, PROF_DEPARTMENT_TITLE)
(SELECT DISTINCT PROF_DEPARTMENT_CODE, PROF_DEPARTMENT_TITLE FROM EMPINST.DEPT_T);


-- DDL Statements for indexes on Table EMPINST.DEPARTMENT


ALTER TABLE EMPINST.DEPARTMENT ADD CONSTRAINT DEPT_PK PRIMARY KEY (PROF_DEPARTMENT_CODE ASC);
GO

 CREATE INDEX DEPARTMENT_WIZ1 ON EMPINST.DEPARTMENT 
		(PROF_DEPARTMENT_TITLE ASC);
GO


DROP TABLE EMPINST.DEPT_T;
GO

------------------------------------------------
-- DDL Statements for table "EMPINST"."PROF_CONNECTIONS"
------------------------------------------------
DROP INDEX EMPINST.PROF_CONNECTIONS.CONN_INDEX1;
GO
DROP INDEX EMPINST.PROF_CONNECTIONS.CONN_INDEX2;
GO
DROP INDEX EMPINST.PROF_CONNECTIONS.CONN_TARGET_IDX;
GO

-- Main index to select a users connections for showing friends in UI
CREATE INDEX CONN_INDEX1 ON EMPINST.PROF_CONNECTIONS
	(PROF_SOURCE_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_LASTMOD DESC, PROF_TARGET_KEY ASC);
GO
	
-- Friends in common; get list of connection keys
-- 'isConnection' query
CREATE INDEX CONN_INDEX2 ON EMPINST.PROF_CONNECTIONS 
	(PROF_SOURCE_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_TARGET_KEY ASC, PROF_LASTMOD ASC);
GO

-- Reverse index for deletes
CREATE INDEX CONN_REV_IDX ON EMPINST.PROF_CONNECTIONS 
	(PROF_TARGET_KEY ASC, PROF_TYPE ASC, PROF_STATUS ASC, PROF_SOURCE_KEY ASC, PROF_LASTMOD ASC);
GO


------------------------------------------------
-- DDL Statements for table "EMPINST"."EVENTLOG"
------------------------------------------------

CREATE INDEX EVLOG_AUDIT_IDX ON EMPINST.EVENTLOG (ISSYSEVENT ASC, EVENT_KEY ASC);
GO


------------------------------------------------
-- DDL Statements for table "EMPINST"."USER_PLATFORM_EVENTS"
------------------------------------------------

CREATE TABLE EMPINST.USER_PLATFORM_EVENTS (
	EVENT_KEY BIGINT IDENTITY(0,1) NOT NULL, 
	EVENT_TYPE NVARCHAR(36) NOT NULL,
	PAYLOAD NVARCHAR(max),
	CREATED DATETIME NOT NULL,
	CONSTRAINT PLATFORM_EVENTS_PK PRIMARY KEY (EVENT_KEY) 
) ;
GO


-------------------------------------------------------------------
-- START ADDING SCHEDULER TABLES
-------------------------------------------------------------------

CREATE TABLE EMPINST.PROFILES_SCHEDULER_TASK (
	TASKID BIGINT NOT NULL,
	VERSION NVARCHAR(5) NOT NULL,
	ROW_VERSION INT NOT NULL,
	TASKTYPE INT NOT NULL,
	TASKSUSPENDED TINYINT NOT NULL,
	CANCELLED TINYINT NOT NULL,
	NEXTFIRETIME BIGINT NOT NULL,
	STARTBYINTERVAL NVARCHAR(254),
	STARTBYTIME BIGINT,
	VALIDFROMTIME BIGINT,
	VALIDTOTIME BIGINT,
	REPEATINTERVAL NVARCHAR(254),
	MAXREPEATS INT NOT NULL,
	REPEATSLEFT INT NOT NULL,
	TASKINFO IMAGE NULL,
	NAME NVARCHAR(254) NOT NULL,
	AUTOPURGE INT NOT NULL,
	FAILUREACTION INT,
	MAXATTEMPTS INT,
	QOS INT,
	PARTITIONID INT,
	OWNERTOKEN NVARCHAR(200) NOT NULL,
	CREATETIME BIGINT NOT NULL
) ;
GO

ALTER TABLE EMPINST.PROFILES_SCHEDULER_TASK WITH NOCHECK 
	ADD CONSTRAINT PROFILES_SCHEDULER_TASK_PK PRIMARY KEY  NONCLUSTERED ( TASKID );
GO

CREATE INDEX PROFILES_SCHEDULER_TASK_IDX1 
	ON EMPINST.PROFILES_SCHEDULER_TASK (TASKID, OWNERTOKEN) ;
GO

CREATE INDEX PROFILES_SCHEDULER_TASK_IDX2 
	ON EMPINST.PROFILES_SCHEDULER_TASK (NEXTFIRETIME ASC, REPEATSLEFT, PARTITIONID) ;
GO

CREATE TABLE EMPINST.PROFILES_SCHEDULER_TREG (
	REGKEY NVARCHAR(254) NOT NULL,
	REGVALUE NVARCHAR(254),
	PRIMARY KEY (REGKEY)
) ;
GO


CREATE TABLE EMPINST.PROFILES_SCHEDULER_LMGR (
	LEASENAME NVARCHAR(254) NOT NULL,
	LEASEOWNER NVARCHAR(254) NOT NULL,
	LEASE_EXPIRE_TIME  BIGINT,
	DISABLED NVARCHAR(5)
) ;
GO

CREATE TABLE EMPINST.PROFILES_SCHEDULER_LMPR (
	LEASENAME NVARCHAR(224) NOT NULL,
	NAME NVARCHAR(224) NOT NULL,
	VALUE NVARCHAR(224) NOT NULL
) ;
GO

CREATE INDEX PROFILES_SCHEDULER_LMPR_IDX1
	ON EMPINST.PROFILES_SCHEDULER_LMPR (LEASENAME, NAME) ;
GO
	
-------------------------------------------------------------------
-- END ADDING SCHEDULER TABLES
-------------------------------------------------------------------

{include.createDynaDefs.sql}

--
-- User state look aside index table
--
CREATE TABLE EMPINST.USER_STATE_LAIDX (
	IDXID    BINARY(16) NOT NULL,
	DEFID    BINARY(16) NOT NULL,
	ATTRID	 BINARY(16) NOT NULL,
	USRSTATE INTEGER NOT NULL,
	USRSTATE_UPDATED DATETIME NOT NULL,
	OBJID    BINARY(16) NOT NULL,
	OBJIDSTR   NCHAR(36) NOT NULL,
	CONSTRAINT USRSTATE_PK PRIMARY KEY (IDXID)
);
GO

--
-- Foriegn key constraint to reference field which contains value
--
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT USRSTATE_ATTR_FK FOREIGN KEY (ATTRID) 
	REFERENCES EMPINST.DYNA_ATTRS(ATTRID)
	ON DELETE CASCADE ON UPDATE NO ACTION;
GO

--
-- Foriegn key constraint on obj-ref table to clean up on deletion
--
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT USRSTATE_DEF_FK FOREIGN KEY (DEFID) 
	REFERENCES EMPINST.DYNA_DEFS(DEFID)
	ON DELETE NO ACTION ON UPDATE NO ACTION;
GO

--
-- Enforce single attr/idx-val
--
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT USRSTE_ATTR_UK UNIQUE (ATTRID);
GO

--
-- Constrain to one value per user
--
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT OBJID_UNIQUE UNIQUE (OBJID);
GO
ALTER TABLE EMPINST.USER_STATE_LAIDX ADD CONSTRAINT OBJIDSTR_UNIQUE UNIQUE (OBJIDSTR);
GO

CREATE UNIQUE INDEX USRSTATE_CONS_VALB 
	ON EMPINST.USER_STATE_LAIDX (OBJID ASC, OBJIDSTR ASC, USRSTATE ASC, USRSTATE_UPDATED ASC);
GO
	
CREATE UNIQUE INDEX USRSTATE_CONS_VALS 
	ON EMPINST.USER_STATE_LAIDX (OBJIDSTR ASC, OBJID ASC, USRSTATE ASC, USRSTATE_UPDATED ASC);
GO

--
-- Main index for scanning
--
CREATE INDEX USRSTATE_IDX
	ON EMPINST.USER_STATE_LAIDX (USRSTATE ASC, USRSTATE_UPDATED ASC, OBJID ASC, OBJIDSTR ASC);
GO
CREATE INDEX USRSTATE_IDXR
	ON EMPINST.USER_STATE_LAIDX (USRSTATE ASC, USRSTATE_UPDATED DESC, OBJID ASC, OBJIDSTR ASC);
GO

--
-- User state look aside index table
--
CREATE TABLE EMPINST.USER_ORGS_LAIDX (
	IDXID    BINARY(16) NOT NULL,
	DEFID    BINARY(16) NOT NULL,
	ATTRID	 BINARY(16) NOT NULL,
	ORGID	 NVARCHAR(128) NOT NULL,
	OBJID    BINARY(16) NOT NULL,
	OBJIDSTR NCHAR(36) NOT NULL,
	CONSTRAINT USRORGS_PK PRIMARY KEY (IDXID)
);
GO

--
-- Foriegn key constraint to reference field which contains value
--
ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_ATTR_FK FOREIGN KEY (ATTRID) 
	REFERENCES EMPINST.DYNA_ATTRS(ATTRID)
	ON DELETE CASCADE ON UPDATE NO ACTION;
GO

--
-- Foriegn key constraint on obj-ref table to clean up on deletion
--
ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_DEF_FK FOREIGN KEY (DEFID) 
	REFERENCES EMPINST.DYNA_DEFS(DEFID)
	ON DELETE NO ACTION ON UPDATE NO ACTION;
GO	

--
--
--
ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_ATTR_UK UNIQUE (ATTRID);
GO

--
-- Main index for scanning
--
CREATE INDEX USRORGS_IDX
	ON EMPINST.USER_ORGS_LAIDX (DEFID ASC, ORGID ASC, OBJIDSTR ASC, OBJID ASC)
GO

ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_C_OBJID UNIQUE (DEFID, OBJID, ORGID);
GO
ALTER TABLE EMPINST.USER_ORGS_LAIDX ADD CONSTRAINT USRORGS_C_OBJIDS UNIQUE (DEFID, OBJIDSTR, ORGID);
GO

CREATE INDEX USRORGS_MEM_BIDX
	ON EMPINST.USER_ORGS_LAIDX (OBJID ASC, DEFID ASC, ORGID ASC, OBJIDSTR ASC);
GO

CREATE INDEX USRORGS_MEM_SIDX
	ON EMPINST.USER_ORGS_LAIDX (OBJIDSTR ASC, DEFID ASC, ORGID ASC, OBJID ASC);
GO


-- ==========================================================
-- Updates to the board
-- ==========================================================
{include.msgVector-fixup5.sql}

--
-- Add state field for lookaside index tables
--
INSERT INTO EMPINST.PROF_CONSTANTS VALUES ('LA_IDX_STATE', 'inconsistent');
GO


------------------------------------------------
-- DDL Statements for sequence for Table EMPINST.PROFILES_SCHEDULER_LMGR
------------------------------------------------

ALTER TABLE EMPINST.PROFILES_SCHEDULER_LMGR
	ADD PRIMARY KEY (LEASENAME);
GO

-- Update schema versions
UPDATE EMPINST.SNPROF_SCHEMA SET DBSCHEMAVER= 29, RELEASEVER='3.0.0.0' WHERE COMPKEY='Profiles';
GO
