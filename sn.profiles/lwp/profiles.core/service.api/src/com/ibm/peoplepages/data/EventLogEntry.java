/* ***************************************************************** */
/*                                                                   */
/* IBM Confidential                                                  */
/*                                                                   */
/* OCO Source Materials                                              */
/*                                                                   */
/* Copyright IBM Corp. 2008, 2016                                    */
/*                                                                   */
/* The source code for this program is not published or otherwise    */
/* divested of its trade secrets, irrespective of what has been      */
/* deposited with the U.S. Copyright Office.                         */
/*                                                                   */
/* ***************************************************************** */

/*
 *
 * Class that represents a single log entry in Profiles event log
 *      -eventKey is the id of the log entry
 *      -eventType is the type of the type of log entry defined in EventLogEntry.EventType
 *      -createdByKey is the internal employee key that this event is for
 *      -createdByGuid is the LDAP GUID of the employee that this event is for
 *      -createdByUid is the LDAP UID of the employee that this event is for
 *      -objectKey is the internal key for the object that the event is about ( tag ID, conenction ID, etc)
 * 
 * Author: zhouwen_lu@us.ibm.com
 */

package com.ibm.peoplepages.data;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.ibm.lconn.core.gatekeeper.LCSupportedFeature;
import com.ibm.lconn.profiles.config.LCConfig;
import com.ibm.lconn.profiles.data.AbstractDataObject;

public class EventLogEntry extends AbstractDataObject<EventLogEntry> {
	private static final long serialVersionUID = -1L;

	// For different types of system events
	// 1 - New TDI system event that has not been published to event infrastructure
	// 2 - TDI Event has been processed to the event infrastructure
	// 3 - Event generated by admin that is not TDI (typically API, wsadmin)
	// 0 - Not a system event
	public static final int SYS_EVENT_FALSE = 0;
	public static final int SYS_EVENT_TDI = 1;
	public static final int SYS_EVENT_PROCESSED = 2; // to be renamed SYS_EVENT_TDI_PROCESSED
	public static final int SYS_EVENT_ADMINNONTDI = 3;

	public static final int EVENTTYPE_EMPTY = -1;

	public static enum EventStatus {
		EVENT_STORED, EVENT_PUBLISHED, EVENT_IGNORED
	};

	public static final int PRIVATE_EVENT_FALSE = 0;
	public static final int PRIVATE_EVENT_TRUE = 1;

	public static class EventSource {
		static private String unknownDisplayLabel = "unknownSource";

		final static public String ACTIVITIES = "Activities";
		final static public String BLOGS = "BLOGS";
		final static public String COMMUNITIES = "Communities";
		final static public String DOGEAR = "Dogear";
		final static public String PROFILES = "Profiles";
		final static public String WIKI = "Wiki";
		final static public String FILES = "Files";
		final static public String HOMEPAGE = "Homepage";
	}

	public static class PROPERTY {
		// These property keys will be mapped to keys for river of news
		final static public String STATUS_TEXT = "status";
		final static public String LINK_TITLE = "profiles.link.title";
		final static public String LINK_URL = "profiles.link.url";
		final static public String LINK_FAVICON_URL = "profiles.link.favicon.url";
		final static public String TAG = "profiles.tag";
		final static public String BRIEF_DESC = "profiles.brief.desc";
		final static public String CONNECTION_ID = "profiles.connection.id";
		// ALL_TAGS is added only to send all tags from profiles_tags_service to event_publisher
		final static public String ALL_TAGS = "profiles.all.tags";
		// previous & updated description ('about_me' field) for profile update compliance events
		final static public String UPDATED_DESC  = "description";
	}

	public static class Event {
		static private String unknownDisplayLabel = "unknownEvent";

		final static private Map<String,Integer> nameToTypeMap = new HashMap<String,Integer>();
		final static private Map<Integer,String> typeToNameMap = new HashMap<Integer,String>();

		final static public int GENERIC_CREATED = 0;

		final static public String GENERIC_CREATED_TXT = "created";
		static {
			typeToNameMap.put(new Integer(GENERIC_CREATED), GENERIC_CREATED_TXT);
		}
		static {
			nameToTypeMap.put(GENERIC_CREATED_TXT, new Integer(GENERIC_CREATED));
		}

		final static public int GENERIC_REMOVED = 1;

		final static public String GENERIC_REMOVED_TXT = "removed";
		static {
			typeToNameMap.put(new Integer(GENERIC_REMOVED), GENERIC_REMOVED_TXT);
		}
		static {
			nameToTypeMap.put(GENERIC_REMOVED_TXT, new Integer(GENERIC_REMOVED));
		}

		final static public int GENERIC_READ = 2;

		final static public String GENERIC_READ_TXT = "read";
		static {
			typeToNameMap.put(new Integer(GENERIC_READ), GENERIC_READ_TXT);
		}
		static {
			nameToTypeMap.put(GENERIC_READ_TXT, new Integer(GENERIC_READ));
		}

		final static public int GENERIC_UPDATED = 3;

		final static public String GENERIC_UPDATED_TXT = "updated";
		static {
			typeToNameMap.put(new Integer(GENERIC_UPDATED), GENERIC_UPDATED_TXT);
		}
		static {
			nameToTypeMap.put(GENERIC_UPDATED_TXT, new Integer(GENERIC_UPDATED));
		}

		final static public int PROFILE_CREATED = 4;

		final static public String PROFILE_CREATED_TXT = "profiles.created";
		static {
			typeToNameMap.put(new Integer(PROFILE_CREATED), PROFILE_CREATED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_CREATED_TXT, new Integer(PROFILE_CREATED));
		}

		final static public int PROFILE_REMOVED = 5;
		final static public String PROFILE_REMOVED_TXT = "profiles.removed";
		static {
			typeToNameMap.put(new Integer(PROFILE_REMOVED), PROFILE_REMOVED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_REMOVED_TXT, new Integer(PROFILE_REMOVED));
		}

		final static public int PROFILE_UPDATED = 6;
		final static public String PROFILE_UPDATED_TXT = "profiles.updated";
		static {
			typeToNameMap.put(new Integer(PROFILE_UPDATED), PROFILE_UPDATED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_UPDATED_TXT, new Integer(PROFILE_UPDATED));
		}

		final static public int PROFILE_PHOTO_UPDATED = 7;
		final static public String PROFILE_PHOTO_UPDATED_TXT = "profiles.person.photo.updated";
		static {
			typeToNameMap.put(new Integer(PROFILE_PHOTO_UPDATED), PROFILE_PHOTO_UPDATED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_PHOTO_UPDATED_TXT, new Integer(PROFILE_PHOTO_UPDATED));
		}

		final static public int PROFILE_PHOTO_REMOVED = 8;
		final static public String PROFILE_PHOTO_REMOVED_TXT = "profiles.person.photo.deleted";
		static {
			typeToNameMap.put(new Integer(PROFILE_PHOTO_REMOVED), PROFILE_PHOTO_REMOVED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_PHOTO_REMOVED_TXT, new Integer(PROFILE_PHOTO_REMOVED));
		}

		final static public int PROFILE_AUDIO_UPDATED = 9;
		final static public String PROFILE_AUDIO_UPDATED_TXT = "profiles.person.audio.updated";
		static {
			typeToNameMap.put(new Integer(PROFILE_AUDIO_UPDATED), PROFILE_AUDIO_UPDATED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_AUDIO_UPDATED_TXT, new Integer(PROFILE_AUDIO_UPDATED));
		}

		final static public int PROFILE_AUDIO_REMOVED = 10;
		final static public String PROFILE_AUDIO_REMOVED_TXT = "profiles.person.audio.deleted";
		static {
			typeToNameMap.put(new Integer(PROFILE_AUDIO_REMOVED), PROFILE_AUDIO_REMOVED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_AUDIO_REMOVED_TXT, new Integer(PROFILE_AUDIO_REMOVED));
		}

		final static public int CONNECTION_CREATED = 11;
		final static public String CONNECTION_CREATED_TXT = "profiles.colleague.created";
		static {
			typeToNameMap.put(new Integer(CONNECTION_CREATED), CONNECTION_CREATED_TXT);
		}
		static {
			nameToTypeMap.put(CONNECTION_CREATED_TXT, new Integer(CONNECTION_CREATED));
		}

		final static public int CONNECTION_ACCEPTED = 12;
		final static public String CONNECTION_ACCEPTED_TXT = "profiles.colleague.added";
		static {
			typeToNameMap.put(new Integer(CONNECTION_ACCEPTED), CONNECTION_ACCEPTED_TXT);
		}
		static {
			nameToTypeMap.put(CONNECTION_ACCEPTED_TXT, new Integer(CONNECTION_ACCEPTED));
		}

		final static public int CONNECTION_REJECTED = 13;
		final static public String CONNECTION_REJECTED_TXT = "profiles.connection.rejected";
		static {
			typeToNameMap.put(new Integer(CONNECTION_REJECTED), CONNECTION_REJECTED_TXT);
		}
		static {
			nameToTypeMap.put(CONNECTION_REJECTED_TXT, new Integer(CONNECTION_REJECTED));
		}

		final static public int CONNECTION_REMOVED = 14;
		final static public String CONNECTION_REMOVED_TXT = "profiles.connection.deleted";
		static {
			typeToNameMap.put(new Integer(CONNECTION_REMOVED), CONNECTION_REMOVED_TXT);
		}
		static {
			nameToTypeMap.put(CONNECTION_REMOVED_TXT, new Integer(CONNECTION_REMOVED));
		}

		final static public int TAG_ADDED = 15;
		final static public String TAG_ADDED_TXT = "profiles.person.tagged";
		static {
			typeToNameMap.put(new Integer(TAG_ADDED), TAG_ADDED_TXT);
		}
		static {
			nameToTypeMap.put(TAG_ADDED_TXT, new Integer(TAG_ADDED));
		}

		final static public int TAG_SELF_ADDED = 16;
		final static public String TAG_SELF_ADDED_TXT = "profiles.person.selftagged";
		static {
			typeToNameMap.put(new Integer(TAG_SELF_ADDED), TAG_SELF_ADDED_TXT);
		}
		static {
			nameToTypeMap.put(TAG_SELF_ADDED_TXT, new Integer(TAG_SELF_ADDED));
		}

		final static public int TAG_REMOVED = 17;
		final static public String TAG_REMOVED_TXT = "profiles.tag.removed";
		static {
			typeToNameMap.put(new Integer(TAG_REMOVED), TAG_REMOVED_TXT);
		}
		static {
			nameToTypeMap.put(TAG_REMOVED_TXT, new Integer(TAG_REMOVED));
		}

		final static public int LINK_ADDED = 18;
		final static public String LINK_ADDED_TXT = "profiles.person.link.added";
		static {
			typeToNameMap.put(new Integer(LINK_ADDED), LINK_ADDED_TXT);
		}
		static {
			nameToTypeMap.put(LINK_ADDED_TXT, new Integer(LINK_ADDED));
		}

		final static public int LINK_REMOVED = 19;
		final static public String LINK_REMOVED_TXT = "profiles.person.link.removed";
		static {
			typeToNameMap.put(new Integer(LINK_REMOVED), LINK_REMOVED_TXT);
		}
		static {
			nameToTypeMap.put(LINK_REMOVED_TXT, new Integer(LINK_REMOVED));
		}

		// removed in 4.0: final static public int STATUS_UPDATED = 20;
		// removed in 4.0: final static public String STATUS_UPDATED_TXT = "profiles.status.updated";

		// removed in 4.0: final static public int STATUS_REMOVED = 21;
		// removed in 4.0: final static public String STATUS_REMOVED_TXT = "profiles.status.deleted";

		// removed in 4.0: final static public int WALL_ENTRY_ADDED = 22;
		// removed in 4.0: final static public String WALL_ENTRY_ADDED_TXT = "profiles.wallpost.created";

		// removed in 4.0: final static public int WALL_ENTRY_REMOVED = 23;
		// removed in 4.0: final static public String WALL_ENTRY_REMOVED_TXT = "profiles.wallpost.removed";

		// removed in 4.0: final static public int WALL_COMMENT_ADDED = 24;
		// removed in 4.0: final static public String WALL_COMMENT_ADDED_TXT = "profiles.wall.comment.added";

		// removed in 4.0: final static public int WALL_COMMENT_REMOVED = 25;
		// removed in 4.0: final static public String WALL_COMMENT_REMOVED_TXT = "profiles.wall.comment.removed";

		// Internal table events ( In practice, these should only come from TDI calls )
		final static public int ORGANIZATION_ADDED = 26;
		final static public String ORGANIZATION_ADDED_TXT = "profiles.organization.added";
		static {
			typeToNameMap.put(new Integer(ORGANIZATION_ADDED), ORGANIZATION_ADDED_TXT);
		}
		static {
			nameToTypeMap.put(ORGANIZATION_ADDED_TXT, new Integer(ORGANIZATION_ADDED));
		}

		final static public int ORGANIZATION_UPDATED = 27;
		final static public String ORGANIZATION_UPDATED_TXT = "profiles.organization.updated";
		static {
			typeToNameMap.put(new Integer(ORGANIZATION_UPDATED), ORGANIZATION_UPDATED_TXT);
		}
		static {
			nameToTypeMap.put(ORGANIZATION_UPDATED_TXT, new Integer(ORGANIZATION_UPDATED));
		}

		final static public int ORGANIZATION_REMOVED = 28;
		final static public String ORGANIZATION_REMOVED_TXT = "profiles.organization.removed";
		static {
			typeToNameMap.put(new Integer(ORGANIZATION_REMOVED), ORGANIZATION_REMOVED_TXT);
		}
		static {
			nameToTypeMap.put(ORGANIZATION_REMOVED_TXT, new Integer(ORGANIZATION_REMOVED));
		}

		final static public int DEPARTMENT_ADDED = 29;
		final static public String DEPARTMENT_ADDED_TXT = "profiles.department.added";
		static {
			typeToNameMap.put(new Integer(DEPARTMENT_ADDED), DEPARTMENT_ADDED_TXT);
		}
		static {
			nameToTypeMap.put(DEPARTMENT_ADDED_TXT, new Integer(DEPARTMENT_ADDED));
		}

		final static public int DEPARTMENT_UPDATED = 30;
		final static public String DEPARTMENT_UPDATED_TXT = "profiles.department.updated";
		static {
			typeToNameMap.put(new Integer(DEPARTMENT_UPDATED), DEPARTMENT_UPDATED_TXT);
		}
		static {
			nameToTypeMap.put(DEPARTMENT_UPDATED_TXT, new Integer(DEPARTMENT_UPDATED));
		}

		final static public int DEPARTMENT_REMOVED = 31;
		final static public String DEPARTMENT_REMOVED_TXT = "profiles.department.removed";
		static {
			typeToNameMap.put(new Integer(DEPARTMENT_REMOVED), DEPARTMENT_REMOVED_TXT);
		}
		static {
			nameToTypeMap.put(DEPARTMENT_REMOVED_TXT, new Integer(DEPARTMENT_REMOVED));
		}

		final static public int COUNTRY_ADDED = 32;
		final static public String COUNTRY_ADDED_TXT = "profiles.country.added";
		static {
			typeToNameMap.put(new Integer(COUNTRY_ADDED), COUNTRY_ADDED_TXT);
		}
		static {
			nameToTypeMap.put(COUNTRY_ADDED_TXT, new Integer(COUNTRY_ADDED));
		}

		final static public int COUNTRY_UPDATED = 33;
		final static public String COUNTRY_UPDATED_TXT = "profiles.country.updated";
		static {
			typeToNameMap.put(new Integer(COUNTRY_UPDATED), COUNTRY_UPDATED_TXT);
		}
		static {
			nameToTypeMap.put(COUNTRY_UPDATED_TXT, new Integer(COUNTRY_UPDATED));
		}

		final static public int COUNTRY_REMOVED = 34;
		final static public String COUNTRY_REMOVED_TXT = "profiles.country.removed";
		static {
			typeToNameMap.put(new Integer(COUNTRY_REMOVED), COUNTRY_REMOVED_TXT);
		}
		static {
			nameToTypeMap.put(COUNTRY_REMOVED_TXT, new Integer(COUNTRY_REMOVED));
		}

		final static public int WORKLOC_ADDED = 35;
		final static public String WORKLOC_ADDED_TXT = "profiles.workloc.added";
		static {
			typeToNameMap.put(new Integer(WORKLOC_ADDED), WORKLOC_ADDED_TXT);
		}
		static {
			nameToTypeMap.put(WORKLOC_ADDED_TXT, new Integer(WORKLOC_ADDED));
		}

		final static public int WORKLOC_UPDATED = 36;
		final static public String WORKLOC_UPDATED_TXT = "profiles.workloc.updated";
		static {
			typeToNameMap.put(new Integer(WORKLOC_UPDATED), WORKLOC_UPDATED_TXT);
		}
		static {
			nameToTypeMap.put(WORKLOC_UPDATED_TXT, new Integer(WORKLOC_UPDATED));
		}

		final static public int WORKLOC_REMOVED = 37;
		final static public String WORKLOC_REMOVED_TXT = "profiles.workloc.removed";
		static {
			typeToNameMap.put(new Integer(WORKLOC_REMOVED), WORKLOC_REMOVED_TXT);
		}
		static {
			nameToTypeMap.put(WORKLOC_REMOVED_TXT, new Integer(WORKLOC_REMOVED));
		}

		final static public int PROFILE_ABOUT_UPDATED = 38;
		final static public String PROFILE_ABOUT_UPDATED_TXT = "profiles.person.about.updated";
		static {
			typeToNameMap.put(new Integer(PROFILE_ABOUT_UPDATED), PROFILE_ABOUT_UPDATED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_ABOUT_UPDATED_TXT, new Integer(PROFILE_ABOUT_UPDATED));
		}

		final static public int PROFILE_PERSON_FOLLOWED = 39;
		final static public String PROFILE_PERSON_FOLLOWED_TXT = "profiles.person.followed";
		static {
			typeToNameMap.put(new Integer(PROFILE_PERSON_FOLLOWED), PROFILE_PERSON_FOLLOWED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_PERSON_FOLLOWED_TXT, new Integer(PROFILE_PERSON_FOLLOWED));
		}

		final static public int PROFILE_PERSON_UNFOLLOWED = 40;
		final static public String PROFILE_PERSON_UNFOLLOWED_TXT = "profiles.person.unfollowed";
		static {
			typeToNameMap.put(new Integer(PROFILE_PERSON_UNFOLLOWED), PROFILE_PERSON_UNFOLLOWED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_PERSON_UNFOLLOWED_TXT, new Integer(PROFILE_PERSON_UNFOLLOWED));
		}

		final static public int PROFILE_CODE_CREATED = 41;
		final static public String PROFILE_CODE_CREATED_TXT = "profiles.code.created";
		static {
			typeToNameMap.put(new Integer(PROFILE_CODE_CREATED), PROFILE_CODE_CREATED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_CODE_CREATED_TXT, new Integer(PROFILE_CODE_CREATED));
		}

		final static public int PROFILE_CODE_UPDATED = 42;
		final static public String PROFILE_CODE_UPDATED_TXT = "profiles.code.updated";
		static {
			typeToNameMap.put(new Integer(PROFILE_CODE_UPDATED), PROFILE_CODE_UPDATED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_CODE_UPDATED_TXT, new Integer(PROFILE_CODE_UPDATED));
		}

		final static public int PROFILE_CODE_DELETED = 43;
		final static public String PROFILE_CODE_DELETED_TXT = "profiles.code.deleted";
		static {
			typeToNameMap.put(new Integer(PROFILE_CODE_DELETED), PROFILE_CODE_DELETED_TXT);
		}
		static {
			nameToTypeMap.put(PROFILE_CODE_DELETED_TXT, new Integer(PROFILE_CODE_DELETED));
		}

		// Need to update the max number of events when added new ones
		final static private int LASTX = 43;
		
		final static public List<Integer> ALL_TYPES = new ArrayList<Integer>(typeToNameMap.keySet());

		final static public HashSet<Integer> ALLOWED_CLOUD_EVENTS = new HashSet<Integer>(4); // note constructor size
		static{
			ALLOWED_CLOUD_EVENTS.add(EventLogEntry.Event.PROFILE_PHOTO_UPDATED);
			ALLOWED_CLOUD_EVENTS.add(EventLogEntry.Event.PROFILE_PHOTO_REMOVED);

			boolean isUpgradeEnabled = LCConfig.instance().isEnabled(LCSupportedFeature.PROFILES_EVENTLOG_PROCESSING_UPGRADE, "PROFILES_EVENTLOG_PROCESSING_UPGRADE", false);
			if (isUpgradeEnabled) {
				ALLOWED_CLOUD_EVENTS.add(EventLogEntry.Event.PROFILE_UPDATED);
			}
			ALLOWED_CLOUD_EVENTS.add(EventLogEntry.Event.PROFILE_REMOVED);
			// if you add a new event here, update the ALLOWED_CLOUD_EVENTS constructor size
			// AND update the corresponding test : EventLogHelperTest.testAllowedCloudEvents
		}
		final static private int NUM_ALLOWED_CLOUD_EVENTS = ALLOWED_CLOUD_EVENTS.size();

		public static int getNumAllowedCloudEvents(){
			return NUM_ALLOWED_CLOUD_EVENTS;
		}

		public static Set<Integer> getTypes(){
			return typeToNameMap.keySet();
		}

		public static boolean validateEventType(int eventType) {
			if (eventType < 0 || eventType > LASTX)
				return false;
			else
				return true;
		}

		public static int getEventType(String eventName) {
			Integer val = nameToTypeMap.get(eventName);
			if (val != null)
				return val.intValue();
			else
				return EVENTTYPE_EMPTY;
		}

		public static String getEventName(int eventType) {
			String str = (String) typeToNameMap.get(new Integer(eventType));
			return str;
		}
	};

	private String _eventKey = null;

	private String _eventSource = null;

	private String _eventName = null;

	private int _eventType = EVENTTYPE_EMPTY;

	private String _createdByKey = null;

	private String _createdByGuid = null;

	private String _createdByUid = null;

	private String _createdByUserId = null;

	private String _objectKey = null;

	private String _objectUserId = null;

	private String _objectUserName = null;

	private String _createdByName = null;

	private String _createdByEmail = null;

	private Date _created = null;

	private int _private = 0;

	private int _sysEvent = 0;

	private boolean _isMetaDataExtended = false;

	private String _eventMetaData = null;

	private String _eventMetaData1 = null;

	private String _eventMetaData2 = null;

	private byte[] _attachmentData = null;

	private String _previousDescription = null; // for profile.updated

	// set the basic fields
	private Map<String, String> _props = new HashMap<String, String>();

	public EventLogEntry() {
		super();
	}

	public EventLogEntry(String uuid, String source, String eventName, int eventType, String employeeKey, String employeeGuid,
			String employeeUid, String objectUuid, String createdBy, Date created, int prvEvt, int sysEvt, String eventMetaData) {
		super();
		_eventKey = uuid;
		_eventSource = source;
		_eventName = eventName;
		_eventType = eventType;
		_createdByKey = employeeKey;
		_createdByGuid = employeeGuid;
		_createdByUid = employeeUid;
		_objectKey = objectUuid;
		_createdByName = createdBy;
		_created = created;
		_private = prvEvt;
		_sysEvent = sysEvt;
		_eventMetaData = eventMetaData;
	}

	/**
	 * @return Returns the uuid.
	 */
	public String getEventKey() {
		return _eventKey;
	}

	/**
	 * @param key
	 *            The uuid to set.
	 */
	public void setEventKey(String key) {
		_eventKey = key;
	}

	/**
	 * @return Returns the source.
	 */
	public String getEventSource() {
		return _eventSource;
	}

	/**
	 * @param source
	 *            The source to set.
	 */
	public void setEventSource(String source) {
		_eventSource = source;
	}

	/**
	 * @return Returns the eventName.
	 */
	public String getEventName() {
		return _eventName;
	}

	/**
	 * @param eventName
	 *            The eventName to set.
	 */
	public void setEventName(String eventName) {
		_eventName = eventName;
	}

	/**
	 * @return Returns the objectUuid.
	 */
	public int getEventType() {
		return _eventType;
	}

	/**
	 * @param eventType
	 *            The eventType to set.
	 */
	public void setEventType(int eventType) {
		_eventType = eventType;
	}

	public String getCreatedByKey() {
		return _createdByKey;
	}

	public void setCreatedByKey(String key) {
		_createdByKey = key;
	}

	public String getCreatedByGuid() {
		return _createdByGuid;
	}

	public void setCreatedByGuid(String guid) {
		_createdByGuid = guid;
	}

	public String getCreatedByUid() {
		return _createdByUid;
	}

	public void setCreatedByUid(String uid) {
		_createdByUid = uid;
	}

	public String getCreatedByUserId() {
		return _createdByUserId;
	}

	public void setCreatedByUserId(String userid) {
		_createdByUserId = userid;
	}

	public String getObjectUserId() {
		return _objectUserId;
	}

	public void setObjectUserId(String userid) {
		_objectUserId = userid;
	}

	public String getObjectUserName() {
		return _objectUserName;
	}

	public void setObjectUserName(String name) {
		_objectUserName = name;
	}

	public String getObjectKey() {
		return _objectKey;
	}

	public void setObjectKey(String key) {
		_objectKey = key;
	}

	/**
	 * @return Returns the createdBy.
	 */
	public String getCreatedByName() {
		return _createdByName;
	}

	/**
	 * @param createdBy
	 *            The createdBy to set.
	 */
	public void setCreatedByName(String name) {
		_createdByName = name;
	}

	/**
	 * @return Returns the createdBy.
	 */
	public String getCreatedByEmail() {
		return _createdByEmail;
	}

	/**
	 * @param createdBy
	 *            The createdBy to set.
	 */
	public void setCreatedByEmail(String email) {
		_createdByEmail = email;
	}

	/**
	 * @return Returns the created.
	 */
	public Date getCreated() {
		return _created;
	}

	/**
	 * @param created
	 *            The created to set.
	 */
	public void setCreated(Date created) {
		_created = created;
	}

	public int getPrivate() {
		return _private;
	}

	public void setPrivate(int prv) {
		_private = prv;
	}

	public int getSysEvent() {
		return _sysEvent;
	}

	public void setSysEvent(int evt) {
		_sysEvent = evt;
	}

	public boolean isMetaDataExtended() {
		return _isMetaDataExtended;
	}

	public void setMetaDataExtended(boolean isMetaDataExtended) {
		_isMetaDataExtended = isMetaDataExtended;
	}

	/**
	 * @return Returns the objectMessage.
	 */
	public String getEventMetaData() {
		if (_eventMetaData != null) {
			return _eventMetaData;
		}
		else if (_eventMetaData1 != null) {
			_eventMetaData = _eventMetaData1;
			_eventMetaData1 = null;
		}
		else if (_eventMetaData2 != null) {
			_eventMetaData = _eventMetaData2;
			_eventMetaData2 = null;
		}

		return _eventMetaData;
	}

	/**
	 * @param objectMessage
	 *            The objectMessage to set.
	 */
	public void setEventMetaData(String eventMetaData) {
		_eventMetaData = eventMetaData;
	}

	/**
	 * @param objectMessage
	 *            The objectMessage to set.
	 */
	public void setEventMetaData1(String eventMetaData1) {
		_eventMetaData1 = eventMetaData1;
	}

	public void setEventMetaData2(String eventMetaData2) {
		_eventMetaData2 = eventMetaData2;
	}

	public String getOldDescription() {
		return _previousDescription;
	}
	public void setOldDescription(String previousDesc) {
		_previousDescription = previousDesc;
	}

	public Map getProps() {
		return _props;
	}

	public void setProps(Map props) {
		_props = props;
	}

	public String getProperty(String key) {
		String retval = "";

		if (_props.get(key) != null) retval = _props.get(key);

		return retval;
	}

	public void setProperty(String key, String val) {
		_props.put(key, val);
	}

	public void setAttachmentData(byte[] data) {
		_attachmentData = data;
	}

	public byte[] getAttachmentData() {
		return _attachmentData;
	}

	@Override
	public EventLogEntry clone() {
		//try {
			EventLogEntry clonedObject = (EventLogEntry) super.clone();
			// EventLogEntry clonedObject = new EventLogEntry();

			clonedObject.setEventKey(getEventKey());
			clonedObject.setTenantKey(getTenantKey());
			clonedObject.setEventSource(getEventSource());
			clonedObject.setEventName(getEventName());
			clonedObject.setEventType(getEventType());
			clonedObject.setCreatedByKey(getCreatedByKey());
			clonedObject.setCreatedByGuid(getCreatedByGuid());
			clonedObject.setCreatedByUid(getCreatedByUid());
			clonedObject.setObjectKey(getObjectKey());
			clonedObject.setCreatedByName(getCreatedByName());
			clonedObject.setCreated(getCreated());
			clonedObject.setPrivate(getPrivate());
			clonedObject.setSysEvent(getSysEvent());
			clonedObject.setEventMetaData(getEventMetaData());

			return clonedObject;
		//}
		//catch (CloneNotSupportedException e) {
		//	throw new RuntimeException(e); // unreachable block as clone is
		//	// supported
		//}
	}

}
