<?xml version="1.0" encoding="UTF-8"?>
<!-- ***************************************************************** -->
<!--                                                                   -->
<!-- IBM Confidential                                                  -->
<!--                                                                   -->
<!-- OCO Source Materials                                              -->
<!--                                                                   -->
<!-- Copyright IBM Corp. 2016                                          -->
<!--                                                                   -->
<!-- The source code for this program is not published or otherwise    -->
<!-- divested of its trade secrets, irrespective of what has been      -->
<!-- deposited with the U.S. Copyright Office.                         -->
<!--                                                                   -->
<!-- ***************************************************************** -->

<!--
IMPORTANT: in the future XML comments will be added to this file concerning the more
obscure changes.  However, if you pull this file into the TDI config editor,
make some changes, save the changes (in the editor), and deliver the changes to RCI, this 
will have a number of adverse effects on comments:

1. all the comments (except those at the top of the file) will be lost
2. the order of the assemblies will be shuffled, thus making diff unusable.
3. all formatting of the javascript code will be lost.  There has been
   a lot of work put into this.

Thus, it is very strongly suggested that you not put any config editor
changes directly into RCI, but instead manually copy any changes made in the
editor into this file.

I (Bob) use the editor farily often.  I often make changes there, plus I can't 
follow the conditional stuff without using the editor, but I never deliver 
the editor version of the file.
-->


<MetamergeConfig IDIversion="Created by TDI7.1.1 - 2012-04-23" created="Mon Apr 21 17:14:09 EDT 2014" 
createdBy="rmelanso" modified="Mon Apr 21 17:14:18 EDT 2014" modifiedBy="rmelanso" version="7.1.1">
    <Folder name="AssemblyLines">

        <AssemblyLine name="dump_pronounce_to_files">
            <ModTime>1398114848426</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_pronounce}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script><![CDATA[
print_version_info();  // dump_pronounce_to_files

var dirProp = system.getTDIProperty("profiles", "dump_pronounce_directory");
if(dirProp == null) {
	dirProp = new java.lang.String("./pronouncedump");
}

if(dirProp != null) {
	baseDirPath = dirProp.replace('\\', '/');
	if(baseDirPath.endsWith("/")) {
		baseDirPath = baseDirPath.substring(0, baseDirPath.length() - 1);
	}
	try
	{
		var baseDir = java.io.File(baseDirPath);
		if(!baseDir.exists()) {
			baseDir.mkdir();
		}
		baseDir = java.io.File(baseDirPath);
		if(!baseDir.exists() || !baseDir.isDirectory()) {
			throw new java.io.Exception(baseDirPath);
		}
		if (js_trace_level.debug <= trace_javascript_level)
			task.logmsg("+++baseDir is " + baseDir + ", type of baseDir is " + baseDir.getClass().getName());
	}
	catch(e)
	{
		system.abortAssemblyLine("" + e);
	}
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
 assemblyName = "dump_pronounce_to_files";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

//Set Return code
var retCode = 0;

]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="PronunciationConnector" state="Enabled"/>
                    <Component name="lookup_uid" state="Enabled"/>
                    <Component name="write_pronounce" state="Enabled"/>
                    <Component name="write_out" state="Simulated"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="PronunciationConnector">
                    <InheritFrom>system:/Connectors/PronunciationConnector</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_pronounce}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>key</Name>
                            <Type>simple</Type>
                            <Simple>key</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>audioFile</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>fileType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>linkStream</Name>
                            <Syntax>java.io.InputStream</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>audioFile</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>fileType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>media</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>updated</Name>
                            <Syntax>java.util.Date</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
var outFileName = eval_tdi_expression("./_tdi.rc");  // dump_pronounce_to_files
write_return_code(retCode, outFileName);

log3("INFO", "info_iteration_result2", "" + getCounterState(successCounter),
"" + getCounterState(failCounter), "" + lastSuccessfulUid);

console3("out", "info_iteration_result2", "" + getCounterState(successCounter), 
"" + getCounterState(failCounter), "" + lastSuccessfulUid);

lcIterUtil.report();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	// After GetNext
	task.dumpEntry(conn);
}]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[
var lastSuccessfulUid = null;

// this is the overall counter
lcIterUtil.reset();

var successCounter = "successCounter";
var failCounter = "failCounter";

//clear counter result
clearCounter(successCounter);
clearCounter(failCounter);

//re-create counter
createCounter(successCounter);
createCounter(failCounter);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_selectEntries">
                            <Name>after_selectEntries</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="lookup_uid">
                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_pronounce}</parameter>
                        <parameter name="stateName">li.state_nochange</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>119a0652be6</Key>
                            <Attribute>key</Attribute>
                            <Operator>equals</Operator>
                            <Value>$key</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_lookup">
                            <Name>before_lookup</Name>
                            <Script><![CDATA[
// after_lookup as well???
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++ before_lookup dump pronunciation");
	task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="lookup_fail">
                            <Name>lookup_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_ok">
                            <Name>lookup_ok</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++ lookup_ok dump pronunciation - conn");
	task.dumpEntry(conn);
	task.logmsg("+++ lookup_ok dump pronunciation - work");
	task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

                <Connector name="write_pronounce">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
if(baseDir == null) {
	system.abortAssemblyLine("ERROR: baseDir should have been set previously.  Aborting.");
}
var pronounce = work.getAttribute("audioFile");
var uid = work.getString("uid");

if((pronounce != null) && (uid != null)) {
	var pronounceAttr = work.newAttribute("pronounce");
	pronBytes = pronounce.getValue(0);
	try
	{
		var fn = "pron" + java.lang.System.currentTimeMillis() + "_" + lcIterUtil.getValue() + ".dat";
		var outFile = new java.io.File(baseDir.getAbsolutePath() + "/" + fn);
		var fos = new java.io.FileOutputStream(outFile);
		fos.write(pronBytes);
		fos.close();
		if (js_trace_level.debug <= trace_javascript_level)
			task.logmsg("+++wrote " + pronBytes.length + "bytes");

		pronounceAttr.setValue(outFile.toURL().toString());
	}
	catch(e)
	{
		task.logmsg("" + e);
		system.skipEntry();
	}
	
}]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

                <Connector name="write_out">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_pronounce}</parameter>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:dump_pronounce_file}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">@SUBSTITUTE{javascript ret.value = lcConf.file_encoding;}</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_pronounce}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>pronounce</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>work.pronounce</Script>
                            <Simple>pronounce</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>uid</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>uid</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="addonly_fail">
                            <Name>addonly_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
lastSuccessfulUid = work.getString("uid");
incrementCounter(successCounter);
lcIterUtil.incr();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>

        <AssemblyLine name="load_photos_from_files">
            <ModTime>1398114848536</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_photos}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script><![CDATA[
print_version_info();  // load_photos_from_files
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "load_photos_from_files";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();


if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="read_entries" state="Enabled"/>
                    <Component name="DumpWorkEntry0" state="Enabled"/>
                    <Component name="lookup_user" state="Enabled"/>
                    <Component name="DumpWorkEntry1" state="Enabled"/>
                    <Component name="update_photo" state="Simulated"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig>
                <Logger name="IDIFileRoller">
                    <parameter name="IDIFileRoller.Encoding">UTF-8</parameter>
                    <parameter name="IDIFileRoller.File">logs/LoadPhotosFromFiles.log</parameter>
                    <parameter name="IDIFileRoller.RollCount">5</parameter>
                    <parameter name="Pattern.ConversionPattern">%d{ISO8601} %-5p [%c] - %m%n</parameter>
                    <parameter name="com.ibm.di.log.appender">IDIFileRoller</parameter>
                    <parameter name="com.ibm.di.log.layout">Pattern</parameter>
                    <parameter name="com.ibm.di.log.level">INFO</parameter>
                    <parameter name="enabled">true</parameter>
                </Logger>
            </LogConfig>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="read_entries">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_photos}</parameter>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:load_photos_simple_file}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">@SUBSTITUTE{javascript ret.value = lcConf.file_encoding;}</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_photos}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>linkStream</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>java.io.ByteArrayInputStream(((java.lang.String)(conn.photo)).getBytes())</Script>
                            <Simple>photo</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>uid</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>uid</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>photo</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode)
{
	task.logmsg("Assembly: " + "load_photos_from_files" + ", hook: after_close, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");  //  load_photos_from_files
write_return_code(retCode, outFileName);

log3("INFO", "info_iteration_result2", "" + getCounterState(successCounter),
													"" + getCounterState(failCounter), "" + lastSuccessfulUid);

console3("out", "info_iteration_result2", "" + getCounterState(successCounter), 
													"" + getCounterState(failCounter), "" + lastSuccessfulUid);

lcIterUtil.report();
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	// After GetNext
	task.dumpEntry(conn);
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[
var lastSuccessfulUid = null;
var retCode = 0;

// this is the overall counter
lcIterUtil.reset();

var successCounter = "successCounter";
var failCounter = "failCounter";

//clear counter result
clearCounter(successCounter);
clearCounter(failCounter);

//re-create counter
createCounter(successCounter);
createCounter(failCounter);
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_selectEntries">
                            <Name>after_selectEntries</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_selectEntries">
                            <Name>before_selectEntries</Name>
                            <Script><![CDATA[
	// before selection
	check_for_BOM_at_BOF_and_skip_it( "load_photos_simple_file");

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
incrementCounter(failCounter);

lcIterUtil.incr();

retCode = 1;
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="get_ok">
                            <Name>get_ok</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>

            <ContainerDF name="DataFlowContainer">

                <Script name="DumpWorkEntry0">
                    <parameter name="script"><![CDATA[
// Dump the work entry
//task.logmsg("load_photos_from_files: DumpWorkEntry0: from iterator");
//task.dumpEntry(work);
]]></parameter>
                </Script>

                <Connector name="lookup_user">
                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_photos}</parameter>
                        <parameter name="stateName">li.state_nochange</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>137192420cd</Key>
                            <Attribute>uid</Attribute>
                            <Operator>equals</Operator>
                            <Value>$uid</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

                <Script name="DumpWorkEntry1">
                    <parameter name="script"><![CDATA[
// Dump the work entry
//task.logmsg("load_photos_from_files: DumpWorkEntry1: before update_phote");
//task.dumpEntry(work);
]]></parameter>
                </Script>

                <Connector name="update_photo">
                    <InheritFrom>system:/Connectors/PhotoConnector</InheritFrom>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_photos}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>fileType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>image</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>linkStream</Name>
                            <Syntax>java.io.InputStream</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>fileType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>image</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>updated</Name>
                            <Syntax>java.util.Date</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>1371924cc40</Key>
                            <Attribute>key</Attribute>
                            <Operator>equals</Operator>
                            <Value>$key</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="after_reply">
                            <Name>after_reply</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="callreply_fail">
                            <Name>callreply_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="callreply_ok">
                            <Name>callreply_ok</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
lastSuccessfulUid = work.getString("uid");
incrementCounter(successCounter);
lcIterUtil.incr();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="no_reply">
                            <Name>no_reply</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="load_pronounce_from_files">
            <ModTime>1398114848676</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_pronounce}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // load_pronounce_from_files</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "load_pronounce_from_files";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="lookup_user" state="Enabled"/>
                    <Component name="PronunciationConnector" state="Enabled"/>
                    <Component name="read_entries" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig>
                <Logger name="IDIFileRoller">
                    <parameter name="IDIFileRoller.Encoding">UTF-8</parameter>
                    <parameter name="IDIFileRoller.File">logs/LoadProunounceFromFiles.log</parameter>
                    <parameter name="IDIFileRoller.RollCount">5</parameter>
                    <parameter name="Pattern.ConversionPattern">%d{ISO8601} %-5p [%c] - %m%n</parameter>
                    <parameter name="com.ibm.di.log.appender">IDIFileRoller</parameter>
                    <parameter name="com.ibm.di.log.layout">Pattern</parameter>
                    <parameter name="com.ibm.di.log.level">INFO</parameter>
                    <parameter name="enabled">true</parameter>
                </Logger>
            </LogConfig>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="read_entries">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_pronounce}</parameter>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:load_pronounce_simple_file}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">@SUBSTITUTE{javascript ret.value = lcConf.file_encoding;}</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_pronounce}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>linkStream</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>java.io.ByteArrayInputStream(((java.lang.String)(conn.pronounce)).getBytes())</Script>
                            <Simple>pronounce</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>uid</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>uid</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
var outFileName = eval_tdi_expression("./_tdi.rc");  //  load_pronounce_from_files
write_return_code(retCode, outFileName);

log3("INFO", "info_iteration_result2", "" + getCounterState(successCounter),
"" + getCounterState(failCounter), "" + lastSuccessfulUid);

console3("out", "info_iteration_result2", "" + getCounterState(successCounter), 
"" + getCounterState(failCounter), "" + lastSuccessfulUid);

lcIterUtil.report();
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	// After GetNext
	task.dumpEntry(conn);
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[var lastSuccessfulUid = null;
var retCode = 0;

// this is the overall counter
lcIterUtil.reset();

var successCounter = "successCounter";
var failCounter = "failCounter";

//clear counter result
clearCounter(successCounter);
clearCounter(failCounter);

//re-create counter
createCounter(successCounter);
createCounter(failCounter);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_selectEntries">
                            <Name>after_selectEntries</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_selectEntries">
                            <Name>before_selectEntries</Name>
                            <Script><![CDATA[
	// before selection
	check_for_BOM_at_BOF_and_skip_it( "load_pronounce_simple_file");

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="get_ok">
                            <Name>get_ok</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="lookup_user">
                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_pronounce}</parameter>
                        <parameter name="stateName">li.state_nochange</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>137193be9d8</Key>
                            <Attribute>uid</Attribute>
                            <Operator>equals</Operator>
                            <Value>$uid</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="PronunciationConnector">
                    <InheritFrom>system:/Connectors/PronunciationConnector</InheritFrom>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_pronounce}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>audioFile</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>fileType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>linkStream</Name>
                            <Syntax>java.io.InputStream</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>audioFile</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>fileType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>updated</Name>
                            <Syntax>java.util.Date</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>137193c6f84</Key>
                            <Attribute>key</Attribute>
                            <Operator>equals</Operator>
                            <Value>$key</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
lastSuccessfulUid = work.getString("uid");
incrementCounter(successCounter);
lcIterUtil.incr();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="mark_managers">
            <ModTime>1398114848801</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_managers}</parameter>
                <parameter name="findreturncount"/>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script><![CDATA[
print_version_info();  // mark_managers
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "mark_managers";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

var noMgrEntry = false;
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="ProfileConnector_IterateDB" state="Enabled"/>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                    <Component name="ProfileConnector_markManager" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="ProfileConnector_IterateDB">
                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_managers}</parameter>
                        <parameter name="iterator_return_key_data_only">true</parameter>
                        <parameter name="stateName">li.state_nochange</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
var outFileName = eval_tdi_expression("./_tdi.rc");	 //  mark_managers
write_return_code(retCode, outFileName);

log3("INFO", "info_iteration_result2", "" + getCounterState(successCounter),
"" + getCounterState(failCounter), "" + lastSuccessfulDN);

console3("out", "info_iteration_result2", "" + getCounterState(successCounter), 
"" + getCounterState(failCounter), "" + lastSuccessfulDN);

lcIterUtil.report();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[var lastSuccessfulDN = null;
var retCode = 0;

// this is the overall counter
lcIterUtil.reset();

var successCounter = "successCounter";
var failCounter = "failCounter";

//clear counter result
clearCounter(successCounter);
clearCounter(failCounter);

//re-create counter
createCounter(successCounter);
createCounter(failCounter);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("Mark manager profile connector conn entry:"  );
	task.dumpEntry(conn);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">

                <Script name="DumpWorkEntry">
                    <parameter name="script"><![CDATA[
// Dump the work entry
//task.dumpEntry(work);
]]></parameter>
                </Script>

                <Connector name="ProfileConnector_markManager">
                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_managers}</parameter>
                        <parameter name="update_mark_manager">true</parameter>
                        <parameter name="stateName">li.state_nochange</parameter>
                    </Configuration>
                    <ComputeChanges>false</ComputeChanges>
                    <SkipLookup>true</SkipLookup>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>13718132f83</Key>
                            <Attribute>key</Attribute>
                            <Operator>equals</Operator>
                            <Value>$key</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="callreply_fail">
                            <Name>callreply_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
lastSuccessfulDN = work.getString("distinguishedName");
incrementCounter(successCounter);
lcIterUtil.incr();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="no_reply">
                            <Name>no_reply</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="populate_country">
            <ModTime>1398114848926</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script><![CDATA[
print_version_info();  // populate_country
                    ]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "populate_country";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();


if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

//Set Return code
var retCode = 0;

]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="CodesConnector" state="Simulated"/>
                    <Component name="read_country_csv" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="read_country_csv">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:country_table_csv_file}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                        <parameter name="characterSet">@SUBSTITUTE{javascript ret.value = lcConf.file_encoding;}</parameter>
                        <parameter name="csvColumnSeparator">@SUBSTITUTE{property.profiles:country_table_csv_separator}</parameter>
                        <parameter name="csvColumns"><![CDATA[country
description]]></parameter>
                        <parameter name="csvEnableQuoting">true</parameter>
                        <parameter name="csvLogLongLines">0</parameter>
                        <parameter name="csvWriteHeader">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>country</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>country</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>description</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>description</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>country</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>description</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>

                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("++++++ iterator initialize_fail: populate_country");
}

retCode = 1;
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

system.abortAssemblyLine("Aborting in populate_country: initialize_fail." + error.getString("message"));

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
// WARNING: this hook is called even when abortAssemblyLine above happens.
// thus, retCode must be set correctly upon arrival - 0 if success, 1 if failure.
if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("Assembly: " + assemblyName + ", hook: after_close, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");	 // populate_country
write_return_code(retCode, outFileName);
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("Populate country iterator conn:"  );
	task.dumpEntry(conn);
}

var temp = org.apache.commons.lang.StringUtils.trim(conn.getString("country"));
if (org.apache.commons.lang.StringUtils.isEmpty(temp))
	system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[
]]></Script>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="before_selectEntries">
                            <Name>before_selectEntries</Name>
                            <Script><![CDATA[
	// before selection
	check_for_BOM_at_BOF_and_skip_it( "country_table_csv_file");
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="CodesConnector">
                    <InheritFrom>system:/Connectors/CodesConnector</InheritFrom>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <parameter name="tableName">Country</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>countryCode</Name>
                            <Type>advanced</Type>
                            <Script>work.country</Script>
                            <Simple>countryCode</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>displayValue</Name>
                            <Type>advanced</Type>
                            <Script>work.description</Script>
                            <Simple>displayValue</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>countryCode</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>displayValue</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>128a48e769b</Key>
                            <Attribute>countryCode</Attribute>
                            <Operator>equals</Operator>
                            <Value>$country</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>

                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("++++++ CodesConnector initialize_fail: populate_country");
}

retCode = 1;
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

system.abortAssemblyLine("Aborting in populate_country: initialize_fail." + error.getString("message"));

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("Populate country profile connector conn:"  );
	task.dumpEntry(conn);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="modify_apply">
                            <Name>modify_apply</Name>
                            <Script>conn.addAttributeValue("countryCode", work.getString("country"));</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="modify_nochange">
                            <Name>modify_nochange</Name>
                            <Script><![CDATA[
if (js_trace_level.info <= trace_javascript_level)
{ 
	task.logmsg("+++++++ INFO: no changes, skip entry. codeId is:" + work.getString("country"));
	task.dumpEntry(work);
}
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_fail">
                            <Name>update_fail</Name>
                            <Script><![CDATA[
task.logmsg("ERROR: " + error.getString("message"));
retCode = 1;
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_multiple">
                            <Name>update_multiple</Name>
                            <Script><![CDATA[
if (js_trace_level.fatal <= trace_javascript_level)
{
	//something here will mean it is ok to have multiple entries
	task.logmsg("+++++++on multiple Entry");
	task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>

        <AssemblyLine name="populate_department">
            <ModTime>1398114849050</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // populate_department</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "populate_department";
check_40_Properties_in_profiles();

load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

//Set Return code
var retCode = 0;

]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="CodesConnector" state="Simulated"/>
                    <Component name="read_deptinfo_csv" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="read_deptinfo_csv">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:department_table_csv_file}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                        <parameter name="characterSet">@SUBSTITUTE{javascript ret.value = lcConf.file_encoding;}</parameter>
                        <parameter name="csvColumnSeparator">@SUBSTITUTE{property.profiles:department_table_csv_separator}</parameter>
                        <parameter name="csvColumns"><![CDATA[code
title]]></parameter>
                        <parameter name="csvEnableQuoting">true</parameter>
                        <parameter name="csvLogLongLines">0</parameter>
                        <parameter name="csvWriteHeader">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>code</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>code</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>title</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>conn.title</Script>
                            <Simple>title</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>code</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>title</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>

                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("++++++  iterator initialize_fail: populate_department");
}

retCode = 1;
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

system.abortAssemblyLine("Aborting populate_department: initialize_fail." + error.getString("message"));

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("Populate department iterator conn:"  );
	task.dumpEntry(conn);
}

var temp = org.apache.commons.lang.StringUtils.trim(conn.getString("code"));
if (org.apache.commons.lang.StringUtils.isEmpty(temp))
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[
//var retCode = 0;
]]></Script>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="before_selectEntries">
                            <Name>before_selectEntries</Name>
                            <Script><![CDATA[
	// before selection
	check_for_BOM_at_BOF_and_skip_it( "department_table_csv_file");

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script>retCode=1;</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="CodesConnector">
                    <InheritFrom>system:/Connectors/CodesConnector</InheritFrom>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <parameter name="tableName">Department</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>departmentCode</Name>
                            <Type>advanced</Type>
                            <Script>work.code</Script>
                            <Simple>departmentCode</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>departmentTitle</Name>
                            <Type>advanced</Type>
                            <Script>work.title</Script>
                            <Simple>departmentTitle</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>departmentCode</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>departmentTitle</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>128a4b0c8dc</Key>
                            <Attribute>departmentCode</Attribute>
                            <Operator>equals</Operator>
                            <Value>$code</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>

                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("++++++  CodesConnector initialize_fail: populate_department:");
}

retCode = 1;
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

system.abortAssemblyLine("Aborting populate_department: initialize_fail." + error.getString("message"));

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("Populate department profile connector conn:"  );
	task.dumpEntry(conn);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="modify_apply">
                            <Name>modify_apply</Name>
                            <Script>conn.addAttributeValue("departmentCode", work.getString("code"));</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="modify_nochange">
                            <Name>modify_nochange</Name>
                            <Script><![CDATA[
if (js_trace_level.info <= trace_javascript_level) { 
	task.logmsg("+++++++ INFO: no changes, skip entry. codeId is:" + work.getString("code"));
	task.dumpEntry(work);
}
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_fail">
                            <Name>update_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>

        <AssemblyLine name="populate_emp_type">
            <ModTime>1398114849160</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // populate_emp_type</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "populate_emp_type";
check_40_Properties_in_profiles();

load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

//Set Return code
var retCode = 0;

]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="CodesConnector" state="Simulated"/>
                    <Component name="read_emptype_csv" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="read_emptype_csv">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:emp_type_table_csv_file}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                        <parameter name="characterSet">@SUBSTITUTE{javascript ret.value = lcConf.file_encoding;}</parameter>
                        <parameter name="csvColumnSeparator">@SUBSTITUTE{property.profiles:emp_type_table_csv_separator}</parameter>
                        <parameter name="csvColumns"><![CDATA[code
title]]></parameter>
                        <parameter name="csvEnableQuoting">true</parameter>
                        <parameter name="csvLogLongLines">0</parameter>
                        <parameter name="csvWriteHeader">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>code</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>code</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>title</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>title</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>code</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>title</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>

                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
//if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("++++++ iterator initialize_fail: populate_emp_type:");
}

retCode = 1;
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

system.abortAssemblyLine("Aborting in populate_emp_type: initialize_fail." + error.getString("message"));

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("Populate employee type iterator conn:"  );
	task.dumpEntry(conn);
}

var temp = org.apache.commons.lang.StringUtils.trim(conn.getString("code"));
if (org.apache.commons.lang.StringUtils.isEmpty(temp))
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[
]]></Script>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="before_selectEntries">
                            <Name>before_selectEntries</Name>
                            <Script><![CDATA[
	// before selection
	check_for_BOM_at_BOF_and_skip_it( "emp_type_table_csv_file");

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script>retCode=1;</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="CodesConnector">
                    <InheritFrom>system:/Connectors/CodesConnector</InheritFrom>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <parameter name="tableName">EmployeeType</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>employeeDescription</Name>
                            <Type>advanced</Type>
                            <Script>work.title</Script>
                            <Simple>employeeDescription</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>employeeType</Name>
                            <Type>advanced</Type>
                            <Script>work.code</Script>
                            <Simple>employeeType</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>employeeDescription</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeType</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>1291bc7003c</Key>
                            <Attribute>employeeType</Attribute>
                            <Operator>equals</Operator>
                            <Value>$code</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>

                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
//if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("++++++ populate_emp_type: CodesConnector initialize_fail");
}

retCode = 1;
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

system.abortAssemblyLine("Aborting in populate_emp_type: initialize_fail." + error.getString("message"));

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("Populate employee type profile connector conn:"  );
	task.dumpEntry(conn);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="modify_apply">
                            <Name>modify_apply</Name>
                            <Script>conn.addAttributeValue("employeeType", work.getString("code"));</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="modify_nochange">
                            <Name>modify_nochange</Name>
                            <Script><![CDATA[
if (js_trace_level.info <= trace_javascript_level) { 
	task.logmsg("+++++++on no changes, skip entry. codeId is:" + work.getString("code"));
	task.dumpEntry(work);
}
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_fail">
                            <Name>update_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="populate_from_dns_file">
            <ModTime>1398114849284</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // populate_from_dns_file</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "populate_from_dns_file";
check_40_Properties_in_profiles();

load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

var duplicateDNArray = new Array();
var duplicateUIDArray = new Array();
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="iterate_over_dns" state="Enabled"/>
                    <Component name="DumpWorkEntry0" state="Enabled"/>
                    <Component name="PopFromDns_lookup_dn" state="Simulated"/>
                    <Component name="DumpWorkEntry1" state="Enabled"/>
                    <Component name="callSyncDB_mod" state="Simulated"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig>
                <Logger name="IDIFileRoller">
                    <parameter name="IDIFileRoller.Encoding">UTF-8</parameter>
                    <parameter name="IDIFileRoller.File">logs/PopulateDBFromDNFile.log</parameter>
                    <parameter name="IDIFileRoller.RollCount">5</parameter>
                    <parameter name="Pattern.ConversionPattern">%d{ISO8601} %-5p [%c] - %m%n</parameter>
                    <parameter name="com.ibm.di.log.appender">IDIFileRoller</parameter>
                    <parameter name="com.ibm.di.log.layout">Pattern</parameter>
                    <parameter name="com.ibm.di.log.level">INFO</parameter>
                    <parameter name="enabled">true</parameter>
                </Logger>
            </LogConfig>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="iterate_over_dns">
                    <InheritFrom>/Connectors/PopFromDns_iterate_over_dns</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>line</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>linenumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">

                <Script name="DumpWorkEntry0">
                    <parameter name="script"><![CDATA[
// populate_from_dns_file
// Dump the work entry
//task.logmsg("collect_dns: DumpWorkEntry0: after iterate_over_dns, before PopFromDns_lookup_dn");
//task.dumpEntry(work);
]]></parameter>
                </Script>

                <Function name="PopFromDns_lookup_dn">
                    <InheritFrom>/Functions/PopFromDns_lookup_dn</InheritFrom>
                    <ConnectorState>Enabled</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_functioncall">
                            <Name>before_functioncall</Name>
                            <Script><![CDATA[
	if (lcConf.source_ldap_escape_dns) {
	var dnVal = work.getString("$dn");
		if(dnVal != null) {
			var newDn = escape_dn(dnVal);
			if(newDn != dnVal) {
				if (js_trace_level.debug <= trace_javascript_level)
					task.logmsg("+++new dnVal is " + newDn);
				work.setAttribute("$dn", newDn);
			}
		}
	}
]]></Script>
                        </Hook>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>

                <Script name="DumpWorkEntry1">
                    <parameter name="script"><![CDATA[
// populate_from_dns_file
// Dump the work entry
//task.logmsg("collect_dns: DumpWorkEntry0: after PopFromDns_lookup_dn, before callSyncDB_mod");
//task.dumpEntry(work);
]]></parameter>
                </Script>

                <Function name="callSyncDB_mod">
                    <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                    <ConnectorState>Enabled</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>*</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>syncExisting</Name>
                        </SchemaItem>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script>retCode = 0;</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script><![CDATA[
//---------------------------------------------------------------------
// Set return code to indicate error here, in case initialization fails. 
// If initialization succeeds, we will set back to zero.
//---------------------------------------------------------------------
retCode = 1;
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="connect_init">
                            <Name>connect_init</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
incrementCounter(failCounter);

retCode = 1;
work.removeAllAttributes();
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
if(work.getString("outputResult") == "written") 
{
	incrementCounter(successCounter);
	lastSuccessfulDN = work.getString("$dn");
}
else if(work.getString("outputResult") == "duplicate") 
{
	var i = getCounterState(dupCounter);
	duplicateDNArray[i]=work.getString("$dn");
	duplicateUIDArray[i]=work.getString("uid");
	incrementCounter(dupCounter);
	lastSuccessfulDN = work.getString("$dn");
}
else {
	incrementCounter(failCounter);
}
work.removeAllAttributes();
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="$initialize.logFilename">logs/PopulateDBFromDNFile.log</parameter>
                        <parameter name="assemblyLine">SyncDBfromSource</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="mode">2</parameter>
                        <parameter name="operation">add</parameter>
                        <parameter name="shareLog">true</parameter>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>outputResult</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>outputResult</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                </Function>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>

        <AssemblyLine name="SyncDBfromSource">
            <ModTime>1398114849425</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehavior">Null</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
                <parameter name="nullBehaviorValue"/>
                <parameter name="nullDefinition"/>
                <parameter name="nullDefinitionValue"/>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
load_lcConf(true);

load_mappings_dbrepos_from_source();
load_validations_dbrepos();

//--------------------------------------------------------------
// If syncTraceOnly is true, it will skip on making changes to
// the database
//--------------------------------------------------------------
var syncTraceOnly=false;

//--------------------------------------------------------------
// Get the properties to control storing and synching with source
//--------------------------------------------------------------
var sync_store_source_url = lcConf.sync_store_source_url;
var sync_source_url_override = lcConf.sync_source_url_override;
var sync_source_url_enforce = lcConf.sync_source_url_enforce;

var source_ldap_debug = lcConf.source_ldap_debug;

var dbrepos_mark_manager_if_referenced = lcConf.dbrepos_mark_manager_if_referenced;

//---------------------------------------------
// For certain well-known LDAP fields that we
// use in populating multiple tables, we allow
// a function to be provided to derive the
// value(s)
//---------------------------------------------
var source_ldap_compute_function_for_givenName = 
  lcConfUtils.getSourceDataComputeFunc("source_ldap_compute_function_for_givenName");

var source_ldap_compute_function_for_sn = 
  lcConfUtils.getSourceDataComputeFunc("source_ldap_compute_function_for_sn");
	
var source_ldap_compute_function_for_cn =
  lcConfUtils.getSourceDataComputeFunc("source_ldap_compute_function_for_cn");
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="init_flow" state="Enabled"/>
                    <Component name="get_operation" state="Enabled"/>
                    <Component name="get_uid" state="Enabled"/>
                    <Component name="if_add_or_modify" state="Enabled"/>
                    <Component name="check_for_modify" state="Enabled"/>
                    <Component name="compute_common" state="Enabled"/>
                    <Component name="add_secretary_data" state="Simulated"/>
                    <Component name="add_manager_data" state="Simulated"/>
                    <Component name="addorUpdateDB" state="Enabled"/>
                    <Component name="indicateResult" state="Enabled"/>
                    <Component name="else_if_delete" state="Enabled"/>
                    <Component name="get_delete_or_inactivate" state="Enabled"/>
                    <Component name="uidValue" state="Enabled"/>
                    <Component name="if_perform_delete" state="Enabled"/>
                    <Component name="deleteEntry" state="Simulated"/>
                    <Component name="else_if_perform_inactivate" state="Enabled"/>
                    <Component name="lookupKey" state="Enabled"/>
                    <Component name="inactivateEntry" state="Enabled"/>
                    <Component name="indicateResultDel" state="Enabled"/>
                    <Component name="else" state="Enabled"/>
                    <Component name="log_error" state="Enabled"/>
                    <Component name="ProfileConnector" state="Simulated"/>
                    <Component name="profileActivate" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="init_flow">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript>var syncError = false;</ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <ALMap name="get_operation">
                    <AttributeMap name="Input">
                        <AttributeMapItem>
                            <Name>$operation</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>ret.value = getOperation();</Script>
                            <Simple>$operation</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>
                <Connector name="get_uid">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
//---------------------------------------
// Get the value in UID if we have not 
// already
//---------------------------------------
// TODO - slight hack: hard override of uid
// Too many dependencies to correctly fix in iFIX.
// During testing 'overriding' the value had the correct result.
// For 3.0 fix, want to implement 'correct' fix.

	var mapValue = db_from_ldap_array["uid"];
	if(mapValue != null) {
		var val = null;
		//----------------------------------------
		// if our mapping gave us a 
		// a function, use it passing the name
		// of the field (our convention).  
		// Otherwise, get the value of the 
		// given attribute
		//----------------------------------------
		if(typeof(mapValue) == "function") {
			val = mapValue("uid");
		}
		else {
			val = work.getString(mapValue);		
		}
		if(val != null) {
			var attr = work.newAttribute("uid");
			attr.setValue(val);
		}
	}
	else {
		log1("ERROR", "err_no_uid", work.getString("$dn"));
		system.skipEntry();
	}
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Branch name="if_add_or_modify">
                    <Connector name="check_for_modify">
                        <ConnectorMode>Script</ConnectorMode>
                        <ConnectorState>Enabled</ConnectorState>
                        <Configuration/>
                        <ConnectorScript><![CDATA[
//-----------------------------------------------------------
// We do not support modify type attributes. Note that we 
// expect callers of this AL, like process_tds_updates, to 
// convert modify to replace attributes.
//-----------------------------------------------------------
var attnames = work.getAttributeNames();
for (i=0; i < attnames.length;i++)
 {
	if (work.getAttribute(attnames[i]).getOperation() == "modify") {
		log1("ERROR", "err_unexpected_modify", work.getString("$dn"));
		system.skipEntry();
	}
}
]]></ConnectorScript>
                        <ComputeChanges>true</ComputeChanges>
                        <DeltaBehavior>0</DeltaBehavior>
                        <DeltaStrict>true</DeltaStrict>
                        <Parser>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                        </Parser>
                        <AttributeMap name="Input"/>
                        <AttributeMap name="Output"/>
                        <DeltaSettings>
                            <Driver>BTree</Driver>
                        </DeltaSettings>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <LinkCriteria/>
                        <Hooks/>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                        <InitializeOption>0</InitializeOption>
                    </Connector>
                    <Connector name="compute_common">
                        <ConnectorMode>Script</ConnectorMode>
                        <ConnectorState>Enabled</ConnectorState>
                        <Configuration/>
                        <ConnectorScript><![CDATA[
//-----------------------------------------
// We allow for javascript functions to 
// set values of common LDAP fields we
// use like cn, sn, givenName before we
// do our mappings.  For example, sn
// and/or givenName could be parsed from
// cn
//-----------------------------------------
if(source_ldap_compute_function_for_cn != null) {
	var attr = null;
	try
	{
		attr = source_ldap_compute_function_for_cn();
		if(attr != null) {
			work.setAttribute(attr);
		}
	}
	catch(e)
	{
			log2("ERROR", "err_compute_func_exception", "cn", "" + e);
			attr = null;
	} 
}

if(source_ldap_compute_function_for_givenName != null) {
	var attr = null;
	try
	{
		attr = source_ldap_compute_function_for_givenName();
		if(attr != null) {
			work.setAttribute(attr);
		}
	}
	catch(e)
	{
			log2("ERROR", "err_compute_func_exception", "givenName", "" + e);
			attr = null;
	} 
}

if(source_ldap_compute_function_for_sn != null) {
	var attr = null;
	try
	{
		attr = source_ldap_compute_function_for_sn();
		if(attr != null) {
			work.setAttribute(attr);
		}
	}
	catch(e)
	{
			log2("ERROR", "err_compute_func_exception", "sn", "" + e);
			attr = null;
	} 
}
]]></ConnectorScript>
                        <ComputeChanges>true</ComputeChanges>
                        <DeltaBehavior>0</DeltaBehavior>
                        <DeltaStrict>true</DeltaStrict>
                        <Parser>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                        </Parser>
                        <AttributeMap name="Input"/>
                        <AttributeMap name="Output"/>
                        <DeltaSettings>
                            <Driver>BTree</Driver>
                        </DeltaSettings>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <LinkCriteria/>
                        <Hooks/>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                        <InitializeOption>0</InitializeOption>
                    </Connector>
                    <Function name="add_secretary_data">
                        <InheritFrom>/Functions/AddSecretaryDataFC</InheritFrom>
                        <ConnectorState>Enabled</ConnectorState>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                        </Hooks>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                        </Configuration>
                        <SandboxConfig/>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                    </Function>
                    <Function name="add_manager_data">
                        <InheritFrom>/Functions/AddManagerDataFC</InheritFrom>
                        <ConnectorState>Enabled</ConnectorState>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                        </Hooks>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                        </Configuration>
                        <SandboxConfig/>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                    </Function>
                    <Connector name="addorUpdateDB">
                        <ConnectorMode>Script</ConnectorMode>
                        <ConnectorState>Enabled</ConnectorState>
                        <Configuration/>
                        <ConnectorScript><![CDATA[
var theEntry = new com.ibm.di.entry.Entry();

if(!map_into_entry(db_from_ldap_array, theEntry)) {
	log1("ERROR", "err_mapping_failed_for_entry", work.getString("$dn"));
	system.skipEntry();
}
	
//add by tyw-2009-11-22
create_extension_attribute_mappings(db_from_ldap_array, theEntry);
//end add

var uidValue = work.getAttribute("uid").getValue();
var keyValue = work.getString("key");

if (js_trace_level.error <= trace_javascript_level) {
	task.logmsg("ERROR", "validation uidValue: " + uidValue);
	task.logmsg("ERROR", "validation keyValue: " + keyValue);
}

// now validate value against validation rule in validate_dbrepos_fields.properties 

if (uidValue!=null)
{
	if((theEntry.getString("surname")==null) || (theEntry.getString("surname")==""))
	{
		if (js_trace_level.error <= trace_javascript_level)
			task.logmsg("ERROR", "null surname for entry: " + uidValue);

		// note that most of the warnings in the profiles_messages_xx.properties files are really errors, i.e.,
		// the message id ends in 'E', as does the one used below which corresponds to CLFRN0209E.  This has been
		// the case since day 1 and it's too much bother to fix at this point.
		log2("WARN", "warn_validation_failed_for", "surname", "null or the empty string"); // don't worry about translation of 'null or emptry string'
		log1("ERROR", "warn_validation_failed_for_entry", work.getString("$dn"));

		system.skipEntry();
	}
	
	if((theEntry.getString("displayName")==null) || (theEntry.getString("displayName")==""))
	{
		if (js_trace_level.error <= trace_javascript_level)
			task.logmsg("ERROR", "null displayName for entry: " + uidValue);

		// note that most of the warnings in the profiles_messages_xx.properties files are really errors, i.e.,
		// the message id ends in 'E', as does the one used below which corresponds to CLFRN0209E.  This has been
		// the case since day 1 and it's too much bother to fix at this point.
		log2("WARN", "warn_validation_failed_for", "displayName", "null or the empty string"); // don't worry about translation of 'null or emptry string'
		log1("ERROR", "warn_validation_failed_for_entry", work.getString("$dn"));

		system.skipEntry();
	}
	
	

	try {
		var resultEntry;
		var searchCriteria;
		
		//Find entry in DB by ProfileConnector - create searchCriteria
		if(keyValue != null && keyValue != "")
			var searchCriteria = com.ibm.di.server.SearchCriteria("key", com.ibm.di.server.SearchCriteria.EXACT, keyValue);
		else
			var searchCriteria = com.ibm.di.server.SearchCriteria("uid", com.ibm.di.server.SearchCriteria.EXACT, uidValue);
			
		resultEntry = ProfileConnector.connector.findEntry(searchCriteria);		
		
		if (resultEntry!=null)
		{
			//
			// Add code so we correctly note duplicates!!!!!!
			//

			var aTemp = work.newAttribute("inDb");
			aTemp.addValue("true");

			if (js_trace_level.debug <= trace_javascript_level)
				task.logmsg("++++++update it");
			key = resultEntry.getAttribute("key").getValue();
			theEntry.addAttributeValue("key", key);

			theEntry.addAttributeValue("sourceUrl", sync_store_source_url);
			if (sync_source_url_override != true) {
				var db_url_attribute = resultEntry.getAttribute("sourceUrl");
				if(db_url_attribute!=null){
					var db_url = db_url_attribute.getValue();
					if(db_url!=null){
						theEntry.addAttributeValue("sourceUrl", db_url);
					}
				}
			}
			
			if(!validate_all(validate_dbrepos_field_array, theEntry)) {
				log1("ERROR", "warn_validation_failed_for_entry", work.getString("$dn"));
				system.skipEntry();
			}

			//update to DB
			if (js_trace_level.debug <= trace_javascript_level) {
				task.logmsg("++++++dump mapped LDAPEntry before update to DB:");
				task.dumpEntry(theEntry);
			}
			var searchCriteria = com.ibm.di.server.SearchCriteria("key", com.ibm.di.server.SearchCriteria.EXACT, theEntry.getAttribute("key").getValue(0));
			dbEntry = ProfileConnector.connector.modEntry(theEntry,searchCriteria);
		}
		else
		{
			if (js_trace_level.debug <= trace_javascript_level)
				task.logmsg("++++++update db, create the entry");

			theEntry.addAttributeValue("sourceUrl", sync_store_source_url);

			if(!validate_all(validate_dbrepos_field_array, theEntry)) {
				log1("ERROR", "warn_validation_failed_for_entry", work.getString("$dn"));
				system.skipEntry();
			}

			if (js_trace_level.debug <= trace_javascript_level) {
				task.logmsg("++++++dump  mapped LDAPEntry before create to DB:");
				task.dumpEntry(theEntry);
			}
			ProfileConnector.connector.putEntry(theEntry);	
		}
	}catch(e){
		log0("ERROR", e);
		system.skipEntry();
	}
}
else
{
	log1("ERROR", "err_no_uid", work.getString("$dn"));
	system.skipEntry();

}]]></ConnectorScript>
                        <Parser>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                        </Parser>
                        <AttributeMap name="Input"/>
                        <AttributeMap name="Output"/>
                        <DeltaSettings>
                            <Driver>BTree</Driver>
                        </DeltaSettings>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <LinkCriteria/>
                        <Hooks/>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                        <InitializeOption>0</InitializeOption>
                    </Connector>
                    <ALMap name="indicateResult">
                        <AttributeMap name="Input">
                            <AttributeMapItem>
                                <Name>outputResult</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Add>true</Add>
                                <Modify>true</Modify>
                                <Script><![CDATA[
//-----------------------------------------
// If we have not skipped the entry to this
// point, we indicate success
//-----------------------------------------
if ("true" == work.getString("inDb")) {
	ret.value = "duplicate";
} else {
	ret.value = "written";
}
]]></Script>
                                <Simple>outputResult</Simple>
                                <SubstitutionTemplate>null</SubstitutionTemplate>
                            </AttributeMapItem>
                        </AttributeMap>
                        <State>Enabled</State>
                    </ALMap>
                    <ScriptCondition/>
                    <Conditions>
                        <BranchCondition>
                            <LeftHand>$operation</LeftHand>
                            <Operator>equals</Operator>
                            <RightHand>add</RightHand>
                            <Negate>false</Negate>
                            <CaseSensitive>true</CaseSensitive>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                        <BranchCondition>
                            <LeftHand>$operation</LeftHand>
                            <Operator>equals</Operator>
                            <RightHand>modify</RightHand>
                            <Negate>false</Negate>
                            <CaseSensitive>true</CaseSensitive>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                    </Conditions>
                    <MatchAny>true</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>0</Type>
                </Branch>
                <Branch name="else_if_delete">
                    <ALMap name="get_delete_or_inactivate">
                        <AttributeMap name="Input">
                            <AttributeMapItem>
                                <Name>deleteActionFlag</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Add>true</Add>
                                <Modify>true</Modify>
                                <Script><![CDATA[
aProp = system.getTDIProperty("profiles", "sync_delete_or_inactivate");
if((aProp != null)) {
	ret.value = aProp;
}
else {
	ret.value = "null";
}
]]></Script>
                                <Simple>$operation</Simple>
                                <SubstitutionTemplate>null</SubstitutionTemplate>
                            </AttributeMapItem>
                        </AttributeMap>
                        <State>Enabled</State>
                    </ALMap>
                    <ALMap name="uidValue">
                        <InheritFrom>[no inheritance]</InheritFrom>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <AttributeMapItem>
                                <Name>entryUID</Name>
                                <Type>advanced</Type>
                                <Script>ret.value = work.getString("uid");</Script>
                            </AttributeMapItem>
                        </AttributeMap>
                        <State>Enabled</State>
                    </ALMap>
                    <Branch name="if_perform_delete">
                        <Connector name="deleteEntry">
                            <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                            <ConnectorMode>Delete</ConnectorMode>
                            <ConnectorState>Enabled</ConnectorState>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                <parameter name="stateName">li.state_nochange</parameter>
                            </Configuration>
                            <Parser>
                                <InheritFrom>[parent]</InheritFrom>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                            </Parser>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>*</Name>
                                    <Type>simple</Type>
                                    <Simple>*</Simple>
                                </AttributeMapItem>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <DeltaSettings/>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>distinguishedName</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>email</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>guid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>key</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>sourceUrl</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>uid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>usrState</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>distinguishedName</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>email</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>guid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>key</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>sourceUrl</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>uid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>usrState</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </Schema>
                            <LinkCriteria>
                                <InheritFrom>[parent]</InheritFrom>
                                <LinkCriteriaItem>
                                    <Key>127a87365d5</Key>
                                    <Attribute>uid</Attribute>
                                    <Operator>equals</Operator>
                                    <Value>$entryUID</Value>
                                </LinkCriteriaItem>
                            </LinkCriteria>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                            </Hooks>
                            <CheckpointConfig/>
                            <SandboxConfig/>
                            <Reconnect>
                                <InheritFrom>[parent]</InheritFrom>
                                <ReconnectRules/>
                            </Reconnect>
                            <Operations/>
                            <PoolDefinition>
                                <InheritFrom>[parent]</InheritFrom>
                            </PoolDefinition>
                            <PoolInstance/>
                            <InitializeOption>0</InitializeOption>
                        </Connector>
                        <Conditions>
                            <BranchCondition>
                                <LeftHand>deleteActionFlag</LeftHand>
                                <Operator>equals</Operator>
                                <RightHand>delete</RightHand>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>0</Type>
                    </Branch>
                    <Branch name="else_if_perform_inactivate">
                        <Connector name="lookupKey">
                            <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                            <ConnectorMode>Lookup</ConnectorMode>
                            <ConnectorState>Disabled</ConnectorState>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                <parameter name="stateName">li.state_nochange</parameter>
                            </Configuration>
                            <Parser>
                                <InheritFrom>[parent]</InheritFrom>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                            </Parser>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>*</Name>
                                    <Type>simple</Type>
                                    <Simple>*</Simple>
                                </AttributeMapItem>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <DeltaSettings/>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>distinguishedName</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>email</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>guid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>key</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>sourceUrl</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>uid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>usrState</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>distinguishedName</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>email</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>guid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>key</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>sourceUrl</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>uid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>usrState</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </Schema>
                            <LinkCriteria>
                                <InheritFrom>[parent]</InheritFrom>
                                <LinkCriteriaItem>
                                    <Key>1296df9b94f</Key>
                                    <Attribute>distinguishedName</Attribute>
                                    <Operator>equals</Operator>
                                    <Value>$$dn</Value>
                                </LinkCriteriaItem>
                            </LinkCriteria>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                            </Hooks>
                            <CheckpointConfig/>
                            <SandboxConfig/>
                            <Reconnect>
                                <InheritFrom>[parent]</InheritFrom>
                                <ReconnectRules/>
                            </Reconnect>
                            <Operations/>
                            <PoolDefinition>
                                <InheritFrom>[parent]</InheritFrom>
                            </PoolDefinition>
                            <PoolInstance/>
                            <InitializeOption>0</InitializeOption>
                        </Connector>
                        <Connector name="inactivateEntry">
                            <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                            <ConnectorMode>Update</ConnectorMode>
                            <ConnectorState>Enabled</ConnectorState>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                <parameter name="stateName">li.state_inactivate</parameter>
                            </Configuration>
                            <Parser>
                                <InheritFrom>[parent]</InheritFrom>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                            </Parser>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>*</Name>
                                    <Type>simple</Type>
                                    <Simple>*</Simple>
                                </AttributeMapItem>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>*</Name>
                                    <Type>simple</Type>
                                    <Simple>*</Simple>
                                </AttributeMapItem>
                            </AttributeMap>
                            <DeltaSettings/>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>distinguishedName</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>email</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>guid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>key</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>sourceUrl</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>uid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>usrState</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>distinguishedName</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>email</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>guid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>key</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>sourceUrl</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>uid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>usrState</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </Schema>
                            <LinkCriteria>
                                <InheritFrom>[parent]</InheritFrom>
                                <LinkCriteriaItem>
                                    <Key>137181f2037</Key>
                                    <Attribute>uid</Attribute>
                                    <Operator>equals</Operator>
                                    <Value>$entryUID</Value>
                                </LinkCriteriaItem>
                            </LinkCriteria>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                            </Hooks>
                            <CheckpointConfig/>
                            <SandboxConfig/>
                            <Reconnect>
                                <InheritFrom>[parent]</InheritFrom>
                                <ReconnectRules/>
                            </Reconnect>
                            <Operations/>
                            <PoolDefinition>
                                <InheritFrom>[parent]</InheritFrom>
                            </PoolDefinition>
                            <PoolInstance/>
                            <InitializeOption>0</InitializeOption>
                        </Connector>
                        <Conditions>
                            <BranchCondition>
                                <LeftHand>deleteActionFlag</LeftHand>
                                <Operator>equals</Operator>
                                <RightHand>inactivate</RightHand>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>1</Type>
                    </Branch>
                    <ALMap name="indicateResultDel">
                        <AttributeMap name="Input">
                            <AttributeMapItem>
                                <Name>outputResult</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Add>true</Add>
                                <Modify>true</Modify>
                                <Script><![CDATA[
//-----------------------------------------
// If we have not skipped the entry to this
// point, we indicate success
//-----------------------------------------
ret.value = "deleted";
]]></Script>
                                <Simple>outputResult</Simple>
                                <SubstitutionTemplate>null</SubstitutionTemplate>
                            </AttributeMapItem>
                        </AttributeMap>
                        <State>Enabled</State>
                    </ALMap>
                    <Conditions>
                        <BranchCondition>
                            <LeftHand>$operation</LeftHand>
                            <Operator>equals</Operator>
                            <RightHand>delete</RightHand>
                            <Negate>false</Negate>
                            <CaseSensitive>true</CaseSensitive>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                    </Conditions>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>1</Type>
                </Branch>
                <Branch name="else">
                    <Connector name="log_error">
                        <ConnectorMode>Script</ConnectorMode>
                        <ConnectorState>Enabled</ConnectorState>
                        <Configuration/>
                        <ConnectorScript>log1("ERROR", "err_unexpected_operation", work.getString("$operation"));</ConnectorScript>
                        <ComputeChanges>true</ComputeChanges>
                        <DeltaBehavior>0</DeltaBehavior>
                        <DeltaStrict>true</DeltaStrict>
                        <Parser>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                        </Parser>
                        <AttributeMap name="Input"/>
                        <AttributeMap name="Output"/>
                        <DeltaSettings>
                            <Driver>BTree</Driver>
                        </DeltaSettings>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <LinkCriteria/>
                        <Hooks/>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                        <InitializeOption>0</InitializeOption>
                    </Connector>
                    <Conditions/>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>2</Type>
                </Branch>
                <Connector name="ProfileConnector">
                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="stateName">li.state_activate</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="profileActivate">
                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Activate</ConnectorMode>
                    <ConnectorState>Disabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="stateName">li.state_nochange</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_call">
                            <Name>before_call</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations>
                <Operation name="add">
                    <Schema name="Input"/>
                    <Schema name="Output"/>
                    <AttributeMap name="Input">
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>syncExisting</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>syncExisting</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output"/>
                    <Public>true</Public>
                </Operation>
                <Operation name="delete">
                    <Schema name="Input"/>
                    <Schema name="Output"/>
                    <AttributeMap name="Input">
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>syncExisting</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>syncExisting</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output"/>
                    <Public>true</Public>
                </Operation>
                <Operation name="modify">
                    <Schema name="Input"/>
                    <Schema name="Output"/>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <Public>true</Public>
                </Operation>
            </Operations>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="TEST_source_repository_lookup">
            <ModTime>1398114849565</ModTime>
            <Settings/>
            <Hooks>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script>load_lcConf();</Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="set_debug" state="Enabled"/>
                    <Component name="PopFromDns_lookup_dn" state="Simulated"/>
                    <Component name="NoteSuccess" state="Enabled"/>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                    <Component name="iterate_over_dns" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="iterate_over_dns">
                    <InheritFrom>/Connectors/PopFromDns_iterate_over_dns</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>line</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>linenumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <ALMap name="set_debug">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$_debug</Name>
                            <Type>advanced</Type>
                            <Script>ret.value = true;</Script>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>
                <Function name="PopFromDns_lookup_dn">
                    <InheritFrom>/Functions/PopFromDns_lookup_dn</InheritFrom>
                    <ConnectorState>Enabled</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>

                <Script name="NoteSuccess">
                    <parameter name="script"><![CDATA[
++successCounter;
lastSuccessfulDN = work.getString("$dn");
]]></parameter>
                </Script>

                <Script name="DumpWorkEntry">
                    <parameter name="script"><![CDATA[
// TEST_source_repository_lookup
// Dump the work entry
task.dumpEntry(work);
]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="_internal_ldap_iterate">
            <ModTime>1398114850252</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script>throw error.getObject( "exception" );</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
load_lcConf(true);

//-----------------------------------------------
// Variables needed in case we do our own sorted
// page search
//-----------------------------------------------
var sortedSearchAttribute = lcConf.source_ldap_sort_attribute;
var sortedPageSize = 0;
var sortedTotalIterations = 0;
var sortedSkipFirstEntry = false;

// need better error checking now that the sort properties are used in the LDAP connector config
// first need to get the actual property values since that's what's used in the config.
var source_ldap_sort_attribute_str = system.getTDIProperty("profiles", "source_ldap_sort_attribute");
var source_ldap_sort_page_size_str = system.getTDIProperty("profiles", "source_ldap_sort_page_size");
var source_ldap_page_size_str = system.getTDIProperty("profiles", "source_ldap_page_size");
var source_ldap_iterate_with_filter_str = system.getTDIProperty("profiles", "source_ldap_iterate_with_filter");

if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("<<<<<source_ldap_sort_page_size_str : '" + source_ldap_sort_page_size_str + "'" );
	task.logmsg("<<<<<source_ldap_sort_attribute_str : '" + source_ldap_sort_attribute_str + "'" );
	task.logmsg("<<<<<source_ldap_page_size_str : '" + source_ldap_page_size_str + "'" );
	task.logmsg("<<<<<source_ldap_iterate_with_filter_str : '" + source_ldap_iterate_with_filter_str + "'" );

	task.logmsg("<<<<<sortedSearchAttribute : '" + sortedSearchAttribute + "'" );
	task.logmsg("<<<<<sortedPageSize : '" + sortedPageSize + "'" );
}

// make sure the sort attr name and sort page size properties exist.	If not, abort
if ((source_ldap_sort_attribute_str == null ) || (source_ldap_sort_page_size_str == null))
{
	consoleMsg("out", "********** ERROR: see the log for details.  Aborting.");
	system.abortAssemblyLine("aborting in _internal_ldap_iterate: one or both of the sort properties 'source_ldap_sort_attribute' or 'source_ldap_sort_page_size' is undefined.");
}
// make sure sort page size has value.  If not, abort
if (source_ldap_sort_page_size_str == "")
{
	consoleMsg("out", "********** ERROR: The property source_ldap_sort_page_size= in profiles_tdi.properties must have a non-empty value which is an integer greater than or equal to 0.  See the log for details.  Aborting.");
	system.abortAssemblyLine("aborting in _internal_ldap_iterate: the sort related property 'source_ldap_sort_page_size' must have a value.  It must be an integer greater than or equal to 0.  Set the value to 0 if you are not using it.");
}


// make sure the page size and chunking properties exist. Note that there are two page sizes, the sort one above, and the non-sort one below.
if ((source_ldap_page_size_str == null ) || (source_ldap_iterate_with_filter_str == null))
{
	consoleMsg("out", "********** ERROR: see the log for details.  Aborting.");
	system.abortAssemblyLine("aborting in _internal_ldap_iterate: one or both of the paging properties 'source_ldap_page_size_str' or 'source_ldap_iterate_with_filter_str' is undefined.");
}

// make sure the page size has a value.
if (source_ldap_page_size_str == "")
{
	consoleMsg("out", "********** ERROR: The property source_ldap_page_size_str= in profiles_tdi.properties must have a non-empty value which is an integer greater than or equal to 0.  See the log for details.   Aborting.");
	system.abortAssemblyLine("ERROR: the property 'source_ldap_page_size_str' must have a value.  It must be an integer greater than or equal to 0.  Set the value to 0 if you are not using it.  Aborting.");
}

// make sure source_ldap_page_size_str is a numerical value
var valueInt_page_size = parseInt( source_ldap_page_size_str );

// for some reason checking for NaN doesn't work here, but this is the equivalent
if (!((valueInt_page_size >= 0) || (valueInt_page_size <= 0)) )
{
		consoleMsg("out", "********** ERROR: see the log for details.  Aborting.");
		system.abortAssemblyLine("aborting in _internal_ldap_iterate: The simple page size property (source_ldap_page_size_str) must be a valid positive integer or zero.  Aborting.");
}

// make sure source_ldap_sort_page_size_str is a numerical value
var valueInt_sort_page_size = parseInt( source_ldap_sort_page_size_str );

// for some reason checking for NaN doesn't work here, but this is the equivalent
if (!((valueInt_sort_page_size >= 0) || (valueInt_sort_page_size <= 0)) )
{
		consoleMsg("out", "********** ERROR: see the log for details.  Aborting.");
		system.abortAssemblyLine("aborting in _internal_ldap_iterate: The sort page size property (source_ldap_sort_page_size) must be a valid positive integer or zero.  Aborting.");
}

// first check that default values are still in place.  If so, only need check that both simple paging and
// chunking are not both enabled.
if ((source_ldap_sort_attribute_str == "" ) && 
		(source_ldap_sort_page_size_str == "0")) 
{
	// values are the default values, i.e., sort page not enabled. 
	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("<<<<<v sort_attribute and sort_page_size are the default values." )
	}

	// check for both simple paging and chunking paging enabled.
	if ((source_ldap_page_size_str != "0" ) && ((source_ldap_iterate_with_filter_str == "true") || (source_ldap_iterate_with_filter_str == "TRUE")))
	{
		consoleMsg("out", "********** ERROR: see the log for details.  Aborting.");
		system.abortAssemblyLine("ERROR: both simple paging (source_ldap_page_size=) and chunking paging (source_ldap_iterate_with_filter) appear to be enabled.  Aborting");
	}

}
else
{

	// sort paging is enabled.
	// check for either simple paging or chunking paging enabled.
	if ((source_ldap_page_size_str != "0" ) || ((source_ldap_iterate_with_filter_str == "true") || (source_ldap_iterate_with_filter_str == "TRUE")))
	{
		consoleMsg("out", "********** ERROR: see the log for details.  Aborting.");
		system.abortAssemblyLine("aborting in _internal_ldap_iterate: sort paging and simple paging (source_ldap_page_size=) and/or chunking (source_ldap_iterate_with_filter) appear to be enabled.  Aborting");
	}


	// at least one of the two sort paging properties has been changed, so rules must be followed:
	//   1. there must be an attribute
	//   2. page size must be > 0 (i.e., a valid positive interger)
	//   3. the attribute must appear in the filter

	sortedPageSize = lcConf.source_ldap_sort_page_size;	// mimic old code

	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("<<<<<sortedSearchAttribute : '" + sortedSearchAttribute + "'" );
		task.logmsg("<<<<<sortedPageSize : '" + sortedPageSize + "'" );
		task.logmsg("<<<<<valueInt_sort_page_size  : '" + valueInt_sort_page_size  + "'" );
	}

	// check that size is an integer >= 10
	if (valueInt_sort_page_size < 10)
		system.abortAssemblyLine("Error: The sort page size property - source_ldap_sort_page_size= - must be greater than 10 if it is not 0. Aborting.");

	// now check that filter contains the attribute name
	// first, get filter and make sure the property is there
	var source_ldap_search_filter_str = system.getTDIProperty("profiles", "source_ldap_search_filter");

	// make sure the attr name prop is has a value
	if (source_ldap_sort_attribute_str == "" )
	{
			consoleMsg("out", "********** ERROR: see the log for details.  Aborting.");
			system.abortAssemblyLine("Error: The sort page size  property - source_ldap_sort_page_size= - in profiles_tdi.properties is non-zero, but the sort attribute name property - source_ldap_sort_attribute= - is has no value.  Aborting.");
	}

	// make sure filter contains attr name
	if (source_ldap_search_filter_str == null )
	{
		consoleMsg("out", "********** ERROR: see the log for details.  Aborting.");
		system.abortAssemblyLine("Error: The source_ldap_search_filter= filter property in profiles_tdi.properties is not defined so the sort attribute name does not appear in the filter.");
	}


	// find sort attr in filter
	var posStart = source_ldap_search_filter_str.indexOf("(" + sortedSearchAttribute);

	
	if(posStart <= 0) {
		consoleMsg("out", "********** ERROR: see the log for details.  Aborting.");
		var msgText = log1("ERROR", "err_sort_attr_not_found", source_ldap_search_filter_str);
		system.abortAssemblyLine(msgText );
	}
}



// leave in global property
if (!this.lastSuccessfulDN) {
	lastSuccessfulDN = null;
}

if (!this.retCode) {
	retCode = 0;
}

//--------------------------------------------------------
// In case this AL is called via call-and-return from
// another AL, we allow the source filter to be passed
// in.  We check for and handle that possibility
//--------------------------------------------------------
var _source_filter = null;
var _source_base = null;

	if (js_trace_level.debug <= trace_javascript_level)
	{
		var tcb = task.getTCB();
		task.logmsg("<<<<<Iterator tcb: " + tcb);
	}

	var configMap = task.getTCB().getALSetting("__accumulatorParameters__");

	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("<<<<<Iterator configMap0: " + configMap);

		var config = ldap_iterate.connector.getConfiguration();
		task.logmsg("<<<<<Iterator config : " + config );
	}

	if (configMap != null) {

	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("<<<<<Iterator configMap1: " + configMap);

	var changeConnConfig = false;
	_source_filter = configMap.get("_source_filter");

	if(_source_filter != null)
	{
		console1("out", "info_search_filter", _source_filter);
		ldap_iterate.connector.setParam( "ldapSearchFilter", "" + _source_filter);
		changeConnConfig = true;
	}

	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("<<<<<Iterator filter: " + ldap_iterate.connector.getParam( "ldapSearchFilter"));

	_source_base = configMap.get("_source_base");
	if(_source_base != null) 
	{
		console1("out", "info_search_base", _source_base);
		ldap_iterate.connector.setParam( "ldapSearchBase", "" + _source_base);
		changeConnConfig = true;
	}
	
	if (js_trace_level.debug <= trace_javascript_level) 
	{
		task.logmsg("<<<<<Iterator base: " + ldap_iterate.connector.getParam( "ldapSearchFilter"));
		task.logmsg("<<<<<Iterator ldap_iterate.connector.getConfiguration(): " + ldap_iterate.connector.getConfiguration());
	}
}

itsDone = false;
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="ldap_iterate" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="ldap_iterate">
                    <InheritFrom>/Connectors/FetchLDAPDataWithFilter</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="automapADPassword">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="ldapAddAttr">false</parameter>
                        <parameter name="ldapAuthenticationMethod">@SUBSTITUTE{property.profiles:source_ldap_authentication_method}</parameter>
                        <parameter name="ldapBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid]]></parameter>
                        <parameter name="ldapPageSize">@SUBSTITUTE{property.profiles:source_ldap_page_size}</parameter>
                        <parameter name="ldapPassword">@SUBSTITUTE{property.profiles:source_ldap_user_password}</parameter>
                        <parameter name="ldapReferrals">follow</parameter>
                        <parameter name="ldapReturnAttributes"><![CDATA[ibm-entryUuid
entryUUID
objectGUID
nsuniqueid
dominounid
GUID
modifyTimestamp
*]]></parameter>
                        <parameter name="ldapSearchBase">@SUBSTITUTE{property.profiles:source_ldap_search_base}</parameter>
                        <parameter name="ldapSearchFilter">@SUBSTITUTE{property.profiles:source_ldap_search_filter}</parameter>
                        <parameter name="ldapSearchScope">subtree</parameter>
                        <parameter name="ldapSizeLimit">@SUBSTITUTE{property.profiles:source_ldap_sort_page_size}</parameter>
                        <parameter name="ldapSortAttribute">@SUBSTITUTE{property.profiles:source_ldap_sort_attribute}</parameter>
                        <parameter name="ldapTimeLimit">0</parameter>
                        <parameter name="ldapUrl">@SUBSTITUTE{property.profiles:source_ldap_url}</parameter>
                        <parameter name="ldapUseSSL">@SUBSTITUTE{property.profiles:source_ldap_use_ssl}</parameter>
                        <parameter name="ldapUsername">@SUBSTITUTE{property.profiles:source_ldap_user_login}</parameter>
                        <parameter name="ldapVLVPageSize">0</parameter>
                        <parameter name="simulateRename">false</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>*</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
if (this.itDone) {
	if(work != null) {
		var retAttr = work.getAttribute("retCode");
		if(retAttr == null) {
			retAttr = work.newAttribute("retCode");
		}
		retAttr.setValue("" + retCode);
	}	
}]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
//	task.dumpEntry(conn);

if(sortedPageSize > 0) {
	++sortedIterationCount;
	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("<<<<<Iterator sortedIterationCount: " + sortedIterationCount);

	if(sortedSkipFirstEntry) {

		if (js_trace_level.debug <= trace_javascript_level) {
			task.logmsg("<<<<<Iterator sortedSkipFirstEntry: " + sortedSkipFirstEntry);
			task.logmsg("<<<<<Iterator conn.getString(sortedSearchAttribute): " + conn.getString(sortedSearchAttribute));
		}

		sortedSkipFirstEntry = false;
		system.skipEntry();
	}
	else {
		++sortedTotalIterations;

		//task.logmsg("<<<<<Iterator sortedTotalIterations: " + sortedTotalIterations);		

		sortedLastGuid = conn.getString(sortedSearchAttribute);
		if(sortedLastGuid == null) {
			log1("WARN", "warn_sort_page_attr_not_found", conn.getString("$dn"));
			system.skipEntry();
		}	
	}
}

var sdn = conn.getString("$dn");
if(sdn != null) {
	if(sdn.length() > 0) {
		/*-----------------------------------------------------------
         * We may be told to ignore any entries that do not contain
         * a particular regular expression pattern. If this was 
		 * configured test the pattern and skip if false
         *-----------------------------------------------------------*/ 		
		if(lcConf.source_ldap_required_dn_regex_pattern != null) {
			if(!lcConf.source_ldap_required_dn_regex_pattern.test(sdn)) {
				if (js_trace_level.debug <= trace_javascript_level)
					task.logmsg("+++skipping $dn=" + sdn + 
								" because does not match required pattern:" + 
								lcConf.source_ldap_required_dn_regex_pattern);

				system.skipEntry();				
			}
		}
		
		lastSuccessfulDN = sdn;
	}
	else{
		system.skipEntry();
	}
}
else {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[
//----------------------------------------
// If sorted page technique is desired,
// make sure LDAP support sorting. Also
// make sure sortedSearchAttribute in
// search filter
//----------------------------------------
if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("<<<<<Iterator after_initialize: " + sortedPageSize );

	task.logmsg("<<<<<Iterator after_initialize: ldap_iterate.connector.supportsSorting(): " + ldap_iterate.connector.supportsSorting());
	task.logmsg("<<<<<Iterator after_initialize: ldap_iterate.connector.supportsPagedResults(): " + ldap_iterate.connector.supportsPagedResults());
	task.logmsg("<<<<<Iterator after_initialize: ldap_iterate.connector.supportsVirtualListView(): " + ldap_iterate.connector.supportsVirtualListView());
	task.logmsg("<<<<<Iterator after_initialize: ldap_iterate.connector.supportsPersistantSearch(): " + ldap_iterate.connector.supportsPersistantSearch());
}

if(sortedPageSize > 0) {
	if(!ldap_iterate.connector.supportsSorting()) {
		var msgText = log0("ERROR", "err_sorting_not_supported");
		system.abortAssemblyLine(msgText);
	}

	var oldFilter = ldap_iterate.connector.getParam("ldapSearchFilter");
	var posStart = oldFilter.indexOf("(" + sortedSearchAttribute);
	if(posStart <= 0) {
		var msgText = log1("ERROR", "err_sort_attr_not_found", oldFilter);
		system.abortAssemblyLine(oldFilter);
	}
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_getnext">
                            <Name>before_getnext</Name>
                            <Script><![CDATA[
//----------------------------------------------------
// If we are using sorted page technique, we need
// to check if we have reached our page size, and if
// so we need to set our filter for the next iteration
// and terminate the connector
//----------------------------------------------------
if(sortedPageSize > 0) {
	if(sortedIterationCount == sortedPageSize) {	
		if(sortedLastGuid != null) {
			var filter = null;
			var oldFilter = ldap_iterate.connector.getParam("ldapSearchFilter");

			if (js_trace_level.debug <= trace_javascript_level)
				task.logmsg("<<<<<Iterator oldFilter : " + oldFilter );

			var posStart = oldFilter.indexOf("(" + sortedSearchAttribute);
			if(posStart >= 0) {
				var posEnd = oldFilter.indexOf(")", posStart + 1);
				if(posEnd > 0) {
					if (js_trace_level.debug <= trace_javascript_level)
						task.logmsg("<<<<<Iterator sortedLastGuid : " + sortedLastGuid);

					filter = oldFilter.substring(0, posStart + 1) + 
						     sortedSearchAttribute + ">=" + sortedLastGuid +
							 oldFilter.substring(posEnd);

					if (js_trace_level.debug <= trace_javascript_level)
						task.logmsg("<<<<<Iterator filter : " + filter );
				}
			}
			if(filter != null) {
				log1("INFO", "info_search_filter", filter);
				ldap_iterate.connector.setParam("ldapSearchFilter", filter);
			}
			else {
				var msgText = log1("ERROR", "err_sort_attr_not_found", oldFilter);
				system.abortAssemblyLine(oldFilter);
			}		
		}
		sortedIterationCount = 0;

		//--------------------------------------------
		// indicate to skip the first entry next time 
		// because it will be duplicate of this one
		//--------------------------------------------
		sortedSkipFirstEntry = true;

		//--------------------------------------------
		// Note that reinitialization should occur 
		// because we terminated and we changed 
		// configuration. IMPORTANT: The LDAP
		// connector must be configured to intialize
		// when configuration has changed (and is
		// used)
		//-------------------------------------------- 
		system.skipEntry();
	}
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script><![CDATA[
//--------------------------------------------------------
// In case we are doing sorted page search, we initialize
// variables here
//--------------------------------------------------------
var sortedIterationCount = 0;
var sortedLastGuid = null;
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="end_of_data">
                            <Name>end_of_data</Name>
                            <Script>itDone = true;</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script><![CDATA[
//------------------------------------------- 
// If we got a search base error and we were
// passed one, we will just ignore the error
// on the first iteration.  Otherwise, 
// display the message and terminate
//-------------------------------------------
task.logmsg("<<<<<Iterator Error");
if((_source_base != null) && (error.getString("message").indexOf(" 32") > 0)) {
	task.logmsg(error.getString("message"));
	throw error.getObject( "exception" );
}
else {
	msgText = log2("ERROR", "err_iteration_failure", lastSuccessfulDN, error.getString("message"));
	retCode = 1;	
	throw error.getObject( "exception" );
}
itDone = true;
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="on_connection_failure">
                            <Name>on_connection_failure</Name>
                            <Script>itDone = true;</Script>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="autoreconnect">true</parameter>
                        <parameter name="initreconnect">false</parameter>
                        <parameter name="numberOfRetries">10</parameter>
                        <parameter name="retryDelay">60</parameter>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
<!-- 
The purpose of this comment is to explain what "2" means in the InitializeOption element below.
The change from 0 to 2 was part of the fix for:

  142095: [Review]TDI populate with LDAP sort misses 1 out of n (sort page size) users

The value "0" (the default, and the value in all other connectors) means to initialize the 
connector once at the outset.  "2" means to re-initialize whenever connector configuration changes.
(look for the Configuration element above and you will find a number that look like:   

                      lt  parameter name="ldapSearchFilter" gt @SUBSTITUTE{property.profiles:source_ldap_search_filter}  lt /parameter  gt

The '2' is needed for sort-paging to work.  In the course of sort-paging, we count the responses and modify
the ldapSearchFilter when the limit is reached to get the next batch. We set the new filter with the following line of 
code to request the next batch:

				ldap_iterate.connector.setParam("ldapSearchFilter", filter);

The InitializeOption element must be '2' for this line of code to have any effect.

Further reading if you have any questions:

1. Pull this assembly into the config editor and look at the InitializeOption to see the
   corresponding text.  The text is something to the effect of re-initialize on config change.

2. Look at this url where the symbol for '2' is found.  The symbol is "COMP_INIT_MODIFIED", which is also the text
   at the end of the url, and it's value is 2.

     http://www.stephen-swann.co.uk/javadoc/tdi7.1/com/ibm/di/config/interfaces/ConnectorConfig.html#COMP_INIT_MODIFIED

   You will also find the method for setting the InitializeOption, but this didn't work for me. 

3. Look at the TDI 7.1.1 user guide at:
    http://www-01.ibm.com/support/knowledgecenter/#!/SSCQGF_7.1.1/com.ibm.IBMDI.doc_7.1.1/usersguide.pdf

Search for "initialize option" to find 3 or 4 general discussions of this element.

-->
                    <InitializeOption>2</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer"/>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="_internal_ldap_iterate_loop">
            <ModTime>1398114850361</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script>throw error.getObject( "exception" );</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
load_lcConf(true);

source_ldap_search_base = lcConf.source_ldap_search_base;

source_ldap_search_filter = lcConf.source_ldap_search_filter;

	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("<<<<<_internal_ldap_iterate_loop prolog0 end: ");
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="showit" state="Enabled"/>
                    <Component name="setup_loopflow" state="Enabled"/>
                    <Component name="Call_LoopFlow" state="Simulated"/>
                    <Component name="goto_next_skip_accumulator" state="Enabled"/>
                    <Component name="filter_generate" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="filter_generate">
                    <InheritFrom>system:/Connectors/ibmdi.ScriptConnector</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="includeFiles">@SUBSTITUTE{property.profiles:source_ldap_iterate_with_filter_functions_file}</parameter>
                        <parameter name="includePrologs"/>
                        <parameter name="script"><![CDATA[
function selectEntries()
{
}

function getNextEntry ()
{
	var changed = false;

	if(suppliesSearchBase()) {
		var base = getNextSearchBase();
		if(base != null) {
			changed = true;
			entry.setAttribute ("_source_base", base);
		}
	}

	if(suppliesSearchFilter()) {
		var filter = getNextSearchFilter();
		if(filter != null) {
			changed = true;
			entry.setAttribute ("_source_filter", filter);
		}
	}

	if(!changed) {
		result.setStatus (0);
		result.setMessage ("End of input");
		return;
	}
}

function putEntry ()
{
}

function modEntry ()
{
}

function deleteEntry ()
{
}

function findEntry ()
{
}

]]></parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>_source_base</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>_source_base</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>_source_filter</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>_source_filter</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>_source_base</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_source_filter</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_getnext">
                            <Name>before_getnext</Name>
                            <Script><![CDATA[
//---------------------------------------------
// We will set original search base and
// search filter.  The called script can
// override but we wish to make sure if they
// do not that the called function does not
// have an intermdeidate value
//---------------------------------------------
(function(){
	var baseEntry = work.getAttribute("_source_base");
	if(baseEntry == null) {
		baseEntry = work.newAttribute("_source_base");
	}
	baseEntry.setValue(lcConf.source_ldap_search_base);

	var filterEntry = work.getAttribute("_source_filter");
	if(filterEntry == null) {
		filterEntry = work.newAttribute("_source_filter");
	}
	filterEntry.setValue(lcConf.source_ldap_search_filter);
})();]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="showit">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
var base = work.getString("_source_base");
if(base != null) {
	task.logmsg(base);
}
var filter = work.getString("_source_filter");
if(filter != null) {
	task.logmsg(filter);
}
if((base == null) && (filter == null)) {
	system.abortAssemblyLine("no base or filter");
}
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <ALMap name="setup_loopflow">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>accumulatorConnector</Name>
                            <Type>advanced</Type>
                            <Script>ret.value = task.getTCB().getALSetting("__accumulator__");</Script>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>accumulatorParameters</Name>
                            <Type>advanced</Type>
                            <Script><![CDATA[
var mRet = new java.util.HashMap();
var tmp = work.getString("_source_filter");
if (tmp != null) {
	mRet.put("_source_filter", tmp);
}
tmp = work.getString("_source_base");
if (tmp != null) {
	mRet.put("_source_base", tmp);
}

ret.value = mRet;
]]></Script>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>overrideAccumulatorTerminate</Name>
                            <Type>advanced</Type>
                            <Script>ret.value = true;</Script>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>overrideIteratorAssemblyline</Name>
                            <Type>advanced</Type>
                            <Script>ret.value = lcConf._internal_source_repository_iterator_loopflow_assemblyline;</Script>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>
                <Function name="Call_LoopFlow">
                    <InheritFrom>/Functions/SourceRepositoryIterateFC</InheritFrom>
                    <ConnectorState>Enabled</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>
                <Script name="goto_next_skip_accumulator">
                    <parameter name="script"><![CDATA[//
// Since we are looping over an AL and the TCB is supposed to be called to do the 
//  work - we skip end of the loop execution to ensure values are not double 
//  evaluated.
//
system.skipEntry();
]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="_internal_ldap_lookup_by_dn">
            <ModTime>1398114850470</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">false</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
                <parameter name="verbose"/>
            </Settings>
            <Hooks>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script><![CDATA[
// already noted error; ignore and let caller handle
system.ignoreEntry();
]]></Script>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script>load_lcConf(true);</Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="set_attributes" state="Enabled"/>
                    <Component name="lookup_user" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <ALMap name="set_attributes">
                    <AttributeMap name="Input">
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>advanced</Type>
                            <Script>work["$dn"]</Script>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>$lookup_operation</Name>
                            <Type>advanced</Type>
                            <Script>work["$lookup_operation"]</Script>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>$lookup_status</Name>
                            <Type>advanced</Type>
                            <Script>ret.value = "error";</Script>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>
                <Connector name="lookup_user">
                    <InheritFrom>/Connectors/LDAPLookupUser</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>12bca2772d7</Key>
                            <Attribute>$dn</Attribute>
                            <Operator>equals</Operator>
                            <Value>$$dn</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions>
                <parameter name="assemblyline.ehc.executeProlog">false</parameter>
                <parameter name="assemblyline.ehc.maxInstance">5</parameter>
                <parameter name="assemblyline.ehc.minPrepare"/>
            </ThreadOptions>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="dump_photos_to_files">
            <ModTime>1398114850579</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_photos}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script><![CDATA[
print_version_info();	// dump_photos_to_files

var dirProp = system.getTDIProperty("profiles", "dump_photos_directory");
if(dirProp == null) {
	dirProp = new java.lang.String("./photodump");
}

if(dirProp != null) {
	baseDirPath = dirProp.replace('\\', '/');
	if(baseDirPath.endsWith("/")) {
		baseDirPath = baseDirPath.substring(0, baseDirPath.length() - 1);
	}
	try
	{
		var baseDir = java.io.File(baseDirPath);
		if(!baseDir.exists()) {
			baseDir.mkdir();
		}
		baseDir = java.io.File(baseDirPath);
		if(!baseDir.exists() || !baseDir.isDirectory()) {
			throw new java.io.Exception(baseDirPath);
		}

		if (js_trace_level.debug <= trace_javascript_level)
		{
			task.logmsg("+++++baseDir is " + baseDir + ", type of baseDir is " + baseDir.getClass().getName());
		}
	}
	catch(e)
	{
		system.abortAssemblyLine("" + e);
	}
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
var assemblyName = "dump_photos_to_files";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="PhotoConnector" state="Enabled"/>
                    <Component name="DumpWorkEntry0" state="Enabled"/>
                    <Component name="lookup_user" state="Enabled"/>
                    <Component name="DumpWorkEntry1" state="Enabled"/>
                    <Component name="write_image" state="Enabled"/>
                    <Component name="DumpWorkEntry2" state="Enabled"/>
                    <Component name="write_out" state="Simulated"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="PhotoConnector">
                    <InheritFrom>system:/Connectors/PhotoConnector</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_photos}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>fileType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>image</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>linkStream</Name>
                            <Syntax>java.io.InputStream</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>fileType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>image</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>updated</Name>
                            <Syntax>java.util.Date</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

log3("INFO", "info_iteration_result2", "" + getCounterState(successCounter),
"" + getCounterState(failCounter), "" + lastSuccessfulUid);

console3("out", "info_iteration_result2", "" + getCounterState(successCounter), 
"" + getCounterState(failCounter), "" + lastSuccessfulUid);

lcIterUtil.report();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("Dump employee picture iterator conn:"  );
	task.dumpEntry(conn);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[var lastSuccessfulUid = null;
var retCode = 0;

// this is the overall counter
lcIterUtil.reset();

var successCounter = "successCounter";
var failCounter = "failCounter";

//clear counter result
clearCounter(successCounter);
clearCounter(failCounter);

//re-create counter
createCounter(successCounter);
createCounter(failCounter);]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">

                <Script name="DumpWorkEntry0">
                    <parameter name="script"><![CDATA[
// dump_photos_to_files
// Dump the work entry
//task.logmsg("dump_photos_to_files: DumpWorkEntry0: from iterator, before lookup");
//task.dumpEntry(work);
]]></parameter>
                </Script>

                <Connector name="lookup_user">
                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_photos}</parameter>
                        <parameter name="stateName">li.state_nochange</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managerUid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>

                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>119a0652be6</Key>
                            <Attribute>key</Attribute>
                            <Operator>equals</Operator>
                            <Value>$key</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
	task.logmsg("+++ after_close dump photos - work");
]]></Script>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_lookup">
                            <Name>before_lookup</Name>
                            <Script><![CDATA[
// after_lookup as well???
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++ before_lookup dump photos - work");
	task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
//task.logmsg("+++ default_fail dump photos - work");
incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
	task.logmsg("+++ initialize_fail dump photos - work");
]]></Script>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="lookup_fail">
                            <Name>lookup_fail</Name>
                            <Script><![CDATA[
	task.logmsg("+++ lookup_fail dump photos - work");
	task.dumpEntry(work);

]]></Script>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
//task.logmsg("+++ lookup_nomatch dump photos - conn");
incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_ok">
                            <Name>lookup_ok</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++ lookup_ok dump photos - conn");
	task.dumpEntry(conn);
	task.logmsg("+++ lookup_ok dump photos - work");
	task.dumpEntry(work);
}]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="lookup_multiple">
                            <Name>lookup_multiple</Name>
                            <Script><![CDATA[
// This hook as no purpose being here other than to serve as an example of how  
// to deal with multiple entries from the ProfileConnector which would occur 
// when the <LinkCriteria> above has 'managerUid', e.g., below we lookup 
// the employees who are managed by 'Amy Jones11'.
//
//                        <LinkCriteriaItem>
//                            <Key>119a0652be6</Key>
//                            <Attribute>managerUid</Attribute>
//                            <Operator>equals</Operator>
//                            <Value>Amy Jones11</Value>
//                        </LinkCriteriaItem>


if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++ on_multiple_entries dump photos");
}

// if you want a count, this is how to get it
//if   ( thisConnector.getDuplicateEntryCount() > 0 ) {

// According to the doc, getFirstDuplicateEntry() must be called in this hook.
	firstEntry =   thisConnector.getFirstDuplicateEntry(); 
	task.dumpEntry(firstEntry);

// getNextDuplicateEntry() can be called here or in the after_lookup hook.
	while (( nextEntry =   thisConnector.getNextDuplicateEntry()) != null ) {
		nextEntry =   thisConnector.getNextDuplicateEntry(); 
		task.dumpEntry(nextEntry);
	}

]]></Script>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="after_lookup">
                            <Name>after_lookup</Name>
                            <Script><![CDATA[
// This hook is also an example.  The 'nextEntry' loop above can also be coded
// in this hook.

if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++ after_lookup dump photos - conn");
	task.dumpEntry(conn);
	task.logmsg("+++ after_lookup dump photos - work");
	task.dumpEntry(work);
}
]]></Script>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

                <Script name="DumpWorkEntry1">
                    <parameter name="script"><![CDATA[
// dump_photos_to_files
// Dump the work entry
//task.logmsg("dump_photos_to_files: DumpWorkEntry1: after lookup, before write_image");
//task.dumpEntry(work);
]]></parameter>
                </Script>

                <Connector name="write_image">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
if(baseDir == null) {
	system.abortAssemblyLine("ERROR: baseDir should have been set previously");
}
var imgAttr = work.getAttribute("image");
var uid = work.getString("uid");

if((imgAttr != null) && (uid != null)) {
	var photoAttr = work.newAttribute("imageURL");
	imgBytes = imgAttr.getValue(0);
	try
	{
		var fn = "img" + java.lang.System.currentTimeMillis() + "_" + lcIterUtil.getValue() + ".dat";
		var outFile = new java.io.File(baseDir.getAbsolutePath() + "/" + fn);
		var fos = new java.io.FileOutputStream(outFile);
		fos.write(imgBytes);
		fos.close();
		if (js_trace_level.debug <= trace_javascript_level)
		{
			task.logmsg("+++dump photos to files wrote image: " + imgBytes.length + "bytes");
		}
		photoAttr.setValue(outFile.toURL().toString());
	}
	catch(e)
	{
		task.logmsg("" + e);
		system.skipEntry();
	}
	
}
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

                <Script name="DumpWorkEntry2">
                    <parameter name="script"><![CDATA[
// dump_photos_to_files
// Dump the work entry
//task.logmsg("dump_photos_to_files: DumpWorkEntry2: after write_image, before write_out");
//task.dumpEntry(work);
]]></parameter>
                </Script>

                <Connector name="write_out">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_photos}</parameter>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:dump_photos_file}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">@SUBSTITUTE{javascript ret.value = lcConf.file_encoding;}</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_photos}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>photo</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>work.imageURL</Script>
                            <Simple>photo</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>uid</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>work.uid</Script>
                            <Simple>PROF_UID</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>photo</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="addonly_fail">
                            <Name>addonly_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
lastSuccessfulUid = work.getString("uid");
incrementCounter(successCounter);
lcIterUtil.incr();

if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("dump photos to files: photo added for:  ");
	// Default Success
	task.dumpEntry(conn);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="populate_organization">
            <ModTime>1398114850704</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // populate_organization</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "populate_organization";
check_40_Properties_in_profiles();

load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

//Set Return code
var retCode = 0;

]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="CodesConnector" state="Simulated"/>
                    <Component name="read_orginfo_csv" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="read_orginfo_csv">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:organization_table_csv_file}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                        <parameter name="characterSet">@SUBSTITUTE{javascript ret.value = lcConf.file_encoding;}</parameter>
                        <parameter name="csvColumnSeparator">@SUBSTITUTE{property.profiles:organization_table_csv_separator}</parameter>
                        <parameter name="csvColumns"><![CDATA[code
title]]></parameter>
                        <parameter name="csvEnableQuoting">true</parameter>
                        <parameter name="csvLogLongLines">0</parameter>
                        <parameter name="csvWriteHeader">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>code</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>code</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>title</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>title</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>code</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>title</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>

                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
//if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("++++++ populate_organization: iterator initialize_fail");
}

retCode = 1;
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

system.abortAssemblyLine("Aborting in populate_organization: initialize_fail." + error.getString("message"));

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
// WARNING: this hook is called even when abortAssemblyLine above happens.
// thus, retCode must be set correctly upon arrival - 0 if success, 1 if failure.
//if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("Assembly: " + assemblyName + ", hook: after_close, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("Populate organization iterator conn:"  );
	task.dumpEntry(conn);
}
var temp = org.apache.commons.lang.StringUtils.trim(conn.getString("code"));
if (org.apache.commons.lang.StringUtils.isEmpty(temp))
	system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[
]]></Script>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_selectEntries">
                            <Name>before_selectEntries</Name>
                            <Script><![CDATA[
	// before selection
	check_for_BOM_at_BOF_and_skip_it( "organization_table_csv_file");

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script>retCode=1;</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="CodesConnector">
                    <InheritFrom>system:/Connectors/CodesConnector</InheritFrom>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <parameter name="tableName">Organization</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>orgCode</Name>
                            <Type>advanced</Type>
                            <Script>work.code</Script>
                            <Simple>orgCode</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>orgTitle</Name>
                            <Type>advanced</Type>
                            <Script>work.title</Script>
                            <Simple>orgTitle</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>orgCode</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>orgTitle</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>1291bc747b5</Key>
                            <Attribute>orgCode</Attribute>
                            <Operator>equals</Operator>
                            <Value>$code</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>

                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
//if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("++++++ CodesConnector initialize_fail: populate_organization");
}

retCode = 1;
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

system.abortAssemblyLine("Aborting in populate_organization: initialize_fail." + error.getString("message"));

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="modify_apply">
                            <Name>modify_apply</Name>
                            <Script>conn.addAttributeValue("orgCode", work.getString("code"));</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="modify_nochange">
                            <Name>modify_nochange</Name>
                            <Script><![CDATA[
if (js_trace_level.info <= trace_javascript_level) { 
	task.logmsg("+++++++ INFO: no changes, skip entry. codeId is:" + work.getString("code"));
	task.dumpEntry(work);
}
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_fail">
                            <Name>update_fail</Name>
                            <Script><![CDATA[
task.logmsg("ERROR: " + error.getString("message"));
retCode = 1;
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="populate_workloc">
            <ModTime>1398114850829</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // populate_workloc</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "populate_workloc";
check_40_Properties_in_profiles();

//  Code below is used to test com.ibm.lconn.profiles.api.tdi.util.ProfilesTDIState
//	var userModeString = com.ibm.lconn.profiles.api.tdi.util.ProfilesTDIState.getString("userModeString");
//	task.logmsg("userModeString :  X" + userModeString + "X" );
//
//	if (userModeString.length == 0)
//	{
//		var userModeString1 = com.ibm.lconn.profiles.api.tdi.util.ProfilesTDIState.setString("userModeString", "external");
//		task.logmsg("userModeString1 :  " + userModeString1 );
//	}
//
//	var userModeString2 = com.ibm.lconn.profiles.api.tdi.util.ProfilesTDIState.getString("userModeString");
//	task.logmsg("userModeString2 :  " + userModeString2 );
//
//	var userModeString = com.ibm.lconn.profiles.api.tdi.util.ProfilesTDIState.getString("userModeString");
//	task.logmsg("userModeString :  X" + userModeString + "X" );
//
//	if (userModeString == "external")
//	{
//		var userModeString3 = com.ibm.lconn.profiles.api.tdi.util.ProfilesTDIState.getString("userModeString");
//		task.logmsg("userModeString3 :  " + userModeString3 );
//	}

load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

//Set Return code
var retCode = 0;

]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="CodesConnector" state="Simulated"/>
                    <Component name="read_workloc_csv" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="read_workloc_csv">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:workloc_table_csv_file}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.CSV</InheritFrom>
                        <parameter name="attributeName">line</parameter>
                        <parameter name="characterSet">@SUBSTITUTE{javascript ret.value = lcConf.file_encoding;}</parameter>
                        <parameter name="csvColumnSeparator">@SUBSTITUTE{property.profiles:workloc_table_csv_separator}</parameter>
                        <parameter name="csvColumns"><![CDATA[code
address1
address2
city
state
postalcode]]></parameter>
                        <parameter name="csvEnableQuoting">true</parameter>
                        <parameter name="csvLogLongLines">0</parameter>
                        <parameter name="csvWriteHeader">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>address1</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>address1</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>address2</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>address2</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>city</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>city</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>code</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>code</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>postalcode</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>postalcode</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>state</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>state</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>address1</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>address2</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>city</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>code</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>line</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>linenumber</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>postalcode</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>state</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">

                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
//if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("++++++ iterator initialize_fail: populate_workloc:");
}

retCode = 1;
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

system.abortAssemblyLine("Aborting in populate_workloc: initialize_fail." + error.getString("message"));

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                            <Name>after_close</Name>
                            <Script><![CDATA[
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("Populate work location iterator conn:"  );
	task.dumpEntry(conn);
}
var temp = org.apache.commons.lang.StringUtils.trim(conn.getString("code"));
if (org.apache.commons.lang.StringUtils.isEmpty(temp))
	system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[
]]></Script>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_selectEntries">
                            <Name>before_selectEntries</Name>
                            <Script><![CDATA[
	// before selection
	check_for_BOM_at_BOF_and_skip_it( "workloc_table_csv_file");

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script>retCode=1;</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="CodesConnector">
                    <InheritFrom>system:/Connectors/CodesConnector</InheritFrom>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_fill_codes}</parameter>
                        <parameter name="tableName">WorkLocation</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>address1</Name>
                            <Type>simple</Type>
                            <Simple>address1</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>address2</Name>
                            <Type>simple</Type>
                            <Simple>address2</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>city</Name>
                            <Type>simple</Type>
                            <Simple>city</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>postalCode</Name>
                            <Type>advanced</Type>
                            <Script>work.postalcode</Script>
                            <Simple>postalCode</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>state</Name>
                            <Type>simple</Type>
                            <Simple>state</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>workLocationCode</Name>
                            <Type>advanced</Type>
                            <Script>work.code</Script>
                            <Simple>workLocationCode</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>address1</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>address2</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>city</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>postalCode</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>state</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLocationCode</Name>
                            <NativeSyntax>java.lang.String</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>1291bc778d7</Key>
                            <Attribute>workLocationCode</Attribute>
                            <Operator>equals</Operator>
                            <Value>$code</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>

                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
//if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("++++++ populate_workloc: CodesConnector initialize_fail");
}

retCode = 1;
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

system.abortAssemblyLine("Aborting in populate_workloc: initialize_fail." + error.getString("message"));

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                        <Hook name="modify_apply">
                            <Name>modify_apply</Name>
                            <Script>conn.addAttributeValue("workLocationCode", work.getString("code"));</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="modify_nochange">
                            <Name>modify_nochange</Name>
                            <Script><![CDATA[
if (js_trace_level.info <= trace_javascript_level) { 
	task.logmsg("+++++++on no changes, skip entry. codeId is:" + work.getString("code"));
	task.dumpEntry(work);
}
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="update_fail">
                            <Name>update_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="_internal_lookup_secOrMgr_uid">
            <ModTime>1398114850953</ModTime>
            <Settings/>
            <Hooks>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
load_lcConf(true);

//--------------------------------------------------------------
// Get the mappings to create db fields from ldap fields. The
// call below will create db_from_ldap_array associative array
//--------------------------------------------------------------
load_mappings_dbrepos_from_source();
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="setup_variables" state="Enabled"/>
                    <Component name="setup_if_lookup" state="Enabled"/>
                    <Component name="if_should_lookup" state="Enabled"/>
                    <Component name="set_do_not_do_twice" state="Enabled"/>
                    <Component name="setup_lookup_secOrMgr" state="Enabled"/>
                    <Component name="lookup_secOrMgr" state="Simulated"/>
                    <Component name="copy_lookup_uid" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="setup_variables">
                    <parameter name="script"><![CDATA[
var secOrMgr = work.getString("$lookup_operation").substring("lookup_".length());
var alreadyLookupAttr = "$_already_lookup_" + secOrMgr;

//
// Globals for script
//
var mappingSetting = db_from_ldap_array[secOrMgr + "Uid"];
var mappingSettingVal = "$" + secOrMgr + "_uid";

var lookupAttr = lcConf["source_repository_lookup_" + secOrMgr + "_field"];]]></parameter>
                </Script>
                <ALMap name="setup_if_lookup">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$_should_lookup</Name>
                            <Type>advanced</Type>
                            <Script><![CDATA[var prevLookup = work.getAttribute(alreadyLookupAttr);
var lookupVal = work.getAttribute(lookupAttr);

if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("%%%: mappingSetting: " + mappingSetting);
	task.logmsg("%%%: lookupVal:      " + lookupVal);
	task.logmsg("%%%: lookupAttr:     " + lookupAttr);
	task.logmsg("%%%: prevLookup:     " + prevLookup);
}

if (prevLookup == null && mappingSettingVal == mappingSetting &&
    (lookupVal != null && new java.lang.String.valueOf(lookupVal).length() > 0)) {
	ret.value = true;
} else {
	ret.value = false;
}
]]></Script>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>
                <Branch name="if_should_lookup">
                    <Script name="set_do_not_do_twice">
                        <parameter name="script">work.setAttribute(alreadyLookupAttr, true);</parameter>
                    </Script>
                    <ALMap name="setup_lookup_secOrMgr">
                        <InheritFrom>[no inheritance]</InheritFrom>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <AttributeMapItem>
                                <Name>$_lookup_dn</Name>
                                <Type>advanced</Type>
                                <Script>work[lookupAttr];</Script>
                            </AttributeMapItem>
                        </AttributeMap>
                        <State>Enabled</State>
                    </ALMap>
                    <Function name="lookup_secOrMgr">
                        <InheritFrom>/Functions/IntLookupSecOrMgr_lookup</InheritFrom>
                        <ConnectorState>Enabled</ConnectorState>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                        </Hooks>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                        </Configuration>
                        <SandboxConfig/>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <InitializeOption>1</InitializeOption>
                    </Function>
                    <Script name="copy_lookup_uid">
                        <parameter name="script"><![CDATA[//
// Copies '$lookup_uid" into the $secretary_uid or $manager_uid
//
work.setAttribute(mappingSettingVal, work.getString("$lookup_uid"));
]]></parameter>
                    </Script>
                    <Conditions>
                        <BranchCondition>
                            <LeftHand>$_should_lookup</LeftHand>
                            <Operator>equals</Operator>
                            <RightHand>true</RightHand>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                    </Conditions>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>0</Type>
                </Branch>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="collect_dns">
            <ModTime>1398114851063</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_collect}</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Script><![CDATA[
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

lcIterUtil.report();
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // collect_dns</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "collect_dns";
check_40_Properties_in_profiles();

//-----------------------------------------------
// Inialize conf & reset .dns file
//-----------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

// reset the iteration counter
lcIterUtil.reset();

// localize the delete file name - usually collect _dns
var collect_dns_file_name = lcConf.source_ldap_collect_dns_file;

// log deletion of current collect_dns file
//task.logmsg("INFO", "Deleting collect dns file: " + collect_dns_file_name);

// delete the old collect.dns file
system.deleteFile(collect_dns_file_name);

// TODO - probably want sub routnines for this
retCode = 0;
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="SpecifyIterateOperation" state="Enabled"/>
                    <Component name="DumpWorkEntry0" state="Enabled"/>
                    <Component name="SourceRepositoryIterateFC" state="Simulated"/>
                    <Component name="DumpWorkEntry1" state="Enabled"/>
                    <Component name="Call_collectFlow" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <ALMap name="SpecifyIterateOperation">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>accumulatorConnector</Name>
                            <Type>advanced</Type>
                            <Script>ret.value = Call_collectFlow.connector;</Script>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>

                <Script name="DumpWorkEntry0">
                    <parameter name="script"><![CDATA[
// collect_dns
// Dump the work entry
//task.logmsg("collect_dns: DumpWorkEntry0: after SpecifyIterateOperation");
//task.dumpEntry(work);
]]></parameter>
                </Script>

                <Function name="SourceRepositoryIterateFC">
                    <InheritFrom>/Functions/SourceRepositoryIterateFC</InheritFrom>
                    <ConnectorState>Enabled</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>

                <Script name="DumpWorkEntry1">
                    <parameter name="script"><![CDATA[
// collect_dns
// Dump the work entry
//task.logmsg("collect_dns: DumpWorkEntry1: after SourceRepositoryIterateFC, before write");
//task.dumpEntry(work);
]]></parameter>
                </Script>

                <Connector name="Call_collectFlow">
                    <InheritFrom>system:/Connectors/ibmdi.AssemblyLineConnector</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="assemblyLine">collect_dns_flow</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_collect}</parameter>
                        <parameter name="shareLog">true</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>line</Name>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>

        <AssemblyLine name="collect_dns_flow">
            <ModTime>1398114851172</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_collect}</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script>load_lcConf(true);</Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="FilterInvalidSourceUsers" state="Enabled"/>
                    <Component name="write_dn" state="Simulated"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="FilterInvalidSourceUsers">
                    <InheritFrom>/Scripts/FilterInvalidSourceUsers</InheritFrom>
                </Script>
                <Connector name="write_dn">
                    <InheritFrom>/Connectors/CollectDns_write_dn</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
// keep track of the number of values seen
lcIterUtil.incr();
]]></Script>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations>
                <Operation name="putEntry">
                    <Schema name="Input"/>
                    <Schema name="Output">
                        <SchemaItem>
                            <Name>*</Name>
                        </SchemaItem>
                    </Schema>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                </Operation>
                <Operation name="Iterator">
                    <Schema name="Input"/>
                    <Schema name="Output"/>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                </Operation>
            </Operations>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="process_ad_changes">
            <ModTime>1398114851515</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // process_ad_changes</Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
// uses changelog_state_key

assemblyName = "process_ad_changes";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

var aProp = system.getTDIProperty("profiles", "ad_changelog_debug");
if((aProp != null) && (aProp == "true")) {
	ad_changelog_debug = true;
}
else {
	ad_changelog_debug = false;
}
log2("INFO", "info_debug_prop_setting", "ad_changelog_debug", "" + ad_changelog_debug);

//--------------------------------------------------------------
// Get the regex expression which is used to filter DNs from
// property file, if any
//--------------------------------------------------------------
ad_changelog_ldap_required_dn_regex_pattern = null;
var regExpClAdProp = system.getTDIProperty("profiles", "ad_changelog_ldap_required_dn_regex");
if((regExpClAdProp != null) && (regExpClAdProp != "")) {
	ad_changelog_ldap_required_dn_regex_pattern = new RegExp(regExpClAdProp);
	log1("INFO", "info_dn_regex", ad_changelog_ldap_required_dn_regex_pattern.toString());
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="get_guid" state="Enabled"/>
                    <Component name="lookup_dn_and_uid" state="Enabled"/>
                    <Component name="changetype" state="Enabled"/>
                    <Component name="update" state="Enabled"/>
                    <Component name="if_dn_found_caseUpdate" state="Enabled"/>
                    <Component name="read_values_caseUpdate" state="Enabled"/>
                    <Component name="callSyncDB_mod_caseUpdate" state="Simulated"/>
                    <Component name="else_dn_not_found_caseUpdate" state="Enabled"/>
                    <Component name="set_dn_caseUpdate" state="Enabled"/>
                    <Component name="callSyncDB_add_caseUpdate" state="Simulated"/>
                    <Component name="Case" state="Enabled"/>
                    <Component name="if_dn_found_caseModify" state="Enabled"/>
                    <Component name="read_values_caseModify" state="Enabled"/>
                    <Component name="callSyncDB_mod_caseModify" state="Simulated"/>
                    <Component name="else_dn_not_found_caseModify" state="Enabled"/>
                    <Component name="set_dn_caseModify" state="Enabled"/>
                    <Component name="callSyncDB_add_caseModify" state="Simulated"/>
                    <Component name="delete" state="Enabled"/>
                    <Component name="call_SyncDB_del" state="Simulated"/>
                    <Component name="add" state="Enabled"/>
                    <Component name="setOperationAdd" state="Enabled"/>
                    <Component name="read_add_value" state="Enabled"/>
                    <Component name="callSyncDB_add" state="Simulated"/>
                    <Component name="get_ad_updates" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig>
                <Logger name="DailyRollingFile">
                    <parameter name="DailyRollingFile.Append">true</parameter>
                    <parameter name="DailyRollingFile.DatePattern">'.'yyyy-MM-dd</parameter>
                    <parameter name="DailyRollingFile.Encoding">UTF-8</parameter>
                    <parameter name="DailyRollingFile.File">@SUBSTITUTE{property.profiles:ad_changelog_logfile}</parameter>
                    <parameter name="Pattern.ConversionPattern">%d{ISO8601} %-5p [%c] - %m%n</parameter>
                    <parameter name="com.ibm.di.log.appender">DailyRollingFile</parameter>
                    <parameter name="com.ibm.di.log.layout">Pattern</parameter>
                    <parameter name="com.ibm.di.log.level">INFO</parameter>
                    <parameter name="enabled">true</parameter>
                </Logger>
            </LogConfig>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="get_ad_updates">
                    <InheritFrom>system:/Connectors/ibmdi.ADChangelogv2</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="iteratorStateKey">changelog_state_key</parameter>
                        <parameter name="ldapAuthenticationMethod">Simple</parameter>
                        <parameter name="ldapBinaryAttributes">objectGUID objectSid</parameter>
                        <parameter name="ldapPassword">@SUBSTITUTE{property.profiles:ad_changelog_ldap_user_password}</parameter>
                        <parameter name="ldapSearchBase">@SUBSTITUTE{property.profiles:ad_changelog_ldap_search_base}</parameter>
                        <parameter name="ldapUrl">@SUBSTITUTE{property.profiles:ad_changelog_ldap_url}</parameter>
                        <parameter name="ldapUseSSL">@SUBSTITUTE{property.profiles:ad_changelog_ldap_use_ssl}</parameter>
                        <parameter name="ldapUsername">@SUBSTITUTE{property.profiles:ad_changelog_ldap_user_login}</parameter>
                        <parameter name="pageSize">@SUBSTITUTE{property.profiles:ad_changelog_ldap_page_size}</parameter>
                        <parameter name="sleepInterval">@SUBSTITUTE{property.profiles:ad_changelog_sleep_interval}</parameter>
                        <parameter name="startAt">@SUBSTITUTE{property.profiles:ad_changelog_start_at}</parameter>
                        <parameter name="stateKeyPersistence">End of cycle</parameter>
                        <parameter name="timeout">@SUBSTITUTE{property.profiles:ad_changelog_timeout}</parameter>
                        <parameter name="useNotifications">@SUBSTITUTE{property.profiles:ad_changelog_use_notifications}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="get_ok">
                            <Name>get_ok</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="get_guid">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
var guidStr = null;
var guidAttr = work.getAttribute("objectGUID");
if(guidAttr != null) {
	var guid = guidAttr.getValue(0);
	if(guid != null) {
		guidStr = system.binaryGUIDtoString(guid);
		// remove braces from representation
		if(guidStr.startsWith("{") && guidStr.endsWith("}")) {
			guidStr = guidStr.substring(1, guidStr.length() - 1);
		}
	}
}
if(guidStr != null) {
	var newAttr = work.newAttribute("$guid");
	newAttr.setValue(guidStr);
}
else {
	var msgText = log0("ERROR", "err_no_dn");
	system.abortAssemblyLine(msgText);
}
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="lookup_dn_and_uid">
                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>simple</Type>
                            <Simple>distinguishedName</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>uid</Name>
                            <Type>simple</Type>
                            <Simple>uid</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>119a0652be6</Key>
                            <Attribute>guid</Attribute>
                            <Operator>equals</Operator>
                            <Value>$$guid</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("$dn") != null) {
	work.removeAttribute("$dn");
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_lookup">
                            <Name>before_lookup</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script>system.abortAssemblyLine(error.getString("message"));</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script>system.ignoreEntry();</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="lookup_ok">
                            <Name>lookup_ok</Name>
                            <Script><![CDATA[

var dn = work.getString("$dn");
if(dn != null) {
	if(dn.length() > 0) {
		/*-----------------------------------------------------------
         * We may be told to ignore any entries that do not contain
         * a particular regular expression pattern. If this was 
		 * configured test the pattern and skip if false
         *-----------------------------------------------------------*/ 		
		if(ad_changelog_ldap_required_dn_regex_pattern != null) {
			if(!ad_changelog_ldap_required_dn_regex_pattern.test(dn)) {
			if (js_trace_level.debug <= trace_javascript_level)
				task.logmsg("+++skipping $dn=" + dn + 
								" because does not match required pattern:" + 
								tds_changelog_ldap_required_dn_regex_pattern);

				system.skipEntry();				
			}
		}
	}
	else{
		system.skipEntry();
	}
}
if (js_trace_level.debug <= trace_javascript_level)
	task.dumpEntry(work);
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Branch name="changetype">
                    <Branch name="update">
                        <Branch name="if_dn_found_caseUpdate">
                            <Connector name="read_values_caseUpdate">
                                <UserComment>lookup if modified, not replaced</UserComment>
                                <InheritFrom>/Connectors/FetchLDAPDataWithFilter</InheritFrom>
                                <ConnectorMode>Lookup</ConnectorMode>
                                <ConnectorState>Enabled</ConnectorState>
                                <Configuration>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <parameter name="automapADPassword">false</parameter>
                                    <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                    <parameter name="ldapAddAttr">false</parameter>
                                    <parameter name="ldapAuthenticationMethod">@SUBSTITUTE{property.profiles:source_ldap_authentication_method}</parameter>
                                    <parameter name="ldapBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid]]></parameter>
                                    <parameter name="ldapPageSize">0</parameter>
                                    <parameter name="ldapPassword">@SUBSTITUTE{property.profiles:source_ldap_user_password}</parameter>
                                    <parameter name="ldapReferrals">follow</parameter>
                                    <parameter name="ldapReturnAttributes"><![CDATA[ibm-entryUuid
entryUUID
objectGUID
nsuniqueid
dominounid
GUID
*]]></parameter>
                                    <parameter name="ldapSearchBase">@SUBSTITUTE{property.profiles:source_ldap_search_base}</parameter>
                                    <parameter name="ldapSearchFilter">@SUBSTITUTE{property.profiles:source_ldap_search_filter}</parameter>
                                    <parameter name="ldapSearchScope">subtree</parameter>
                                    <parameter name="ldapSizeLimit">0</parameter>
                                    <parameter name="ldapTimeLimit">0</parameter>
                                    <parameter name="ldapUrl">@SUBSTITUTE{property.profiles:source_ldap_url}</parameter>
                                    <parameter name="ldapUseSSL">@SUBSTITUTE{property.profiles:source_ldap_use_ssl}</parameter>
                                    <parameter name="ldapUsername">@SUBSTITUTE{property.profiles:source_ldap_user_login}</parameter>
                                    <parameter name="ldapVLVPageSize">0</parameter>
                                    <parameter name="simulateRename">false</parameter>
                                </Configuration>
                                <ComputeChanges>true</ComputeChanges>
                                <DeltaBehavior>0</DeltaBehavior>
                                <DeltaStrict>true</DeltaStrict>
                                <Parser>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <Schema name="Input">
                                        <InheritFrom>[parent]</InheritFrom>
                                    </Schema>
                                    <Schema name="Output">
                                        <InheritFrom>[parent]</InheritFrom>
                                    </Schema>
                                </Parser>
                                <AttributeMap name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </AttributeMap>
                                <AttributeMap name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </AttributeMap>
                                <DeltaSettings>
                                    <WhenToCommit>After every database operation</WhenToCommit>
                                    <Driver>CloudScape</Driver>
                                </DeltaSettings>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <LinkCriteria>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <LinkCriteriaItem>
                                        <Key>1105a8d4274</Key>
                                        <Attribute>dn</Attribute>
                                        <Operator>equals</Operator>
                                        <Value>$dn</Value>
                                    </LinkCriteriaItem>
                                </LinkCriteria>
                                <Hooks>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <Hook name="after_lookup">
                                        <Name>after_lookup</Name>
                                        <Script><![CDATA[
//----------------------------------------
// For any attributes we marked as needing
// full values for, we attempt to get from
// conn and if found, replace the 
// attribute in work.  This will replace
// modify attributes with replace 
// attributes
//----------------------------------------
for(i=0; i < attrsToLookup.length; ++i) {
	var attrName = attrsToLookup[i];
	var anAttr = conn.getAttribute(attrName);
	if(anAttr != null) {
		work.setAttribute(anAttr);
	}
}
]]></Script>
                                        <Enabled>true</Enabled>
                                        <DebugBreak>false</DebugBreak>
                                    </Hook>
                                    <Hook name="before_execute">
                                        <Name>before_execute</Name>
                                        <Script><![CDATA[
//---------------------------------------------
// Look for any attributes that are marked
// modify and if found, we add to list of
// values to look up completely so we can
// use replace attributes
//---------------------------------------------
var needLookup = false;
attrsToLookup = new Array();
var attrCount = 0;
var workNames = work.getAttributeNames();
for(i=0; i < workNames.length; ++i) {
	var getAttr = work.getAttribute(workNames[i]);
	if((getAttr != null) && (getAttr.getOperation() == "modify")) {
		needLookup = true;
		attrsToLookup[attrCount] = workNames[i];
		++attrCount;
	}
}
if(!needLookup) {
	system.ignoreEntry();
}
]]></Script>
                                        <Enabled>true</Enabled>
                                        <DebugBreak>false</DebugBreak>
                                    </Hook>
                                    <Hook name="lookup_nomatch">
                                        <Name>lookup_nomatch</Name>
                                        <Script><![CDATA[
log1("WARN", "warn_no_existing_record_to_modify", work.getString("$dn"));
system.skipEntry();
]]></Script>
                                        <Enabled>true</Enabled>
                                        <DebugBreak>false</DebugBreak>
                                    </Hook>
                                </Hooks>
                                <CheckpointConfig/>
                                <SandboxConfig/>
                                <Reconnect>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <ReconnectRules/>
                                </Reconnect>
                                <Operations/>
                                <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                                <PoolDefinition>
                                    <InheritFrom>[parent]</InheritFrom>
                                </PoolDefinition>
                                <PoolInstance>
                                    <Enabled>false</Enabled>
                                    <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                                </PoolInstance>
                                <InitializeOption>0</InitializeOption>
                            </Connector>
                            <Function name="callSyncDB_mod_caseUpdate">
                                <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                                <ConnectorState>Enabled</ConnectorState>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Hooks>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <Hook name="before_functioncall">
                                        <Name>before_functioncall</Name>
                                        <Script/>
                                        <Enabled>false</Enabled>
                                        <DebugBreak>false</DebugBreak>
                                    </Hook>
                                </Hooks>
                                <Configuration>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <parameter name="$initialize.logFilename">@SUBSTITUTE{property.profiles:ad_changelog_logfile}</parameter>
                                    <parameter name="$initialize.syncExisting"/>
                                    <parameter name="assemblyLine">SyncDBfromSource</parameter>
                                    <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                    <parameter name="mode">2</parameter>
                                    <parameter name="operation">modify</parameter>
                                </Configuration>
                                <SandboxConfig/>
                                <AttributeMap name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </AttributeMap>
                                <AttributeMap name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                    <AttributeMapItem>
                                        <Name>*</Name>
                                        <Type>simple</Type>
                                        <Enabled>true</Enabled>
                                        <Add>true</Add>
                                        <Modify>true</Modify>
                                        <Simple>*</Simple>
                                        <SubstitutionTemplate>null</SubstitutionTemplate>
                                    </AttributeMapItem>
                                </AttributeMap>
                            </Function>
                            <Conditions>
                                <BranchCondition>
                                    <LeftHand>$dn</LeftHand>
                                    <Operator>exists</Operator>
                                    <Negate>false</Negate>
                                    <CaseSensitive>false</CaseSensitive>
                                    <MatchAny>false</MatchAny>
                                </BranchCondition>
                            </Conditions>
                            <MatchAny>false</MatchAny>
                            <Enabled>true</Enabled>
                            <Type>0</Type>
                        </Branch>
                        <Branch name="else_dn_not_found_caseUpdate">
                            <ALMap name="set_dn_caseUpdate">
                                <AttributeMap name="Input">
                                    <AttributeMapItem>
                                        <Name>$dn</Name>
                                        <Type>simple</Type>
                                        <Enabled>true</Enabled>
                                        <Add>true</Add>
                                        <Modify>true</Modify>
                                        <Script>ret.value = work.getAttribute("distinguishedName");</Script>
                                        <Simple>distinguishedName</Simple>
                                        <SubstitutionTemplate>null</SubstitutionTemplate>
                                    </AttributeMapItem>
                                </AttributeMap>
                                <State>Enabled</State>
                            </ALMap>
                            <Function name="callSyncDB_add_caseUpdate">
                                <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                                <ConnectorState>Enabled</ConnectorState>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                    <SchemaItem>
                                        <Name>*</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>syncExisting</Name>
                                    </SchemaItem>
                                </Schema>
                                <Hooks>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <Hook name="before_functioncall">
                                        <Name>before_functioncall</Name>
                                        <Script/>
                                        <Enabled>false</Enabled>
                                        <DebugBreak>false</DebugBreak>
                                    </Hook>
                                </Hooks>
                                <Configuration>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <parameter name="$initialize.logFilename">@SUBSTITUTE{property.profiles:ad_changelog_logfile}</parameter>
                                    <parameter name="$initialize.syncExisting"/>
                                    <parameter name="assemblyLine">SyncDBfromSource</parameter>
                                    <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                    <parameter name="mode">2</parameter>
                                    <parameter name="operation">add</parameter>
                                </Configuration>
                                <SandboxConfig/>
                                <AttributeMap name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </AttributeMap>
                                <AttributeMap name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                    <AttributeMapItem>
                                        <Name>*</Name>
                                        <Type>simple</Type>
                                        <Enabled>true</Enabled>
                                        <Add>true</Add>
                                        <Modify>true</Modify>
                                        <Simple>*</Simple>
                                        <SubstitutionTemplate>null</SubstitutionTemplate>
                                    </AttributeMapItem>
                                </AttributeMap>
                            </Function>
                            <Conditions/>
                            <MatchAny>false</MatchAny>
                            <Enabled>true</Enabled>
                            <Type>2</Type>
                        </Branch>
                        <Conditions>
                            <BranchCondition>
                                <RightHand>update</RightHand>
                                <Negate>false</Negate>
                                <CaseSensitive>true</CaseSensitive>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>4</Type>
                    </Branch>
                    <Branch name="Case">
                        <Branch name="if_dn_found_caseModify">
                            <Connector name="read_values_caseModify">
                                <UserComment>lookup if modified, not replaced</UserComment>
                                <InheritFrom>/Connectors/FetchLDAPDataWithFilter</InheritFrom>
                                <ConnectorMode>Lookup</ConnectorMode>
                                <ConnectorState>Enabled</ConnectorState>
                                <Configuration>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <parameter name="automapADPassword">false</parameter>
                                    <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                    <parameter name="ldapAddAttr">false</parameter>
                                    <parameter name="ldapAuthenticationMethod">@SUBSTITUTE{property.profiles:source_ldap_authentication_method}</parameter>
                                    <parameter name="ldapBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid]]></parameter>
                                    <parameter name="ldapPageSize">0</parameter>
                                    <parameter name="ldapPassword">@SUBSTITUTE{property.profiles:source_ldap_user_password}</parameter>
                                    <parameter name="ldapReferrals">follow</parameter>
                                    <parameter name="ldapReturnAttributes"><![CDATA[ibm-entryUuid
entryUUID
objectGUID
nsuniqueid
dominounid
GUID
*]]></parameter>
                                    <parameter name="ldapSearchBase">@SUBSTITUTE{property.profiles:source_ldap_search_base}</parameter>
                                    <parameter name="ldapSearchFilter">@SUBSTITUTE{property.profiles:source_ldap_search_filter}</parameter>
                                    <parameter name="ldapSearchScope">subtree</parameter>
                                    <parameter name="ldapSizeLimit">0</parameter>
                                    <parameter name="ldapTimeLimit">0</parameter>
                                    <parameter name="ldapUrl">@SUBSTITUTE{property.profiles:source_ldap_url}</parameter>
                                    <parameter name="ldapUseSSL">@SUBSTITUTE{property.profiles:source_ldap_use_ssl}</parameter>
                                    <parameter name="ldapUsername">@SUBSTITUTE{property.profiles:source_ldap_user_login}</parameter>
                                    <parameter name="ldapVLVPageSize">0</parameter>
                                    <parameter name="simulateRename">false</parameter>
                                </Configuration>
                                <ComputeChanges>true</ComputeChanges>
                                <DeltaBehavior>0</DeltaBehavior>
                                <DeltaStrict>true</DeltaStrict>
                                <Parser>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <Schema name="Input">
                                        <InheritFrom>[parent]</InheritFrom>
                                    </Schema>
                                    <Schema name="Output">
                                        <InheritFrom>[parent]</InheritFrom>
                                    </Schema>
                                </Parser>
                                <AttributeMap name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </AttributeMap>
                                <AttributeMap name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </AttributeMap>
                                <DeltaSettings>
                                    <WhenToCommit>After every database operation</WhenToCommit>
                                    <Driver>CloudScape</Driver>
                                </DeltaSettings>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <LinkCriteria>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <LinkCriteriaItem>
                                        <Key>1105a8d4274</Key>
                                        <Attribute>dn</Attribute>
                                        <Operator>equals</Operator>
                                        <Value>$dn</Value>
                                    </LinkCriteriaItem>
                                </LinkCriteria>
                                <Hooks>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <Hook name="after_lookup">
                                        <Name>after_lookup</Name>
                                        <Script><![CDATA[
//----------------------------------------
// For any attributes we marked as needing
// full values for, we attempt to get from
// conn and if found, replace the 
// attribute in work.  This will replace
// modify attributes with replace 
// attributes
//----------------------------------------
for(i=0; i < attrsToLookup.length; ++i) {
	var attrName = attrsToLookup[i];
	var anAttr = conn.getAttribute(attrName);
	if(anAttr != null) {
		work.setAttribute(anAttr);
	}
}
]]></Script>
                                        <Enabled>true</Enabled>
                                        <DebugBreak>false</DebugBreak>
                                    </Hook>
                                    <Hook name="before_execute">
                                        <Name>before_execute</Name>
                                        <Script><![CDATA[
//---------------------------------------------
// Look for any attributes that are marked
// modify and if found, we add to list of
// values to look up completely so we can
// use replace attributes
//---------------------------------------------
var needLookup = false;
attrsToLookup = new Array();
var attrCount = 0;
var workNames = work.getAttributeNames();
for(i=0; i < workNames.length; ++i) {
	var getAttr = work.getAttribute(workNames[i]);
	if((getAttr != null) && (getAttr.getOperation() == "modify")) {
		needLookup = true;
		attrsToLookup[attrCount] = workNames[i];
		++attrCount;
	}
}
if(!needLookup) {
	system.ignoreEntry();
}
]]></Script>
                                        <Enabled>true</Enabled>
                                        <DebugBreak>false</DebugBreak>
                                    </Hook>
                                    <Hook name="lookup_nomatch">
                                        <Name>lookup_nomatch</Name>
                                        <Script><![CDATA[
log1("WARN", "warn_no_existing_record_to_modify", work.getString("$dn"));
system.skipEntry();
]]></Script>
                                        <Enabled>true</Enabled>
                                        <DebugBreak>false</DebugBreak>
                                    </Hook>
                                </Hooks>
                                <CheckpointConfig/>
                                <SandboxConfig/>
                                <Reconnect>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <ReconnectRules/>
                                </Reconnect>
                                <Operations/>
                                <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                                <PoolDefinition>
                                    <InheritFrom>[parent]</InheritFrom>
                                </PoolDefinition>
                                <PoolInstance>
                                    <Enabled>false</Enabled>
                                    <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                                </PoolInstance>
                                <InitializeOption>0</InitializeOption>
                            </Connector>
                            <Function name="callSyncDB_mod_caseModify">
                                <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                                <ConnectorState>Enabled</ConnectorState>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Hooks>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <Hook name="before_functioncall">
                                        <Name>before_functioncall</Name>
                                        <Script/>
                                        <Enabled>false</Enabled>
                                        <DebugBreak>false</DebugBreak>
                                    </Hook>
                                </Hooks>
                                <Configuration>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <parameter name="$initialize.logFilename">@SUBSTITUTE{property.profiles:ad_changelog_logfile}</parameter>
                                    <parameter name="$initialize.syncExisting"/>
                                    <parameter name="assemblyLine">SyncDBfromSource</parameter>
                                    <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                    <parameter name="mode">2</parameter>
                                    <parameter name="operation">modify</parameter>
                                </Configuration>
                                <SandboxConfig/>
                                <AttributeMap name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </AttributeMap>
                                <AttributeMap name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                    <AttributeMapItem>
                                        <Name>*</Name>
                                        <Type>simple</Type>
                                        <Enabled>true</Enabled>
                                        <Add>true</Add>
                                        <Modify>true</Modify>
                                        <Simple>*</Simple>
                                        <SubstitutionTemplate>null</SubstitutionTemplate>
                                    </AttributeMapItem>
                                </AttributeMap>
                            </Function>
                            <Conditions>
                                <BranchCondition>
                                    <LeftHand>$dn</LeftHand>
                                    <Operator>exists</Operator>
                                    <Negate>false</Negate>
                                    <CaseSensitive>false</CaseSensitive>
                                    <MatchAny>false</MatchAny>
                                </BranchCondition>
                            </Conditions>
                            <MatchAny>false</MatchAny>
                            <Enabled>true</Enabled>
                            <Type>0</Type>
                        </Branch>
                        <Branch name="else_dn_not_found_caseModify">
                            <ALMap name="set_dn_caseModify">
                                <AttributeMap name="Input">
                                    <AttributeMapItem>
                                        <Name>$dn</Name>
                                        <Type>simple</Type>
                                        <Enabled>true</Enabled>
                                        <Add>true</Add>
                                        <Modify>true</Modify>
                                        <Script>ret.value = work.getAttribute("distinguishedName");</Script>
                                        <Simple>distinguishedName</Simple>
                                        <SubstitutionTemplate>null</SubstitutionTemplate>
                                    </AttributeMapItem>
                                </AttributeMap>
                                <State>Enabled</State>
                            </ALMap>
                            <Function name="callSyncDB_add_caseModify">
                                <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                                <ConnectorState>Enabled</ConnectorState>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                    <SchemaItem>
                                        <Name>*</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>syncExisting</Name>
                                    </SchemaItem>
                                </Schema>
                                <Hooks>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <Hook name="before_functioncall">
                                        <Name>before_functioncall</Name>
                                        <Script/>
                                        <Enabled>false</Enabled>
                                        <DebugBreak>false</DebugBreak>
                                    </Hook>
                                </Hooks>
                                <Configuration>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <parameter name="$initialize.logFilename">@SUBSTITUTE{property.profiles:ad_changelog_logfile}</parameter>
                                    <parameter name="$initialize.syncExisting"/>
                                    <parameter name="assemblyLine">SyncDBfromSource</parameter>
                                    <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                    <parameter name="mode">2</parameter>
                                    <parameter name="operation">add</parameter>
                                </Configuration>
                                <SandboxConfig/>
                                <AttributeMap name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </AttributeMap>
                                <AttributeMap name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                    <AttributeMapItem>
                                        <Name>*</Name>
                                        <Type>simple</Type>
                                        <Enabled>true</Enabled>
                                        <Add>true</Add>
                                        <Modify>true</Modify>
                                        <Simple>*</Simple>
                                        <SubstitutionTemplate>null</SubstitutionTemplate>
                                    </AttributeMapItem>
                                </AttributeMap>
                            </Function>
                            <Conditions/>
                            <MatchAny>false</MatchAny>
                            <Enabled>true</Enabled>
                            <Type>2</Type>
                        </Branch>
                        <Conditions>
                            <BranchCondition>
                                <RightHand>modify</RightHand>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>4</Type>
                    </Branch>
                    <Branch name="delete">
                        <Function name="call_SyncDB_del">
                            <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                            <ConnectorState>Enabled</ConnectorState>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>*</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>syncExisting</Name>
                                </SchemaItem>
                            </Schema>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                            </Hooks>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="$initialize.logFilename">@SUBSTITUTE{property.profiles:ad_changelog_logfile}</parameter>
                                <parameter name="assemblyLine">SyncDBfromSource</parameter>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                <parameter name="mode">2</parameter>
                                <parameter name="operation">delete</parameter>
                            </Configuration>
                            <SandboxConfig/>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>*</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>*</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                        </Function>
                        <Conditions>
                            <BranchCondition>
                                <RightHand>delete</RightHand>
                                <Negate>false</Negate>
                                <CaseSensitive>true</CaseSensitive>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>4</Type>
                    </Branch>
                    <Branch name="add">
                        <Script name="setOperationAdd">
                            <parameter name="script">currentOperation = "add";</parameter>
                        </Script>
                        <Connector name="read_add_value">
                            <InheritFrom>/Connectors/read_values_lib</InheritFrom>
                            <ConnectorMode>Lookup</ConnectorMode>
                            <ConnectorState>Enabled</ConnectorState>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="ldapBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid]]></parameter>
                                <parameter name="ldapReturnAttributes"><![CDATA[ibm-entryUuid
entryUUID
objectGUID
nsuniqueid
dominounid
GUID
*]]></parameter>
                            </Configuration>
                            <Parser>
                                <InheritFrom>[parent]</InheritFrom>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                            </Parser>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <DeltaSettings>
                                <WhenToCommit>After every database operation</WhenToCommit>
                                <Driver>CloudScape</Driver>
                            </DeltaSettings>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>$dn</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>businesscategory</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>carlicense</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>cn</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>departmentnumber</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>description</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>displayname</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>employeenumber</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>employeetype</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>givenname</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>initials</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>mail</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>manager</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>mobile</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>o</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>objectclass</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>pager</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>postalcode</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>roomnumber</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>secretary</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>sn</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>telephonenumber</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>title</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>uid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>userpassword</Name>
                                    <Syntax>[byte array]</Syntax>
                                </SchemaItem>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <LinkCriteria>
                                <InheritFrom>[parent]</InheritFrom>
                            </LinkCriteria>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                            </Hooks>
                            <CheckpointConfig/>
                            <SandboxConfig/>
                            <Reconnect>
                                <InheritFrom>[parent]</InheritFrom>
                                <ReconnectRules/>
                            </Reconnect>
                            <Operations/>
                            <PoolDefinition>
                                <InheritFrom>[parent]</InheritFrom>
                            </PoolDefinition>
                            <PoolInstance>
                                <Enabled>false</Enabled>
                                <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                            </PoolInstance>
                            <InitializeOption>0</InitializeOption>
                        </Connector>
                        <Function name="callSyncDB_add">
                            <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                            <ConnectorState>Enabled</ConnectorState>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>*</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>syncExisting</Name>
                                </SchemaItem>
                            </Schema>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="before_functioncall">
                                    <Name>before_functioncall</Name>
                                    <Script/>
                                    <Enabled>false</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="default_fail">
                                    <Name>default_fail</Name>
                                    <Script><![CDATA[
processResult = "fail";
consoleMsg("out", "dn:" + work.getString("$dn") + " | operation:" + currentOperation + " | result:" + processResult);
]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="default_ok">
                                    <Name>default_ok</Name>
                                    <Script><![CDATA[
if(work.getString("outputResult") == "written") {
	processResult = "success";	
}
else if(work.getString("outputResult") == "duplicate") {
	processResult = "success";
}
else {
	processResult = "fail";
}

consoleMsg("out", "dn:" + work.getString("$dn") + " | operation:" + currentOperation + " | result:" + processResult);
consoleMsg("out", "waiting next...");
processResult = "fail";
work.removeAllAttributes();
]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                            </Hooks>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="$initialize.logFilename">@SUBSTITUTE{property.profiles:tds_changelog_logfile}</parameter>
                                <parameter name="$initialize.syncExisting"/>
                                <parameter name="assemblyLine">SyncDBfromSource</parameter>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                <parameter name="mode">2</parameter>
                                <parameter name="operation">add</parameter>
                            </Configuration>
                            <SandboxConfig/>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>outputResult</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>outputResult</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>*</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>*</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                        </Function>
                        <Conditions>
                            <BranchCondition>
                                <RightHand>add</RightHand>
                                <Negate>false</Negate>
                                <CaseSensitive>true</CaseSensitive>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>4</Type>
                    </Branch>
                    <Conditions>
                        <BranchCondition>
                            <RightHand>{work.changeType}</RightHand>
                            <Negate>false</Negate>
                            <CaseSensitive>true</CaseSensitive>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                    </Conditions>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>3</Type>
                </Branch>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="process_draft_updates_ldap">
            <ModTime>1398114851640</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // process_draft_updates</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "process_draft_updates_ldap";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

var aProp = system.getTDIProperty("profiles", "monitor_changes_debug");
if((aProp != null) && (aProp == "true")) {
	monitor_changes_debug = true;
	task.logmsg("+++ process_draft_updates: finished loading lcConf");
}
else {
	monitor_changes_debug = false;
}
log2("INFO", "info_debug_prop_setting", "monitor_changes_debug", "" + monitor_changes_debug);

//--------------------------------------------------------------
// Get the filename of the file containing special mapping
// functions from ldap to DB field, if any
//--------------------------------------------------------------
var aProp = system.getTDIProperty("profiles", "monitor_changes_map_functions_file");
if((aProp != null) && (aProp != "") && (aProp.toLowerCase() != "null")) {
	monitor_changes_map_functions_file = aProp;
}
else {
	monitor_changes_map_functions_file = null;
}
log1("INFO", "info_monitor_changes_map_file", "" + monitor_changes_map_functions_file);

//-------------------------------------------------------
// If we were given a path to a file containing
// mapping functions, load it now
//-------------------------------------------------------
if(monitor_changes_map_functions_file != null) {
	var funcData = read_functions_from_file(monitor_changes_map_functions_file);
	log1("INFO", "info_monitor_changes_map_functions_contents", "" + funcData);
	if(funcData != null) {
		try 
		{
			eval(funcData);
		}
		catch(e)
		{
			log2("ERROR", "err_eval_map_functions_file", monitor_changes_map_functions_file, e.toString());
		}
	}
}
//----------------------------------------------------------------------
// Load in mapping that shows how DB fields map to source fields. This
// will create the ldap_from_db_array associative array
// Mappings come from:
//     map_dbrepos_to_source.properties	 (non-extension)
//     tdi-profiles-config.xml  (extension)
//----------------------------------------------------------------------


if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("about to call load_mappings_dbrepos_from_source to get mappings: "); 
}

load_mappings_dbrepos_to_source();

if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("called load_mappings_dbrepos_from_source to get mappings: "); 
}

]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="monitor_updates" state="Enabled"/>
                    <Component name="DumpWorkEntry0" state="Enabled"/>
                    <Component name="lookup_draft" state="Enabled"/>
                    <Component name="DumpWorkEntry1" state="Enabled"/>
                    <Component name="map_and_send" state="Enabled"/>
                    <Component name="DumpWorkEntry2" state="Enabled"/>
                    <Component name="LDAPUpdateConn" state="Enabled"/>
                    <Component name="del_ext_draft_entry" state="Simulated"/>
                    <Component name="del_draft_entry" state="Simulated"/>
                    <Component name="lookup_ext_draft" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig>
                <Logger name="DailyRollingFile">
                    <parameter name="DailyRollingFile.Append">true</parameter>
                    <parameter name="DailyRollingFile.DatePattern">'.'yyyy-MM-dd</parameter>
                    <parameter name="DailyRollingFile.Encoding">UTF-8</parameter>
                    <parameter name="DailyRollingFile.File">@SUBSTITUTE{property.profiles:monitor_changes_logfile}</parameter>
                    <parameter name="Pattern.ConversionPattern">%d{ISO8601} %-5p [%c] - %m%n</parameter>
                    <parameter name="com.ibm.di.log.appender">DailyRollingFile</parameter>
                    <parameter name="com.ibm.di.log.layout">Pattern</parameter>
                    <parameter name="com.ibm.di.log.level">INFO</parameter>
                    <parameter name="enabled">true</parameter>
                </Logger>
            </LogConfig>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="monitor_updates">
                    <InheritFrom>system:/Connectors/ibmdi.RDBMSChangelog</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                        <parameter name="iteratorStateKey">change_emp_draft_it</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                        <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
                        <parameter name="jdbcTable">CHG_EMP_DRAFT</parameter>
                        <parameter name="maximumWaitTime">0</parameter>
                        <parameter name="pollInterval">@SUBSTITUTE{property.profiles:monitor_changes_sleep_interval}</parameter>
                        <parameter name="removeProcessed">false</parameter>
                        <parameter name="stateKeyPersistence">End of cycle</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>IBMSNAP_COMMITSEQ</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>IBMSNAP_COMMITSEQ</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>PROF_KEY</Name>
                            <Type>simple</Type>
                            <Simple>PROF_KEY</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>PROF_UPDATE_SEQUENCE</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>PROF_UPDATE_SEQUENCE</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <NullBehavior>Null</NullBehavior>
                        <NullDefinition>EmptyAttribute</NullDefinition>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>IBMSNAP_COMMITSEQ</Name>
                            <NativeSyntax>INTEGER</NativeSyntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IBMSNAP_INTENTSEQ</Name>
                            <NativeSyntax>INTEGER</NativeSyntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IBMSNAP_LOGMARKER</Name>
                            <NativeSyntax>DATE</NativeSyntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IBMSNAP_OPERATION</Name>
                            <NativeSyntax>CHAR</NativeSyntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
log1("INFO", "info_uid_of_modified_entry", conn.getString("PROF_UID"));
if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ process_draft_updates: EF: monitor_updates: after_lookup hook: dumpEntry conn");
	task.dumpEntry(conn);
	task.logmsg("+++ process_draft_updates: EF: monitor_updates: after_lookup hook: dumpEntry work");
	task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script>thisConnector.connector.setParam("rdbms.chlog.col","IBMSNAP_COMMITSEQ");</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">


            <Script name="DumpWorkEntry0">
                <ModTime>1403042959285</ModTime>
                <parameter name="script"><![CDATA[
// Dump the work entry
//task.logmsg("DumpWorkEntry0 prior to lookup_draft: " + " : ENTER");
//task.dumpEntry(work);
]]></parameter>
            </Script>


                <Connector name="lookup_draft">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                        <parameter name="jdbcExposeNullValues">false</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                        <parameter name="jdbcPreparedStatement">true</parameter>
                        <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
                        <parameter name="jdbcTable">EMP_DRAFT</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>10e5799d240</Key>
                            <Attribute>PROF_KEY</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_KEY</Value>
                        </LinkCriteriaItem>
                        <LinkCriteriaItem>
                            <Key>10ebe985681</Key>
                            <Attribute>PROF_UPDATE_SEQUENCE</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_UPDATE_SEQUENCE</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_lookup">
                            <Name>after_lookup</Name>
                            <Script><![CDATA[
{
if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ process_draft_updates: DF: lookup_draft: begin after_lookup hook: dumpEntry conn");
	task.dumpEntry(conn);
	task.logmsg("+++ process_draft_updates: DF: lookup_draft: begin after_lookup hook: dumpEntry work");
	task.dumpEntry(work);
}

var aName = 0;
var aValue = 0;
var workattr = 0;
var valueInt = 0;
var valueStr = "";

bDoingExtensionDraftField = false;

var attrs = conn.getAttributeNames();
attrs_length = attrs.length;

// We loop thru the attributes in conn twice.  The first time (immediately
// below we are just looking for PROF_GUID.  If we find it this means that
// the change is to an extension field. In this case, the PROF_EXT_DRAFT 
// sequence id is in PROF_GUID as a string
for(i=0; i < attrs_length; ++i) {
	aName = attrs[i];

	// check for PROF_GUID
	if (aName == "PROF_GUID")
	{
		if (js_trace_level.debug <= trace_javascript_level) 
		{
			task.logmsg("+++ after_lookup: found PROF_GUID ");
		}
		bDoingExtensionDraftField = true;
		aValue = conn.getString(aName);

		// PROF_GUID should always be non-null (or we would not get here), 
		// but check anyway
		if (aValue != null)
		{
			log2("INFO", "info_draft_table_field_update", aName, aValue);

			// convert value to integer
			valueStr = aValue;
			valueInt = parseInt( aValue);
			if (js_trace_level.debug <= trace_javascript_level) {
				task.logmsg("+++ after_lookup: valueInt: " + valueInt);
			}
			if (valueInt == NaN)
			{
				if (js_trace_level.debug <= trace_javascript_level) 
				{
					task.logmsg("+++ after_lookup: skipEntry NaN: " );
				}
				system.skipEntry();  // skip delete in EMP_DRAFT to leave evidence of failure
			}
		}
		else
		{
			// strange, PROF_GUID is null, but should only find PROF_GUID if non null???
			if (js_trace_level.debug <= trace_javascript_level) 
			{
				task.logmsg("+++ ERROR after_lookup: PROF_GUID is null: " );
			}
			// there is not much we can do 
			system.skipEntry();  // skip delete in EMP_DRAFT to leave evidence of failure
		}
	}
}

if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ after_lookup: found PROF_GUID: bDoingExtensionDraftField: " + bDoingExtensionDraftField);
}

// handle employee table or extension table change
if (!bDoingExtensionDraftField)
{
	// employee table change
	for(i=0; i < attrs_length; ++i)
	{
		aName = attrs[i];
		//------------------------------------------
		// We will not be changing PROF_UID or 
		// PROF_SOURCE_UID so we do not include these
		//------------------------------------------
		aValue = conn.getString(aName);
		if(aValue != null)
		{
			log2("INFO", "info_draft_table_field_update", aName, aValue);
			workattr = work.newAttribute(aName);
			workattr.setValue(aValue);
		}
	}
}
else
{
	// extension table change

	workattr = work.newAttribute("PROF_EXT_UPDATE_SEQUENCE");
	workattr.setValue(valueStr);

	aName = "PROF_UID";
	aValue = conn.getString(aName);
	workattr = work.newAttribute(aName);
	workattr.setValue(aValue);

	aName = "PROF_SOURCE_UID";
	aValue = conn.getString(aName);
	workattr = work.newAttribute(aName);
	workattr.setValue(aValue);

	aName = "PROF_LAST_UPDATE";
	aValue = conn.getString(aName);
	workattr = work.newAttribute(aName);
	workattr.setValue(aValue);

	aName = "PROF_KEY";
	aValue = conn.getString(aName);
	workattr = work.newAttribute(aName);
	workattr.setValue(aValue);

	aName = "PROF_UPDATE_SEQUENCE";
	aValue = conn.getString(aName);
	workattr = work.newAttribute(aName);
	workattr.setValue(aValue);

	if (js_trace_level.debug <= trace_javascript_level) 
	{
		task.logmsg("+++ after_lookup: about to dump conn1 ");
		task.dumpEntry(conn);
		task.logmsg("+++ after_lookup: about to dump work1 ");
		task.dumpEntry(work);

		task.logmsg("+++ after_lookup: about to call lookup_ext_draft");
	}

	// get ext field to send to ldap
	try {
		lookup_ext_draft.lookup(work);
	}
	catch(err)
	{
		// may want to delete emp_draft record
		task.logmsg("+++ after_lookup: caught execption: err.message: " + err.message);

		//try {
		//	del_draft_entry.deleteEntry(work);
		//}
		//catch(err0)
		//{
		//	task.logmsg("+++ after_lookup: caught execption: err0.message: " + err0.message);
		//}

	system.skipEntry();

	}

	if (js_trace_level.debug <= trace_javascript_level) 
	{
		task.logmsg("+++ after_lookup: about to dump work for 2nd time");
		task.dumpEntry(work); 
	}
	}
}

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
								log2("WARN", "warn_no_existing_record_with_seq_to_modify", work.getString("PROF_UID"), work.getString("PROF_UPDATE_SEQUENCE"));

								if (js_trace_level.debug <= trace_javascript_level) 
								{
									task.logmsg("+++ lookup_nomatch: task.dumpEntry(work): " + task.dumpEntry(work));
								}
								system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>


            <Script name="DumpWorkEntry1">
                <ModTime>1403042959285</ModTime>
                <parameter name="script"><![CDATA[
// Dump the work entry
//task.logmsg("DumpWorkEntry1 prior to map_and_send: " + " : ENTER");
//task.dumpEntry(work);
]]></parameter>
            </Script>


                <Connector name="map_and_send">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
var dn = work.getString("PROF_SOURCE_UID");
log1("INFO", "info_dn_of_entry_to_modify", "" + dn);


if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ process_draft_updates: EF: map_and_send: info_dn_of_entry_to_modify: dn: " + dn);
}


//----------------------------------------------------
// We create (an empty) entry object which is the same as the
// typical conn.  The idea is to put the name/value pairs to
// be sent to ldap in this entry, and pass it to the LDAPUpdateConn
//----------------------------------------------------
var connEntry = system.newEntry();

if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ map_and_send: bDoingExtensionDraftField: " + bDoingExtensionDraftField);
}

if (! bDoingExtensionDraftField)
{
	// workEntrySize is 9 (see below) plus the number of basic attributes configured for drafting in profiles-config.xml.
	// Note that due to the if statement above, we are not dealing with any extension attributes.
	// These are the 9 fields that are always there: PROF_SOURCE_UID, PROF_MAIL, PROF_LAST_UPDATE, IBMSNAP_COMMITSEQ,
	// PROF_DISPLAY_NAME, PROF_UID, PROF_KEY, PROF_UPDATE_SEQUENCE, TENANT_KEY. If you add 
	//		<draftableAttribute>telephoneNumber</draftableAttribute>
	//		<draftableAttribute>faxNumber</draftableAttribute>
	// to profiles-config.xml you will also see PROF_TELEPHONE_NUMBER, and PROF_FAX_TELEPHONE_NUMBER, and
	// workEntrySize will be 11. 

	// where does '9' come from above?  The fetch of the EMP_DRAFT row returns all attributes with a non-null value.
	// If you look at the list, all the columns look familiar except IBMSNAP_COMMITSEQ.  I think this has something 
	// to do with TDI drafting (as does PROF_UPDATE_SEQUENCE). Thus we have a dependency on profiles code.

	var workEntrySize = work.size();

	var ix = 0;
	for (key in ldap_from_db_array) {
		ix++;
	}																					   

	// arraySize is the number of properties in map_dbrepos_to_source.properties. (workEntrySize - 9) should equal 
	// this number.  Note that the test below is not that precise.
	var arraySize = ix;
	if (js_trace_level.debug <= trace_javascript_level) 
	{
		task.logmsg("+++ process_draft_updates: map_and_send: workEntrySize: " + workEntrySize);
		task.logmsg("+++ process_draft_updates: map_and_send: arraySize: " + arraySize);
	}

	// make sure there is nothing strange going on.
	if (workEntrySize < 9)
	{
		consoleMsg("out", "********** ERROR: number of entries in work unexpected: Aborting. Size: " + workEntrySize);
		system.abortAssemblyLine("LDAPUpdateConn: On Error ");
	}

	// Make sure there are either no configured draft attributes AND no properties in map_dbrepos_to_source.properties, OR
	// if there are configured draft attributes, then there is at least one property in map_dbrepos_to_source.properties 
	if (!(((workEntrySize == 9) &&(arraySize == 0)) || ((workEntrySize > 9) && (arraySize > 0))))
	{
		consoleMsg("out", "********** ERROR: one of these configuration errors has been detected.  Aborting.");
		consoleMsg("out", "**********        (1) There are draftable attributes in profiles-config.xml, but no mappings in ");
		consoleMsg("out", "**********            map_dbrepos_to_source.properties in the TDI solution.  Thus, drafting would ");
		consoleMsg("out", "**********            not occur if processing continued.");
		consoleMsg("out", "**********        (2) There are no draftable attributes in profiles-config.xml, but there are ");
		consoleMsg("out", "**********            mappings in map_dbrepos_to_source.properties in the TDI solution.  This would ");
		consoleMsg("out", "**********            result in data loss if processing continued.");
		
		system.abortAssemblyLine("LDAPUpdateConn: On Error ");
	}

	//----------------------------------------------------
	// We now map fields given our associative mapping.
	// An attempt will be made to map to each LDAP field
	// in our associative array in our connEntry.  We 
	// will leave the equivalent attributes in the 
	// currentEntry empty, so a difference will be found
	// for each of those attributes.
	//----------------------------------------------------
	if (!map_into_entry( ldap_from_db_array, connEntry)) 
	{
		log1("ERROR", "err_mapping_failed_for_entry", work.getString("PROF_UID"));
		system.skipEntry();
	}
}
else
{

	if (!map_ext_into_entry( connEntry)) {
		log1("ERROR", "err_mapping_failed_for_entry", work.getString("PROF_UID"));
		system.skipEntry();
	}

}

//------------------------------------------------
// Finally, add the dn value to  entries
//------------------------------------------------
var dnattr1 = connEntry.newAttribute("$dn");
dnattr1.setValue(dn);

var dnattr2 = work.newAttribute("$dn");
dnattr2.setValue(dn);


if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ map_and_send: dump the special entry: connEntry");
	task.dumpEntry(connEntry);
}
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>


            <Script name="DumpWorkEntry2">
                <ModTime>1403042959285</ModTime>
                <parameter name="script"><![CDATA[
// Dump the work entry
//task.logmsg("DumpWorkEntry2 after map_and_send: " + " : ENTER");
//task.dumpEntry(work);
//task.dumpEntry(connEntry);
]]></parameter>
            </Script>

                <Connector name="LDAPUpdateConn">
                <InheritFrom>system:/Connectors/ibmdi.LDAP</InheritFrom>
                <ModTime>1403896439685</ModTime>
                <ConnectorMode>Update</ConnectorMode>
                <ConnectorState>Enabled</ConnectorState>
                <Configuration>
                    <InheritFrom>[parent]</InheritFrom>
                    <parameter name="automapADPassword">false</parameter>
                    <parameter name="debug">@SUBSTITUTE{property.profiles:monitor_changes_debug}</parameter>
                    <parameter name="ldapAddAttr">false</parameter>
                    <parameter name="ldapAuthenticationMethod">@SUBSTITUTE{property.profiles:source_ldap_authentication_method}</parameter>
                    <parameter name="ldapBinaryAttributes"><![CDATA[
GUID
objectGUID
objectSid]]></parameter>
                    <parameter name="ldapPageSize">0</parameter>
                    <parameter name="ldapPassword">@SUBSTITUTE{property.profiles:monitor_changes_ldap_server_password}</parameter>
                    <parameter name="ldapReferrals">follow</parameter>
                    <parameter name="ldapReturnAttributes"><![CDATA[
ibm-entryUuid
entryUUID
objectGUID
nsuniqueid
dominounid
GUID
*]]></parameter>
                    <parameter name="ldapUrl">@SUBSTITUTE{property.profiles:source_ldap_url}</parameter>
                    <parameter name="ldapUseSSL">@SUBSTITUTE{property.profiles:source_ldap_use_ssl}</parameter>
                    <parameter name="ldapSearchBase">@SUBSTITUTE{property.profiles:source_ldap_search_base}</parameter>
                    <parameter name="ldapSearchFilter">@SUBSTITUTE{property.profiles:source_ldap_search_filter}</parameter>
                    <parameter name="ldapSearchScope">subtree</parameter>
                    <parameter name="ldapSizeLimit">0</parameter>
                	<parameter name="ldapTimeLimit">0</parameter>
                    <parameter name="ldapUsername">@SUBSTITUTE{property.profiles:monitor_changes_ldap_server_username}</parameter>
                    <parameter name="ldapVLVPageSize">0</parameter>
                    <parameter name="simulateRename">false</parameter>
                </Configuration>
	            <ComputeChanges>true</ComputeChanges>
	            <DeltaBehavior>0</DeltaBehavior>
	            <DeltaStrict>true</DeltaStrict>
                <Parser>
                    <InheritFrom>[parent]</InheritFrom>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                </Parser>
                <AttributeMap name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                    <AttributeMapItem>
                        <Name>*</Name>
                        <Type>simple</Type>
                        <Simple>*</Simple>
                    </AttributeMapItem>
                </AttributeMap>
                <AttributeMap name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </AttributeMap>
                <DeltaSettings/>

                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>*</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>

                <LinkCriteria>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1403895672581</ModTime>
                    <LinkCriteriaItem>
                        <Key>1468c166034</Key>
                        <Attribute>$dn</Attribute>
                        <Operator>equals</Operator>
                        <Value>$$dn</Value>
                    </LinkCriteriaItem>
                </LinkCriteria>

        		<Hooks>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                        <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ before_initialize process_draft_updates_ldap trace");
	task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    <Hook name="before_execute">
                        <Name>before_execute</Name>
                        <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ before_execute process_draft_updates_ldap trace");
	task.dumpEntry(conn);
	task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="before_update">
                            <Name>before_update</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ before_update process_draft_updates_ldap trace");
	task.dumpEntry(conn);
	task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="before_lookup">
                            <Name>before_lookup</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++ before_lookup process_draft_updates_ldap trace");
	task.dumpEntry(conn);
	task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="after_lookup">
                            <Name>after_lookup</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ after_lookup process_draft_updates_ldap trace");
	//task.dumpEntry(conn);
	//task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="before_modify">
                            <Name>before_modify</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++ before_modify process_draft_updates_ldap trace, connEntry and work follow");
	task.dumpEntry(connEntry);
	task.dumpEntry(work);
}

var names = connEntry.getAttributeNames();  // you are in LDAPUpdateConn connector

if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++ process_draft_updates: DF: LDAPUpdateConn: attribute names.length LDAPUpdateConn connector: " + names.length);
}

for(nameIndex=0; nameIndex < names.length; ++nameIndex)
{
	var name = names[nameIndex];
	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("+++ process_draft_updates: DF: LDAPUpdateConn: attribute name " + name);
	}
	if (name != "$dn")
	{
		var attr = connEntry.getAttribute(name);	
		if (js_trace_level.debug <= trace_javascript_level) 
		{
			task.logmsg("+++ process_draft_updates: DF: LDAPUpdateConn: attribute attr value: " + attr);
		}
		if (attr == null) {
			if (js_trace_level.debug <= trace_javascript_level) {
				task.logmsg("+++ before_modify hit attr == null case");
			}
			conn.addAttributeValue(name, "");
		}
		else {
			if (js_trace_level.debug <= trace_javascript_level)
			{
				task.logmsg("+++ before_modify hit get value case");
			}

			var value = connEntry.getString(name);
			if (js_trace_level.debug <= trace_javascript_level)
			{
				task.logmsg("+++ before_modify hit got value case (value == null): " + (value == null));
				task.logmsg("+++ before_modify hit got value case (value == empty): " + (value == ""));
				task.logmsg("+++ before_modify hit got value case value itself: " + value);
			}

			if (value == null)
			{
				if (js_trace_level.debug <= trace_javascript_level) 
				{
					task.logmsg("+++ before_modify hit (value == null) || (value == empty) case");
				}
				value = "";
			}	
				
			if (js_trace_level.debug <= trace_javascript_level)
			{
				task.logmsg("+++ before_modify hit doing it");
			}
			conn.addAttributeValue(name, value);
		}
	}
}

if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++ before_modify process_draft_updates_ldap, conn and work follow");
}

task.dumpEntry(connEntry);
task.dumpEntry(conn);


]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="modify_apply">
                            <Name>modify_apply</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ modify_apply process_draft_updates_ldap trace");
	//task.dumpEntry(conn);
	//task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script><![CDATA[
// this hook should not be exercised.
// most likely, $dn not found.

if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ before_add process_draft_updates_ldap trace");
	task.dumpEntry(conn);
}

system.skipEntry();  // commented out, so we keep going as if nothing happened

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="after_modify">
                            <Name>after_modify</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
 {
	task.logmsg("+++ after_modify process_draft_updates_ldap trace");
	//task.dumpEntry(conn);
	//task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="after_update">
                            <Name>after_update</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ after_update process_draft_updates_ldap trace");
	//task.dumpEntry(conn);
	//task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                <Hook name="update_fail">
                    <Name>update_fail</Name>
                    <Script><![CDATA[

if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ update_fail process_draft_updates_ldap trace");
}

task.logmsg("ERROR LDAP update failed: " + error.getString("message"));

if (error.getString("message") == "[LDAP: error code 50 - Insufficient Access Rights]") {
	consoleMsg("out", "********** ERROR: serious ldap update failure: aborting " + error.getString("message"));
	system.abortAssemblyLine("LDAPUpdateConn: On Error ");
}

consoleMsg("out", "********** ERROR: ldap update failure: aborting " + error.getString("message"));

system.abortAssemblyLine("LDAPUpdateConn: On Error ");

]]></Script>
                    <Enabled>true</Enabled>
                </Hook>

                <Hook name="default_fail">
                    <Name>default_fail</Name>
                    <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ default_fail process_draft_updates_ldap trace");
}


task.logmsg("ERROR LDAP update failed: " + error.getString("message"));

if (error.getString("message") == "[LDAP: error code 50 - Insufficient Access Rights]") {
	consoleMsg("out", "********** ERROR: serious ldap update failure: aborting " + error.getString("message"));
	system.abortAssemblyLine("LDAPUpdateConn: On Error ");
}

consoleMsg("out", "********** ERROR: ldap update failure: aborting " + error.getString("message"));

system.abortAssemblyLine("LDAPUpdateConn: On Error ");

]]></Script>
                    <Enabled>true</Enabled>
                </Hook>

                <Hook name="update_ok">
                    <Name>update_ok</Name>
                    <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ update_ok process_draft_updates_ldap");
}
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>

                <Hook name="default_ok">
                    <Name>default_ok</Name>
                    <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ default_ok process_draft_updates_ldap");
}

work.setAttribute("$lookup_status", "success");

]]></Script>
                    <Enabled>true</Enabled>
                </Hook>

                <Hook name="lookup_fail">
                    <Name>lookup_fail</Name>
                    <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ lookup_fail process_draft_updates_ldap trace");
}

consoleMsg("out", "ERROR LDAP lookup failed: " + error.getString("message");
task.logmsg("ERROR LDAP lookup failed: " + error.getString("message"));

consoleMsg("out", "********** ERROR: ldap update failure: aborting " + error.getString("message"));

system.abortAssemblyLine("LDAPUpdateConn: On Error ");
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>

                <Hook name="lookup_nomatch">
                    <Name>lookup_nomatch</Name>
                    <Script><![CDATA[
task.logmsg("+++ lookup_nomatch process_draft_updates_ldap");

consoleMsg("out", "ERROR LDAP lookup nomatch: Aborting!";

system.abortAssemblyLine("LDAPUpdateConn: On Error ");

]]></Script>
                    <Enabled>true</Enabled>
                </Hook>

                 <Hook name="initialize_fail">
                 <Name>initialize_fail</Name>
                     <Script><![CDATA[
// terminate entire assemblyline immediately, hopefully we do not do
// end of cycle processing. In particular, we do not want to 
// update the Iterator State Key 

if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++ initialize_fail process_draft_updates_ldap trace");
}

consoleMsg("out", "********** ERROR: ldap initialization failure: Aborting. " );
system.abortAssemblyLine("LDAPUpdateConn: On Error initialize failed");
]]></Script>
                     <Enabled>true</Enabled>
                 </Hook>

                  <Hook name="on_connection_failure">
                     <Name>on_connection_failure</Name>
                     <Script><![CDATA[
// terminate entire assemblyline immediately, hopefully we do not do
// end of cycle processing. In particular, we do not want to 
// update the Iterator State Key 

if (js_trace_level.debug <= trace_javascript_level) 
{
	task.logmsg("+++ on_connection_failure process_draft_updates_ldap trace");
	consoleMsg("out", "********** $lookup_status on_connection_failure");
	logmsg("INFO", "********** $lookup_status nomatch [hook on_connection_failure]");
}

consoleMsg("out", "********** ERROR: ldap connection failure: aborting " );
system.abortAssemblyLine("LDAPUpdateConn: No answer returned");
]]></Script>
                     <Enabled>true</Enabled>
                  </Hook>
        </Hooks>
                <CheckpointConfig/>
                <SandboxConfig/>
                <Reconnect>
                    <InheritFrom>[parent]</InheritFrom>
                    <ReconnectRules/>
                </Reconnect>
                <Operations/>
                <PoolDefinition>
                    <InheritFrom>[parent]</InheritFrom>
                </PoolDefinition>
                <PoolInstance/>
            </Connector>



                <Connector name="del_ext_draft_entry">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ConnectorMode>Delete</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                        <parameter name="jdbcPreparedStatement">true</parameter>
                        <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
                        <parameter name="jdbcTable">PROFILE_EXT_DRAFT</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>PROF_DATA_TYPE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_EXT_KEY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_KEY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_NAME</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_PROPERTY_ID</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_UPDATE_SEQUENCE</Name>
                            <NativeSyntax>INTEGER</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_VALUE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_VALUE_EXTENDED</Name>
                            <NativeSyntax>BLOB</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>10ebeb8474b</Key>
                            <Attribute>PROF_KEY</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_KEY</Value>
                        </LinkCriteriaItem>
                        <LinkCriteriaItem>
                            <Key>10ebeb8758e</Key>
                            <Attribute>PROF_UPDATE_SEQUENCE</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_EXT_UPDATE_SEQUENCE</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
						if (js_trace_level.debug <= trace_javascript_level) {
							task.logmsg("+++++++PROF_EXT_UPDATE_SEQUENCE");
							task.dumpEntry(work);
						}

						if (!bDoingExtensionDraftField) { 
							system.ignoreEntry();
						}]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="del_draft_entry">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ConnectorMode>Delete</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                        <parameter name="jdbcPreparedStatement">true</parameter>
                        <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
                        <parameter name="jdbcTable">EMP_DRAFT</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>10ebeb8474b</Key>
                            <Attribute>PROF_UID</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_UID</Value>
                        </LinkCriteriaItem>
                        <LinkCriteriaItem>
                            <Key>10ebeb8758e</Key>
                            <Attribute>PROF_UPDATE_SEQUENCE</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_UPDATE_SEQUENCE</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="lookup_ext_draft">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                        <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
                        <parameter name="jdbcTable">PROFILE_EXT_DRAFT</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>PROF_DATA_TYPE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_EXT_KEY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_KEY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_NAME</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_PROPERTY_ID</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_UPDATE_SEQUENCE</Name>
                            <NativeSyntax>INTEGER</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_VALUE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_VALUE_EXTENDED</Name>
                            <NativeSyntax>BLOB</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <AdvancedLinkMode>false</AdvancedLinkMode>
                        <LinkCriteriaItem>
                            <Key>135f7e89d5a</Key>
                            <Attribute>PROF_UPDATE_SEQUENCE</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_EXT_UPDATE_SEQUENCE</Value>
                        </LinkCriteriaItem>
                        <LinkCriteriaItem>
                            <Key>135f804d6b2</Key>
                            <Attribute>PROF_KEY</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_KEY</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <Hook name="after_lookup">
                            <Name>after_lookup</Name>
                            <Script><![CDATA[
					if (js_trace_level.debug <= trace_javascript_level) {
						task.logmsg("+++ after_lookup in lookup_ext_draft");

						task.logmsg("+++ after_lookup: about to dump conn in lookup_ext_draft after");
						task.dumpEntry(conn);
					}

					var attr_id = conn.getString("PROF_PROPERTY_ID");
					var aValue = conn.getString("PROF_VALUE");

					workattr = work.newAttribute( attr_id);
					workattr.setValue( aValue);

					]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_lookup">
                            <Name>before_lookup</Name>
                            <Script><![CDATA[
					if (js_trace_level.debug <= trace_javascript_level) {
						task.logmsg("+++ before_lookup in lookup_ext_draft");  // lookup_ext_draft connector
						task.dumpEntry(work);
					}
					]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
						log2("WARN", "warn_no_existing_record_with_seq_to_modify", work.getString("PROF_UID"), work.getString("PROF_EXT_UPDATE_SEQUENCE"));

						if (js_trace_level.debug <= trace_javascript_level) {
							task.logmsg("+++ lookup_nomatch: did not find extension row: ");
						}
						throw "Didn't find extension row";
						]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="prolog">
                            <Name>prolog</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="process_draft_updates_dsml">
            <ModTime>1398114851640</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // process_draft_updates</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "process_draft_updates_dsml";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

var aProp = system.getTDIProperty("profiles", "monitor_changes_debug");
if((aProp != null) && (aProp == "true")) {
	monitor_changes_debug = true;
	task.logmsg("+++ process_draft_updates_dsml: finished loading lcConf");
}
else {
	monitor_changes_debug = false;
}
log2("INFO", "info_debug_prop_setting", "monitor_changes_debug", "" + monitor_changes_debug);

//--------------------------------------------------------------
// Get the filename of the file containing special mapping
// functions from ldap to DB field, if any
//--------------------------------------------------------------
var aProp = system.getTDIProperty("profiles", "monitor_changes_map_functions_file");
if((aProp != null) && (aProp != "") && (aProp.toLowerCase() != "null")) {
	monitor_changes_map_functions_file = aProp;
}
else {
	monitor_changes_map_functions_file = null;
}
log1("INFO", "info_monitor_changes_map_file", "" + monitor_changes_map_functions_file);

//--------------------------------------------------------------
// Get flag telling us whether to set special batchRequest
// header value.  This may be needed for DSML on AD.
//--------------------------------------------------------------
monitor_changes_dsml_add_batch_request_to_soap_header = false;
aProp = system.getTDIProperty("profiles", "monitor_changes_dsml_add_batch_request_to_soap_header");
if((aProp != null) && (aProp != "") && (aProp.toLowerCase() == "true")) {
	monitor_changes_dsml_add_batch_request_to_soap_header = true;
}

//--------------------------------------------------------------
// Get special batch request header value. Since we no we may
// need to set batchRequest for DSML on AD, we have a more
// generic capability too just in case
//--------------------------------------------------------------
aProp = system.getTDIProperty("profiles", "monitor_changes_dsml_soap_action_header_value");
if((aProp != null) && (aProp != "") && (aProp.toLowerCase() != "null")) {
	monitor_changes_dsml_soap_action_header_value = aProp;
}
else {
	monitor_changes_dsml_soap_action_header_value = null;
}


//-------------------------------------------------------
// If we were given a path to a file containing
// mapping functions, load it now
//-------------------------------------------------------
if(monitor_changes_map_functions_file != null) {
	var funcData = read_functions_from_file(monitor_changes_map_functions_file);
	log1("INFO", "info_monitor_changes_map_functions_contents", "" + funcData);
	if(funcData != null) {
		try 
		{
			eval(funcData);
		}
		catch(e)
		{
			log2("ERROR", "err_eval_map_functions_file", monitor_changes_map_functions_file, e.toString());
		}
	}
}

//----------------------------------------------------------------------
// Load in mapping that shows how DB fields map to source fields. This
// will create the ldap_from_db_array associative array
//----------------------------------------------------------------------

if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("about to call load_mappings_dbrepos_from_source to get extension mappings: "); 
}

load_mappings_dbrepos_to_source();

]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="monitor_updates" state="Enabled"/>
                    <Component name="lookup_draft" state="Enabled"/>
                    <Component name="map_and_send" state="Enabled"/>
                    <Component name="DSMLHttpConn" state="Enabled"/>
                    <Component name="del_ext_draft_entry" state="Simulated"/>
                    <Component name="del_draft_entry" state="Simulated"/>
                    <Component name="lookup_ext_draft" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig>
                <Logger name="DailyRollingFile">
                    <parameter name="DailyRollingFile.Append">true</parameter>
                    <parameter name="DailyRollingFile.DatePattern">'.'yyyy-MM-dd</parameter>
                    <parameter name="DailyRollingFile.Encoding">UTF-8</parameter>
                    <parameter name="DailyRollingFile.File">@SUBSTITUTE{property.profiles:monitor_changes_logfile}</parameter>
                    <parameter name="Pattern.ConversionPattern">%d{ISO8601} %-5p [%c] - %m%n</parameter>
                    <parameter name="com.ibm.di.log.appender">DailyRollingFile</parameter>
                    <parameter name="com.ibm.di.log.layout">Pattern</parameter>
                    <parameter name="com.ibm.di.log.level">INFO</parameter>
                    <parameter name="enabled">true</parameter>
                </Logger>
            </LogConfig>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="monitor_updates">
                    <InheritFrom>system:/Connectors/ibmdi.RDBMSChangelog</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                        <parameter name="iteratorStateKey">change_emp_draft_it</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                        <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
                        <parameter name="jdbcTable">CHG_EMP_DRAFT</parameter>
                        <parameter name="maximumWaitTime">0</parameter>
                        <parameter name="pollInterval">@SUBSTITUTE{property.profiles:monitor_changes_sleep_interval}</parameter>
                        <parameter name="removeProcessed">false</parameter>
                        <parameter name="stateKeyPersistence">End of cycle</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>IBMSNAP_COMMITSEQ</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>IBMSNAP_COMMITSEQ</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>PROF_KEY</Name>
                            <Type>simple</Type>
                            <Simple>PROF_KEY</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>PROF_UPDATE_SEQUENCE</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>PROF_UPDATE_SEQUENCE</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <NullBehavior>Null</NullBehavior>
                        <NullDefinition>EmptyAttribute</NullDefinition>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>IBMSNAP_COMMITSEQ</Name>
                            <NativeSyntax>INTEGER</NativeSyntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IBMSNAP_INTENTSEQ</Name>
                            <NativeSyntax>INTEGER</NativeSyntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IBMSNAP_LOGMARKER</Name>
                            <NativeSyntax>DATE</NativeSyntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>IBMSNAP_OPERATION</Name>
                            <NativeSyntax>CHAR</NativeSyntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
log1("INFO", "info_uid_of_modified_entry", conn.getString("PROF_UID"));
if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++ after_lookup: dumpEntry conn");
	task.dumpEntry(conn);
	task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script>thisConnector.connector.setParam("rdbms.chlog.col","IBMSNAP_COMMITSEQ");</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>

            <ContainerDF name="DataFlowContainer">
                <Connector name="lookup_draft">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                        <parameter name="jdbcExposeNullValues">false</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                        <parameter name="jdbcPreparedStatement">true</parameter>
                        <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
                        <parameter name="jdbcTable">EMP_DRAFT</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>10e5799d240</Key>
                            <Attribute>PROF_KEY</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_KEY</Value>
                        </LinkCriteriaItem>
                        <LinkCriteriaItem>
                            <Key>10ebe985681</Key>
                            <Attribute>PROF_UPDATE_SEQUENCE</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_UPDATE_SEQUENCE</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_lookup">
                            <Name>after_lookup</Name>
                            <Script><![CDATA[
{
if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++ right after_lookup: dump work and conn ");
	task.dumpEntry(work);
	task.dumpEntry(conn);
}

var aName = 0;
var aValue = 0;
var workattr = 0;
var valueInt = 0;
var valueStr = "";

bDoingExtensionDraftField = false;

var attrs = conn.getAttributeNames();
attrs_length = attrs.length;

// We loop thru the attributes in conn twice.  The first time (immediately
// below we are just looking for PROF_GUID.  If we find it this means that
// the change is to an extension field. In this case, the PROF_EXT_DRAFT 
// sequence id is in PROF_GUID as a string
for(i=0; i < attrs_length; ++i) {
	aName = attrs[i];

	// check for PROF_GUID
	if (aName == "PROF_GUID")
	{
		if (js_trace_level.debug <= trace_javascript_level) {
			task.logmsg("+++ after_lookup: found PROF_GUID ");
		
		}
		bDoingExtensionDraftField = true;
		aValue = conn.getString(aName);

		// PROF_GUID should always be non-null (or we would not get here), 
		// but check anyway
		if (aValue != null)
		{
			log2("INFO", "info_draft_table_field_update", aName, aValue);

			// convert value to integer
			valueStr = aValue;
			valueInt = parseInt( aValue);
			if (js_trace_level.debug <= trace_javascript_level) {
				task.logmsg("+++ after_lookup: valueInt: " + valueInt);
			}
			if (valueInt == NaN)
			{
				if (js_trace_level.debug <= trace_javascript_level) {
					task.logmsg("+++ after_lookup: skipEntry NaN: " );
				}
				system.skipEntry();  // skip delete in EMP_DRAFT to leave evidence of failure
			}
		}
		else
		{
			// strange, PROF_GUID is null, but should only find PROF_GUID if non null???
			if (js_trace_level.debug <= trace_javascript_level) {
				task.logmsg("+++ ERROR after_lookup: PROF_GUID is null: " );
			}
			// there is not much we can do 
			system.skipEntry();  // skip delete in EMP_DRAFT to leave evidence of failure
		}
	}
}

if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++ after_lookup: found PROF_GUID: bDoingExtensionDraftField: " + bDoingExtensionDraftField);
}

// handle employee table or extension table change
if (!bDoingExtensionDraftField)
{
	// employee table change
	for(i=0; i < attrs_length; ++i)
	{
		aName = attrs[i];
		//------------------------------------------
		// We will not be changing PROF_UID or 
		// PROF_SOURCE_UID so we do not include these
		//------------------------------------------
		aValue = conn.getString(aName);
		if(aValue != null)
		{
			log2("INFO", "info_draft_table_field_update", aName, aValue);
			workattr = work.newAttribute(aName);
			workattr.setValue(aValue);
		}
	}
}
else
{
	// extension table change

	workattr = work.newAttribute("PROF_EXT_UPDATE_SEQUENCE");
	workattr.setValue(valueStr);

	aName = "PROF_UID";
	aValue = conn.getString(aName);
	workattr = work.newAttribute(aName);
	workattr.setValue(aValue);

	aName = "PROF_SOURCE_UID";
	aValue = conn.getString(aName);
	workattr = work.newAttribute(aName);
	workattr.setValue(aValue);

	aName = "PROF_LAST_UPDATE";
	aValue = conn.getString(aName);
	workattr = work.newAttribute(aName);
	workattr.setValue(aValue);

	aName = "PROF_KEY";
	aValue = conn.getString(aName);
	workattr = work.newAttribute(aName);
	workattr.setValue(aValue);

	aName = "PROF_UPDATE_SEQUENCE";
	aValue = conn.getString(aName);
	workattr = work.newAttribute(aName);
	workattr.setValue(aValue);

	if (js_trace_level.debug <= trace_javascript_level) {
		task.logmsg("+++ after_lookup: about to dump conn1 ");
		task.dumpEntry(conn);
		task.logmsg("+++ after_lookup: about to dump work1 ");
		task.dumpEntry(work);

		task.logmsg("+++ after_lookup: about to call lookup_ext_draft");
	}

	// get ext field to send to dsml
	try {
		lookup_ext_draft.lookup(work);
	}
	catch(err)
	{
		// may want to delete emp_draft record
		task.logmsg("+++ after_lookup: caught execption: err.message: " + err.message);

		//try {
		//	del_draft_entry.deleteEntry(work);
		//}
		//catch(err0)
		//{
		//	task.logmsg("+++ after_lookup: caught execption: err0.message: " + err0.message);
		//}

		system.skipEntry();

	}

	if (js_trace_level.debug <= trace_javascript_level) {
		task.logmsg("+++ after_lookup: about to dump work for 2nd time");
		task.dumpEntry(work); 
		}
	}
}

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
								log2("WARN", "warn_no_existing_record_with_seq_to_modify", work.getString("PROF_UID"), work.getString("PROF_UPDATE_SEQUENCE"));

								if (js_trace_level.debug <= trace_javascript_level) {
									task.logmsg("+++ lookup_nomatch: task.dumpEntry(work): " + task.dumpEntry(work));
								}
								system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="map_and_send">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
var dn = work.getString("PROF_SOURCE_UID");
log1("INFO", "info_dn_of_entry_to_modify", "" + dn);


if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++ info_dn_of_entry_to_modify: dn: ");
}


//----------------------------------------------------
// We create (an empty) entry object which is the same as the
// typical conn.  The idea is to put the name/value pairs to
// be sent to ldap in this entry, and pass it to the DSMLHttpConn
// connector to be sent to DSML server
//----------------------------------------------------
var connEntry = system.newEntry();

if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++ map_and_send: bDoingExtensionDraftField: " + bDoingExtensionDraftField);
}

if (! bDoingExtensionDraftField)
{

	//----------------------------------------------------
	// We now map fields given our associative mapping.
	// An attempt will be made to map to each LDAP field
	// in our associative array in our connEntry.  We 
	// will leave the equivalent attributes in the 
	// currentEntry empty, so a difference will be found
	// for each of those attributes.
	//----------------------------------------------------
	if (!map_into_entry(ldap_from_db_array, connEntry)) {
		log1("ERROR", "err_mapping_failed_for_entry", work.getString("PROF_UID"));
		system.skipEntry();
	}
}
else
{

	if (!map_ext_into_entry( connEntry)) {
		log1("ERROR", "err_mapping_failed_for_entry", work.getString("PROF_UID"));
		system.skipEntry();
	}

}

//------------------------------------------------
// Finally, add the dn value to the conn entries and the
// fake current ones
//------------------------------------------------
var dnattr1 = connEntry.newAttribute("$dn");
dnattr1.setValue(dn);

if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++ dump the special entry: ");
	task.dumpEntry(connEntry);
}


//------------------------------------------------
// Create the search criteria, which is simply
// an exact match on the DN
//------------------------------------------------

// var searchCriteria = com.ibm.di.server.SearchCriteria("$dn", com.ibm.di.server.SearchCriteria.EXACT, dn);
// log1("INFO", "info_search_criteria", searchCriteria.getSearchString(0));

//------------------------------------------------
// NOTE: We used to invoke the DSMLConn which
//       was set in "passive" mode. Now it is 
//       disabled and we use the DSMLHttpConn
//       instead. If/when the DSMLv2SOAP connector
//       works better and it is to be used, it 
//       should be set to "passive" mode, the
//       code below should be uncommented and
//       DSMLHttpConn should be disabled.
//------------------------------------------------
// Now invoke the DSML connector, asking it to
// modify the entry with the given search 
// criteria with the given conn
//------------------------------------------------
//log0("INFO", "info_begin_dsml_request_xmit");
//DSMLConn.connector.modEntry(connEntry, searchCriteria, currentEntry);
//log0("INFO", "info_end_dsml_request_xmit");

]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

                <Connector name="DSMLHttpConn">
                    <InheritFrom>system:/Connectors/ibmdi.HTTPClient</InheritFrom>
                    <ConnectorMode>CallReply</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="contentType">text/xml; charset=UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                        <parameter name="inbody"/>
                        <parameter name="method">POST</parameter>
                        <parameter name="outbody"/>
                        <parameter name="password">@SUBSTITUTE{property.profiles:monitor_changes_dsml_server_password}</parameter>
                        <parameter name="url">@SUBSTITUTE{property.profiles:monitor_changes_dsml_server_url}</parameter>
                        <parameter name="username">@SUBSTITUTE{property.profiles:monitor_changes_dsml_server_username}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>http.body</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script><![CDATA[
var modifications = "";

var names = connEntry.getAttributeNames();  // you are in DSMLHttpConn connector

if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++ attribute names.length DSMLHttpConn connector: " + names.length);
}

for(nameIndex=0; nameIndex < names.length; ++nameIndex)
{

	if (js_trace_level.debug <= trace_javascript_level) {
		task.logmsg("+++ attribute names[nameIndex]: " + names[nameIndex]);
	}

	if(names[nameIndex] != "$dn") {
		var attr = connEntry.getAttribute(names[nameIndex]);	
		if (js_trace_level.debug <= trace_javascript_level) {
			task.logmsg("+++ attribute attr value: " + attr);
		}
		if(attr == null) {
			modifications = modifications + "\r\n <modification name=\"" + names[nameIndex] + "\" operation=\"replace\"/>";
		}
		else {
			modifications = modifications + "\r\n <modification name=\"" + names[nameIndex] + "\" operation=\"replace\">" +
							"\r\n     <value>" + connEntry.getString(names[nameIndex]) + "</value>" +
							"\r\n </modification>";
		}
		if (js_trace_level.debug <= trace_javascript_level) {
			task.logmsg("+++ attribute modifications: " + modifications);
		}
	}
}

if(modifications == "") {
	system.skipEntry();
}

var bstr = 
"<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\">"+
"<SOAP-ENV:Body xmlns=\"urn:oasis:names:tc:DSML:2:0:core\">" +
"<batchRequest xmlns=\"urn:oasis:names:tc:DSML:2:0:core\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">" +
"	<modifyRequest dn=\"" + connEntry.getString("$dn") + "\">" +          
			modifications +
"   </modifyRequest>"+
"</batchRequest>"+
"</SOAP-ENV:Body>"+
"</SOAP-ENV:Envelope>";

ret.value = bstr;
]]></Script>
                            <Simple>http.body</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>http.soapaction</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script><![CDATA[
ret.value = "\"#batchRequest\"";
]]></Script>
                            <Simple>http.SOAPAction</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>http.Content-Length</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>http.Content-Type</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>http.Date</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>http.Server</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>http.X-Powered-By</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>http.body</Name>
                            <Syntax>java.lang.StringBuffer</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>http.body.response</Name>
                            <Syntax>java.lang.StringBuffer</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>http.responseCode</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>http.responseMsg</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_reply">
                            <Name>after_reply</Name>
                            <Script><![CDATA[
// disabled hook
task.logmsg("+++ after_reply ");
task.dumpEntry(conn);
						]]></Script>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="callreply_fail">
                            <Name>callreply_fail</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++ callreply_fail, about to abort DSMLHttpConn");
}
system.abortAssemblyLine("DSMLHttpConn: Epilog, On Error, callreply_fail");
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="callreply_ok">
                            <Name>callreply_ok</Name>
                            <Script><![CDATA[
// disabled hook
task.logmsg("+++ call reply successful ");
task.dumpEntry(conn);
]]></Script>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script><![CDATA[
// terminate entire assemblyline immediately, hopefully we do not do
// end of cycle processing. In particular, we do not want to 
// update the Iterator State Key 
system.abortAssemblyLine("DSMLHttpConn: Epilog, On Error, close_fail");
						]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
// terminate entire assemblyline immediately, hopefully we do not do
// end of cycle processing. In particular, we do not want to 
// update the Iterator State Key 
system.abortAssemblyLine("DSMLHttpConn: Default On Error");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
// disabled hook
task.logmsg("+++ default success ");
task.dumpEntry(conn); 
						]]></Script>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
// terminate entire assemblyline immediately, hopefully we do not do
// end of cycle processing. In particular, we do not want to 
// update the Iterator State Key 
system.abortAssemblyLine("DSMLHttpConn: On Error");
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="no_reply">
                            <Name>no_reply</Name>
                            <Script><![CDATA[
// terminate entire assemblyline immediately, hopefully we do not do
// end of cycle processing. In particular, we do not want to 
// update the Iterator State Key 
system.abortAssemblyLine("DSMLHttpConn: No answer returned");
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="on_connection_failure">
                            <Name>on_connection_failure</Name>
                            <Script><![CDATA[
// terminate entire assemblyline immediately, hopefully we do not do
// end of cycle processing. In particular, we do not want to 
// update the Iterator State Key 
system.abortAssemblyLine("DSMLHttpConn: No answer returned");
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="del_ext_draft_entry">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ConnectorMode>Delete</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                        <parameter name="jdbcPreparedStatement">true</parameter>
                        <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
                        <parameter name="jdbcTable">PROFILE_EXT_DRAFT</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>PROF_DATA_TYPE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_EXT_KEY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_KEY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_NAME</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_PROPERTY_ID</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_UPDATE_SEQUENCE</Name>
                            <NativeSyntax>INTEGER</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_VALUE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_VALUE_EXTENDED</Name>
                            <NativeSyntax>BLOB</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>10ebeb8474b</Key>
                            <Attribute>PROF_KEY</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_KEY</Value>
                        </LinkCriteriaItem>
                        <LinkCriteriaItem>
                            <Key>10ebeb8758e</Key>
                            <Attribute>PROF_UPDATE_SEQUENCE</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_EXT_UPDATE_SEQUENCE</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
						if (js_trace_level.debug <= trace_javascript_level) {
							task.logmsg("+++++++PROF_EXT_UPDATE_SEQUENCE");
							task.dumpEntry(work);
						}

						if (!bDoingExtensionDraftField) { 
							system.ignoreEntry();
						}]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="del_draft_entry">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ConnectorMode>Delete</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                        <parameter name="jdbcPreparedStatement">true</parameter>
                        <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
                        <parameter name="jdbcTable">EMP_DRAFT</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>10ebeb8474b</Key>
                            <Attribute>PROF_UID</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_UID</Value>
                        </LinkCriteriaItem>
                        <LinkCriteriaItem>
                            <Key>10ebeb8758e</Key>
                            <Attribute>PROF_UPDATE_SEQUENCE</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_UPDATE_SEQUENCE</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="lookup_ext_draft">
                    <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                        <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                        <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
                        <parameter name="jdbcTable">PROFILE_EXT_DRAFT</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>PROF_DATA_TYPE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_EXT_KEY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_KEY</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_NAME</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_PROPERTY_ID</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_UPDATE_SEQUENCE</Name>
                            <NativeSyntax>INTEGER</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_VALUE</Name>
                            <NativeSyntax>VARCHAR</NativeSyntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_VALUE_EXTENDED</Name>
                            <NativeSyntax>BLOB</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <AdvancedLinkMode>false</AdvancedLinkMode>
                        <LinkCriteriaItem>
                            <Key>135f7e89d5a</Key>
                            <Attribute>PROF_UPDATE_SEQUENCE</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_EXT_UPDATE_SEQUENCE</Value>
                        </LinkCriteriaItem>
                        <LinkCriteriaItem>
                            <Key>135f804d6b2</Key>
                            <Attribute>PROF_KEY</Attribute>
                            <Operator>equals</Operator>
                            <Value>$PROF_KEY</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <Hook name="after_lookup">
                            <Name>after_lookup</Name>
                            <Script><![CDATA[
					if (js_trace_level.debug <= trace_javascript_level) {
						task.logmsg("+++ after_lookup in lookup_ext_draft");

						task.logmsg("+++ after_lookup: about to dump conn in lookup_ext_draft after");
						task.dumpEntry(conn);
					}

					var attr_id = conn.getString("PROF_PROPERTY_ID");
					var aValue = conn.getString("PROF_VALUE");

					workattr = work.newAttribute( attr_id);
					workattr.setValue( aValue);

					]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_lookup">
                            <Name>before_lookup</Name>
                            <Script><![CDATA[
					if (js_trace_level.debug <= trace_javascript_level) {
						task.logmsg("+++ before_lookup in lookup_ext_draft");  // lookup_ext_draft connector
						task.dumpEntry(work);
					}
					]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
						log2("WARN", "warn_no_existing_record_with_seq_to_modify", work.getString("PROF_UID"), work.getString("PROF_EXT_UPDATE_SEQUENCE"));

						if (js_trace_level.debug <= trace_javascript_level) {
							task.logmsg("+++ lookup_nomatch: did not find extension row: ");
						}
						throw "Didn't find extension row";
						]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="prolog">
                            <Name>prolog</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="process_tds_changes">
            <ModTime>1398114851765</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // process_tds_changes</Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
// uses changelog_state_key

assemblyName = "process_tds_changes";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

var aProp = system.getTDIProperty("profiles", "tds_changelog_debug");
if((aProp != null) && (aProp == "true")) {
	tds_changelog_debug = true;
}
else {
	tds_changelog_debug = false;
}
log2("INFO", "info_debug_prop_setting", "tds_changelog_debug", "" + tds_changelog_debug);

//--------------------------------------------------------------
// Get the regex expression which is used to filter DNs from
// property file, if any
//--------------------------------------------------------------
tds_changelog_ldap_required_dn_regex_pattern = null;
var regExpClTdsProp = system.getTDIProperty("profiles", "tds_changelog_ldap_required_dn_regex");
if((regExpClTdsProp != null) && (regExpClTdsProp != "")) {
	tds_changelog_ldap_required_dn_regex_pattern = new RegExp(regExpClTdsProp);
	log1("INFO", "info_dn_regex", tds_changelog_ldap_required_dn_regex_pattern.toString());
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="changetype" state="Enabled"/>
                    <Component name="modify" state="Enabled"/>
                    <Component name="setOperationModify" state="Enabled"/>
                    <Component name="read_values" state="Enabled"/>
                    <Component name="callSyncDB_mod" state="Simulated"/>
                    <Component name="add" state="Enabled"/>
                    <Component name="setOperationAdd" state="Enabled"/>
                    <Component name="read_add_value" state="Enabled"/>
                    <Component name="callSyncDB_add" state="Simulated"/>
                    <Component name="delete" state="Enabled"/>
                    <Component name="setOperationDelete" state="Enabled"/>
                    <Component name="lookup_uid" state="Enabled"/>
                    <Component name="call_SyncDB_del" state="Simulated"/>
                    <Component name="get_tds_updates" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig>
                <Logger name="DailyRollingFile">
                    <parameter name="DailyRollingFile.Append">true</parameter>
                    <parameter name="DailyRollingFile.DatePattern">'.'yyyy-MM-dd</parameter>
                    <parameter name="DailyRollingFile.Encoding">UTF-8</parameter>
                    <parameter name="DailyRollingFile.File">@SUBSTITUTE{property.profiles:tds_changelog_logfile}</parameter>
                    <parameter name="Pattern.ConversionPattern">%d{ISO8601} %-5p [%c] - %m%n</parameter>
                    <parameter name="com.ibm.di.log.appender">DailyRollingFile</parameter>
                    <parameter name="com.ibm.di.log.layout">Pattern</parameter>
                    <parameter name="com.ibm.di.log.level">INFO</parameter>
                    <parameter name="enabled">true</parameter>
                </Logger>
            </LogConfig>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="get_tds_updates">
                    <InheritFrom>system:/Connectors/ibmdi.IBMDirectoryServerChangelog</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="batchRetrieval">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="iteratorStateKey">changelog_state_key</parameter>
                        <parameter name="ldapAuthenticationMethod">@SUBSTITUTE{property.profiles:tds_changelog_ldap_authentication_method}</parameter>
                        <parameter name="ldapPassword">@SUBSTITUTE{property.profiles:tds_changelog_ldap_user_password}</parameter>
                        <parameter name="ldapSearchBase">@SUBSTITUTE{property.profiles:tds_changelog_ldap_changelog_base}</parameter>
                        <parameter name="ldapUrl">@SUBSTITUTE{property.profiles:tds_changelog_ldap_url}</parameter>
                        <parameter name="ldapUseSSL">@SUBSTITUTE{property.profiles:tds_changelog_ldap_use_ssl}</parameter>
                        <parameter name="ldapUsername">@SUBSTITUTE{property.profiles:tds_changelog_ldap_user_login}</parameter>
                        <parameter name="mergeMode">Merge changelog and changed data</parameter>
                        <parameter name="nsChangenumber">@SUBSTITUTE{property.profiles:tds_changelog_start_at_changenumber}</parameter>
                        <parameter name="nsSleepInterval">@SUBSTITUTE{property.profiles:tds_changelog_sleep_interval}</parameter>
                        <parameter name="nsTimeout">0</parameter>
                        <parameter name="pageSize">500</parameter>
                        <parameter name="stateKeyPersistence">End of cycle</parameter>
                        <parameter name="useNotifications">@SUBSTITUTE{property.profiles:tds_changelog_use_notifications}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>changenumber</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>changes</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>changetime</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>changetype</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibm-changeInitiatorsName</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectclass</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>targetdn</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telephonenumber</Name>
                            <Syntax>java.lang.String</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[
var processResult = "fail";
var currentOperation = "init";
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="get_ok">
                            <Name>get_ok</Name>
                            <Script><![CDATA[
var dn = work.getString("targetdn");
if(dn != null) 
{
	if(dn.length() > 0) 
	{
		/*-----------------------------------------------------------
         * We may be told to ignore any entries that do not contain
         * a particular regular expression pattern. If this was 
		 * configured test the pattern and skip if false
         *-----------------------------------------------------------*/ 		
		if(tds_changelog_ldap_required_dn_regex_pattern != null) 
		{
			if(!tds_changelog_ldap_required_dn_regex_pattern.test(dn)) 
			{
				if (js_trace_level.debug <= trace_javascript_level)
					task.logmsg("+++skipping $dn=" + dn + 
								" because does not match required pattern:" + 
								tds_changelog_ldap_required_dn_regex_pattern);
				system.skipEntry();				
			}
		}
	}
	else
	{
		system.skipEntry();
	}
	work.setAttribute("$dn", dn);
}
else 
{
	msgText = log0("ERROR", "err_no_dn");
	system.abortAssemblyLine(msgText);
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Branch name="changetype">
                    <Branch name="modify">
                        <Script name="setOperationModify">
                            <parameter name="script">currentOperation = "modify";</parameter>
                        </Script>
                        <Connector name="read_values">
                            <UserComment>lookup if modified, not replaced</UserComment>
                            <InheritFrom>/Connectors/FetchLDAPDataWithFilter</InheritFrom>
                            <ConnectorMode>Lookup</ConnectorMode>
                            <ConnectorState>Enabled</ConnectorState>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="automapADPassword">false</parameter>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                <parameter name="ldapAddAttr">false</parameter>
                                <parameter name="ldapAuthenticationMethod">@SUBSTITUTE{property.profiles:source_ldap_authentication_method}</parameter>
                                <parameter name="ldapBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid]]></parameter>
                                <parameter name="ldapPageSize">0</parameter>
                                <parameter name="ldapPassword">@SUBSTITUTE{property.profiles:source_ldap_user_password}</parameter>
                                <parameter name="ldapReferrals">follow</parameter>
                                <parameter name="ldapReturnAttributes"><![CDATA[ibm-entryUuid
entryUUID
objectGUID
nsuniqueid
dominounid
GUID
*]]></parameter>
                                <parameter name="ldapSearchBase">@SUBSTITUTE{property.profiles:source_ldap_search_base}</parameter>
                                <parameter name="ldapSearchFilter">@SUBSTITUTE{property.profiles:source_ldap_search_filter}</parameter>
                                <parameter name="ldapSearchScope">subtree</parameter>
                                <parameter name="ldapSizeLimit">0</parameter>
                                <parameter name="ldapTimeLimit">0</parameter>
                                <parameter name="ldapUrl">@SUBSTITUTE{property.profiles:source_ldap_url}</parameter>
                                <parameter name="ldapUseSSL">@SUBSTITUTE{property.profiles:source_ldap_use_ssl}</parameter>
                                <parameter name="ldapUsername">@SUBSTITUTE{property.profiles:source_ldap_user_login}</parameter>
                                <parameter name="ldapVLVPageSize">0</parameter>
                                <parameter name="simulateRename">false</parameter>
                            </Configuration>
                            <ComputeChanges>true</ComputeChanges>
                            <DeltaBehavior>0</DeltaBehavior>
                            <DeltaStrict>true</DeltaStrict>
                            <Parser>
                                <InheritFrom>[parent]</InheritFrom>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                            </Parser>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>*</Name>
                                    <Type>simple</Type>
                                    <Simple>*</Simple>
                                </AttributeMapItem>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <DeltaSettings>
                                <WhenToCommit>After every database operation</WhenToCommit>
                                <Driver>CloudScape</Driver>
                            </DeltaSettings>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <LinkCriteria>
                                <InheritFrom>[parent]</InheritFrom>
                                <LinkCriteriaItem>
                                    <Key>1105a8d4274</Key>
                                    <Attribute>$dn</Attribute>
                                    <Operator>equals</Operator>
                                    <Value>$targetDN</Value>
                                </LinkCriteriaItem>
                            </LinkCriteria>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="lookup_nomatch">
                                    <Name>lookup_nomatch</Name>
                                    <Script><![CDATA[
log1("WARN", "warn_no_existing_record_to_modify", work.getString("$dn"));
system.skipEntry();
]]></Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                            </Hooks>
                            <CheckpointConfig/>
                            <SandboxConfig/>
                            <Reconnect>
                                <InheritFrom>[parent]</InheritFrom>
                                <ReconnectRules/>
                            </Reconnect>
                            <Operations/>
                            <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                            <PoolDefinition>
                                <InheritFrom>[parent]</InheritFrom>
                            </PoolDefinition>
                            <PoolInstance>
                                <Enabled>false</Enabled>
                                <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                            </PoolInstance>
                            <InitializeOption>0</InitializeOption>
                        </Connector>
                        <Function name="callSyncDB_mod">
                            <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                            <ConnectorState>Enabled</ConnectorState>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="before_functioncall">
                                    <Name>before_functioncall</Name>
                                    <Script/>
                                    <Enabled>false</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="default_fail">
                                    <Name>default_fail</Name>
                                    <Script><![CDATA[
                                    processResult = "fail";
consoleMsg("out", "dn:" + work.getString("$dn") + " | operation:" + currentOperation + " | result:" + processResult);
]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="default_ok">
                                    <Name>default_ok</Name>
                                    <Script><![CDATA[
if(work.getString("outputResult") == "written") {
	processResult = "success";	
}
else if(work.getString("outputResult") == "duplicate") {
	processResult = "success";
}
else {
	processResult = "fail";
}

consoleMsg("out", "dn:" + work.getString("$dn") + " | operation:" + currentOperation + " | result:" + processResult);
consoleMsg("out", "waiting next...");
processResult = "fail";
work.removeAllAttributes();
]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                            </Hooks>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="$initialize.logFilename">@SUBSTITUTE{property.profiles:tds_changelog_logfile}</parameter>
                                <parameter name="$initialize.syncExisting"/>
                                <parameter name="assemblyLine">SyncDBfromSource</parameter>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                <parameter name="mode">2</parameter>
                                <parameter name="operation">modify</parameter>
                            </Configuration>
                            <SandboxConfig/>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>outputResult</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>outputResult</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>*</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>*</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                        </Function>
                        <Conditions>
                            <BranchCondition>
                                <RightHand>modify</RightHand>
                                <Negate>false</Negate>
                                <CaseSensitive>true</CaseSensitive>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>4</Type>
                    </Branch>
                    <Branch name="add">
                        <Script name="setOperationAdd">
                            <parameter name="script">currentOperation = "add";</parameter>
                        </Script>
                        <Connector name="read_add_value">
                            <InheritFrom>/Connectors/read_values_lib</InheritFrom>
                            <ConnectorMode>Lookup</ConnectorMode>
                            <ConnectorState>Enabled</ConnectorState>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="ldapBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid]]></parameter>
                                <parameter name="ldapReturnAttributes"><![CDATA[ibm-entryUuid
entryUUID
objectGUID
nsuniqueid
dominounid
GUID
*]]></parameter>
                            </Configuration>
                            <Parser>
                                <InheritFrom>[parent]</InheritFrom>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                            </Parser>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <DeltaSettings>
                                <WhenToCommit>After every database operation</WhenToCommit>
                                <Driver>CloudScape</Driver>
                            </DeltaSettings>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>$dn</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>businesscategory</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>carlicense</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>cn</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>departmentnumber</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>description</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>displayname</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>employeenumber</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>employeetype</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>givenname</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>initials</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>mail</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>manager</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>mobile</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>o</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>objectclass</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>pager</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>postalcode</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>roomnumber</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>secretary</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>sn</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>telephonenumber</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>title</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>uid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>userpassword</Name>
                                    <Syntax>[byte array]</Syntax>
                                </SchemaItem>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <LinkCriteria>
                                <InheritFrom>[parent]</InheritFrom>
                            </LinkCriteria>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                            </Hooks>
                            <CheckpointConfig/>
                            <SandboxConfig/>
                            <Reconnect>
                                <InheritFrom>[parent]</InheritFrom>
                                <ReconnectRules/>
                            </Reconnect>
                            <Operations/>
                            <PoolDefinition>
                                <InheritFrom>[parent]</InheritFrom>
                            </PoolDefinition>
                            <PoolInstance>
                                <Enabled>false</Enabled>
                                <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                            </PoolInstance>
                            <InitializeOption>0</InitializeOption>
                        </Connector>
                        <Function name="callSyncDB_add">
                            <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                            <ConnectorState>Enabled</ConnectorState>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>*</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>syncExisting</Name>
                                </SchemaItem>
                            </Schema>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="before_functioncall">
                                    <Name>before_functioncall</Name>
                                    <Script/>
                                    <Enabled>false</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="default_fail">
                                    <Name>default_fail</Name>
                                    <Script><![CDATA[
processResult = "fail";
consoleMsg("out", "dn:" + work.getString("$dn") + " | operation:" + currentOperation + " | result:" + processResult);
]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="default_ok">
                                    <Name>default_ok</Name>
                                    <Script><![CDATA[
if(work.getString("outputResult") == "written") {
	processResult = "success";	
}
else if(work.getString("outputResult") == "duplicate") {
	processResult = "success";
}
else {
	processResult = "fail";
}

consoleMsg("out", "dn:" + work.getString("$dn") + " | operation:" + currentOperation + " | result:" + processResult);
consoleMsg("out", "waiting next...");
processResult = "fail";
work.removeAllAttributes();
]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                            </Hooks>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="$initialize.logFilename">@SUBSTITUTE{property.profiles:tds_changelog_logfile}</parameter>
                                <parameter name="$initialize.syncExisting"/>
                                <parameter name="assemblyLine">SyncDBfromSource</parameter>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                <parameter name="mode">2</parameter>
                                <parameter name="operation">add</parameter>
                            </Configuration>
                            <SandboxConfig/>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>outputResult</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>outputResult</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>*</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>*</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                        </Function>
                        <Conditions>
                            <BranchCondition>
                                <RightHand>add</RightHand>
                                <Negate>false</Negate>
                                <CaseSensitive>true</CaseSensitive>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>4</Type>
                    </Branch>
                    <Branch name="delete">
                        <Script name="setOperationDelete">
                            <parameter name="script">currentOperation = "delete";</parameter>
                        </Script>
                        <Connector name="lookup_uid">
                            <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                            <ConnectorMode>Lookup</ConnectorMode>
                            <ConnectorState>Enabled</ConnectorState>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                            </Configuration>
                            <Parser>
                                <InheritFrom>[parent]</InheritFrom>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                            </Parser>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>$dn</Name>
                                    <Type>simple</Type>
                                    <Simple>distinguishedName</Simple>
                                </AttributeMapItem>
                                <AttributeMapItem>
                                    <Name>uid</Name>
                                    <Type>simple</Type>
                                    <Simple>uid</Simple>
                                </AttributeMapItem>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <DeltaSettings/>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>distinguishedName</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>email</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>guid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>key</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>sourceUrl</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>uid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>distinguishedName</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>email</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>guid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>key</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>sourceUrl</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>uid</Name>
                                    <Syntax>java.lang.String</Syntax>
                                </SchemaItem>
                            </Schema>
                            <LinkCriteria>
                                <InheritFrom>[parent]</InheritFrom>
                                <LinkCriteriaItem>
                                    <Key>119a0652be6</Key>
                                    <Attribute>distinguishedName</Attribute>
                                    <Operator>equals</Operator>
                                    <Value>$$dn</Value>
                                </LinkCriteriaItem>
                            </LinkCriteria>
                            <Hooks>
                                <Hook name="default_fail">
                                    <Name>default_fail</Name>
                                    <Script><![CDATA[
//-------------------------------------------------
// Even if we do not find the entry we just ignore
// this since it is possible the mapping of UID
// is done from the DN and we have the DN
//-------------------------------------------------
system.ignoreEntry();
]]></Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="lookup_fail">
                                    <Name>lookup_fail</Name>
                                    <Script><![CDATA[
//-------------------------------------------------
// Even if we do not find the entry we just ignore
// this since it is possible the mapping of UID
// is done from the DN and we have the DN
//-------------------------------------------------
system.ignoreEntry();
]]></Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="lookup_nomatch">
                                    <Name>lookup_nomatch</Name>
                                    <Script><![CDATA[
//-------------------------------------------------
// Even if we do not find the entry we just ignore
// this since it is possible the mapping of UID
// is done from the DN and we have the DN
//-------------------------------------------------
system.ignoreEntry();
]]></Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="lookup_ok">
                                    <Name>lookup_ok</Name>
                                    <Script><![CDATA[

if (js_trace_level.debug <= trace_javascript_level)
{
	// qqq add logmsge
	task.dumpEntry(work);
}
]]></Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                            </Hooks>
                            <CheckpointConfig/>
                            <SandboxConfig/>
                            <Reconnect>
                                <InheritFrom>[parent]</InheritFrom>
                                <ReconnectRules/>
                            </Reconnect>
                            <Operations/>
                            <PoolDefinition>
                                <InheritFrom>[parent]</InheritFrom>
                            </PoolDefinition>
                            <PoolInstance/>
                            <InitializeOption>0</InitializeOption>
                        </Connector>
                        <Function name="call_SyncDB_del">
                            <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                            <ConnectorState>Enabled</ConnectorState>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>*</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>syncExisting</Name>
                                </SchemaItem>
                            </Schema>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="default_fail">
                                    <Name>default_fail</Name>
                                    <Script><![CDATA[
processResult = "fail";
consoleMsg("out", "dn:" + work.getString("$dn") + " | operation:" + currentOperation + " | result:" + processResult);
]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="default_ok">
                                    <Name>default_ok</Name>
                                    <Script><![CDATA[
if(work.getString("outputResult") == "deleted") {
	processResult = "success";
}
else {
	processResult = "fail";
}

consoleMsg("out", "dn:" + work.getString("$dn") + " | operation:" + currentOperation + " | result:" + processResult);
consoleMsg("out", "waiting next...");
processResult = "fail";
work.removeAllAttributes();
]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                            </Hooks>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="$initialize.logFilename">@SUBSTITUTE{property.profiles:tds_changelog_logfile}</parameter>
                                <parameter name="assemblyLine">SyncDBfromSource</parameter>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                <parameter name="mode">2</parameter>
                                <parameter name="operation">delete</parameter>
                            </Configuration>
                            <SandboxConfig/>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>outputResult</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>outputResult</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>*</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>*</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                        </Function>
                        <Conditions>
                            <BranchCondition>
                                <RightHand>delete</RightHand>
                                <Negate>false</Negate>
                                <CaseSensitive>true</CaseSensitive>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>4</Type>
                    </Branch>
                    <Conditions>
                        <BranchCondition>
                            <RightHand>{work.changeType}</RightHand>
                            <Negate>false</Negate>
                            <CaseSensitive>true</CaseSensitive>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                    </Conditions>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>3</Type>
                </Branch>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="reset_draft_iterator_state">
            <ModTime>1398114851889</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // reset_draft_iterator_state</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "reset_draft_iterator_state";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="reset_state" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="reset_state">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
log1("INFO", "info_deleting_draft_iterator_key", "change_emp_draft_it");
system.deletePersistentObject("change_emp_draft_it");
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="get_draft_iterator_state">
            <ModTime>1398114851889</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // get_draft_iterator_state</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "get_draft_iterator_state";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="get_state" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="get_state">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
log1("INFO", "info_deleting_draft_iterator_key", "change_emp_draft_it");  // qqq need 'get' message (as opposed to delete
emp_draft_it = system.getPersistentObject("change_emp_draft_it");
		console1("out", "info_search_filter", emp_draft_it); // qqq another message
			task.logmsg("trace_javascript level :  " + trace_javascript_level_str);


]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>

        <AssemblyLine name="set_draft_iterator_count">
            <ModTime>1398114851999</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // set_draft_iterator_count</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "set_draft_iterator_count";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="set_state" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="set_state">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
var stateValue = main.commandLineParam("0");
if(stateValue != null) {
	try
	{
		var iVal = java.lang.Integer.parseInt(stateValue);
		if(iVal >= 0) {
			log2("INFO", "info_setting_draft_iterator_key", "change_emp_draft_it", "" + stateValue);
			system.setPersistentObject("change_emp_draft_it", stateValue);
		}
		else {
			log1("ERROR", "err_draft_iterator_value_not_valid", stateValue);
		}
	}
	catch(e)
	{
		e.printStackTrace();
	}
	
}
else {
	log1("ERROR", "err_draft_iterator_value_not_valid", stateValue);
}
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="delete_employee_records">
            <ModTime>1398114852108</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // delete_employee_records</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "delete_employee_records";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

var source_ldap_escape_dns = false;
var aProp = system.getTDIProperty("profiles", "source_ldap_escape_dns");
if((aProp != null) && (aProp == "true")) {
	source_ldap_escape_dns = true;
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="fixup_dn" state="Enabled"/>
                    <Component name="call_sync_del" state="Simulated"/>
                    <Component name="iterate-entries" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig>
                <Logger name="IDIFileRoller">
                    <parameter name="IDIFileRoller.Encoding">UTF-8</parameter>
                    <parameter name="IDIFileRoller.File">logs/DeleteEmployeeRecords.log</parameter>
                    <parameter name="IDIFileRoller.RollCount">5</parameter>
                    <parameter name="Pattern.ConversionPattern">%d{ISO8601} %-5p [%c] - %m%n</parameter>
                    <parameter name="com.ibm.di.log.appender">IDIFileRoller</parameter>
                    <parameter name="com.ibm.di.log.layout">Pattern</parameter>
                    <parameter name="com.ibm.di.log.level">INFO</parameter>
                    <parameter name="enabled">true</parameter>
                </Logger>
            </LogConfig>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="iterate-entries">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:delete_or_inactivate_employees_simple_file}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="attributeName">line</parameter>
                        <parameter name="characterSet">@SUBSTITUTE{javascript ret.value = lcConf.file_encoding;}</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>$dn</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>uid</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>uid</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
log4("INFO", "info_iteration_result", "" + successCounter, "0","" + failCounter, "" + lastSuccessfulDN);

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "delete_employee_records" + ", hook: after_close, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

console4("out", "info_iteration_result", "" + successCounter, "0","" + failCounter, "" + lastSuccessfulDN);
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[
itCounter = itCounter + 1;
if((itCounter % 1000) == 0) {
	console2("out", "disp_iteration_count", "" + new Date(), "" + itCounter);
}

if (js_trace_level.debug <= trace_javascript_level)
{
	// After GetNext
	task.dumpEntry(conn);
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[
var itCounter = 0;
var successCounter = 0;
var failCounter = 0;
var lastSuccessfulDN = null;
var retCode = 0;
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_selectEntries">
                            <Name>before_selectEntries</Name>
                            <Script><![CDATA[
	// before selection
	check_for_BOM_at_BOF_and_skip_it( "delete_or_inactivate_employees_simple_file");

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script><![CDATA[
msgText = log2("ERROR", "err_iteration_failure", lastSuccessfulDN, error.getString("message"));
++failCounter;
retCode = 1;
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="fixup_dn">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
var dnVal = work.getString("$dn");
if(dnVal != null) {
	dnVal = dnVal.trim();
	if(dnVal != "") {
		if((source_ldap_escape_dns != null) && source_ldap_escape_dns) {
			var newDn = escape_dn(dnVal);
			if(newDn != dnVal) {
				if (js_trace_level.debug <= trace_javascript_level)
					task.logmsg("+++new dnVal is " + newDn);
				work.setAttribute("$dn", newDn);
			}
		}
	}
	else {
		++failCounter;
		system.skipEntry();
	}
}
else {
	++failCounter;
	system.skipEntry();
}
var uidVal = work.getString("uid");
if(uidVal != null) {
	uidVal = uidVal.trim();
	if(uidVal != "") {
		work.setAttribute("uid", uidVal);
	}
	else {
		++failCounter;
		system.skipEntry();
	}
}

if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("$dn is " + work.getString("$dn"));
	task.logmsg("uid is " + work.getString("uid"));
}]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Function name="call_sync_del">
                    <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                    <ConnectorState>Enabled</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>*</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>syncExisting</Name>
                        </SchemaItem>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
++failCounter;
work.removeAllAttributes();
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
if(work.getString("outputResult") == "deleted") {
	++successCounter;
	lastSuccessfulDN = work.getString("$dn");
}
else {
	++failCounter;
}
work.removeAllAttributes();
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="$initialize.logFilename">logs/DeleteEmployeeRecords.log</parameter>
                        <parameter name="assemblyLine">SyncDBfromSource</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="mode">2</parameter>
                        <parameter name="operation">delete</parameter>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>outputResult</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>outputResult</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                </Function>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="fixup_tdi_adapters">
            <ModTime>1398114852217</ModTime>
            <Settings/>
            <Hooks>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script>load_lcConf();</Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="DoFixupCommand" state="Enabled"/>
                    <Component name="RunDataFlowOnce" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="RunDataFlowOnce">
                    <InheritFrom>system:/Connectors/ibmdi.ScriptConnector</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">false</parameter>
                        <parameter name="includeFiles"/>
                        <parameter name="script"><![CDATA[
// Sample connector
// Place initialization code before function declarations
//
var counter = 0;

function selectEntries()
{
}

function getNextEntry ()
{
	if (counter > 0) {
		result.setStatus (0);
		result.setMessage ("End of input");
		return;
	}

	entry.setAttribute ("counter", counter);
	counter++;
}

function putEntry ()
{
}

function modEntry ()
{
}

function deleteEntry ()
{
}

function findEntry ()
{
}

function querySchema ()
{
	var e = new com.ibm.di.entry.Entry();
	e.addAttributeValue("name","counter");
	e.addAttributeValue("syntax","Number");
	list.add(e);
	result.setStatus (1);
}
]]></parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>counter</Name>
                            <Syntax>java.lang.Double</Syntax>
                            <NativeSyntax>Number</NativeSyntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>counter</Name>
                            <Syntax>java.lang.Double</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "lookup_employees" + ", hook: after_close, retcode: 0"  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(0, outFileName);
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Script name="DoFixupCommand">
                    <parameter name="script"><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) {
	logmsg("INFO", "START: Fixup TDI adapters");
}

com.ibm.lconn.profiles.api.tdi.util.CorrectAdapterFiles.correctAdapters();
if (js_trace_level.debug <= trace_javascript_level){
	logmsg("INFO", "END: Fixup TDI adapters");
}
]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="lookup_employees">
            <ModTime>1398114852326</ModTime>
            <Settings/>
            <Hooks/>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates/>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer"/>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>
        <AssemblyLine name="reset_changelog_state">
            <ModTime>1398114852435</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // reset_changelog_state</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "reset_changelog_state";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="reset_state" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="reset_state">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
log1("INFO", "info_deleting_changelog_state_key", "changelog_state_key");
system.deletePersistentObject("changelog_state_key");
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="set_changelog_count">
            <ModTime>1398114852794</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // set_changelog_count</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "set_changelog_count";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="set_state" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Connector name="set_state">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
var stateValue = main.commandLineParam("0");
if(stateValue != null) {
	try
	{
		var iVal = java.lang.Integer.parseInt(stateValue);
		if(iVal >= 0) {
			log2("INFO", "info_setting_changelog_state_key", "changelog_state_key", "" + stateValue);
			system.setPersistentObject("changelog_state_key", stateValue);
		}
		else {
			log1("ERROR", "err_changelog_state_value_not_valid", stateValue);
		}
	}
	catch(e)
	{
		log1("ERROR", "err_changelog_state_value_not_valid", stateValue);
	}
	
}
else {
	log1("ERROR", "err_changelog_state_value_not_valid", stateValue);
}
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="sync_all_dns">
            <ModTime>1398114852950</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script><![CDATA[
consoleMsg("err", error.message);
consoleMsg("err", error.exception);
task.shutdown();
system.abortAssemblyLine(error.getString("message"));
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // sync_all_dns</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "sync_all_dns";
check_40_Properties_in_profiles();

load_lcConf();

var sync_updates_hash_field_lower = "null";  // bogus value
if (lcConf.sync_updates_hash_field != null)
	sync_updates_hash_field_lower = lcConf.sync_updates_hash_field.toLowerCase();
if (!((sync_updates_hash_field_lower == "uid") || (sync_updates_hash_field_lower == "guid") || (sync_updates_hash_field_lower == "email")))
{
	var msgText = log1("ERROR", "err_invalid_sync_hash_field", sync_updates_hash_field_lower);
	consoleMsg("out", "ERROR: " + msgText);
	system.abortAssemblyLine(msgText);
}

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

//system.setTDIProperty("profiles", "test_name", "Disabled");
//test = system.getTDIProperty("test_name");
//	task.logmsg("test_name: " + test + " : qqqqqqqqqqqqqqqqR");


//----------------------------------------------------------------------------------------------
// Set whether to skip hash_db_entries component
//
// if 'partitionCount' is 0 this means we are in standard mode, i.e., single JVM, and thus
//  this component is enabled.  If not 0, then we are in multiple JVM mode. 

partitionCount = system.getTDIProperty("profilesPartitions", "sync_updates_hash_partitions_if_large_model");
partitionCountInt = parseInt( partitionCount);

if (partitionCountInt == 0)
	system.setTDIProperty("profiles", "hash_db_entries_state", "Enabled");
else
{
	// need to know stage to decide
	stage = system.getTDIProperty("profilesPartitions", "sync_updates_stage");
	if (stage == "hashdb")
		system.setTDIProperty("profiles", "hash_db_entries_state", "Enabled");
	else
		// stage is update
		system.setTDIProperty("profiles", "hash_db_entries_state", "Disabled");
}
//----------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------
// Set whether to skip hash_source_entries component
//
// if 'partitionCount' is 0 this means we are in standard mode, i.e., single JVM, and thus
//  this component is enabled.  If not 0, then we are in multiple JVM mode. 

partitionCount = system.getTDIProperty("profilesPartitions", "sync_updates_hash_partitions_if_large_model");
partitionCountInt = parseInt( partitionCount);

if (partitionCountInt == 0)
	system.setTDIProperty("profiles", "hash_source_entries_state", "Enabled");
else
{
	// need to know stage to decide
	stage = system.getTDIProperty("profilesPartitions", "sync_updates_stage");
	if (stage == "hashsrc")
		system.setTDIProperty("profiles", "hash_source_entries_state", "Enabled");
	else
		// stage is update
		system.setTDIProperty("profiles", "hash_source_entries_state", "Disabled");
}
//----------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------
// Set whether to skip sync_all_dns_main component
//
// if 'partitionCount' is 0 this means we are in standard mode, i.e., single JVM, and thus
//  this component is enabled.  If not 0, then we are in multiple JVM mode. 

var partitionCount = system.getTDIProperty("profilesPartitions", "sync_updates_hash_partitions_if_large_model");
var partitionCountInt = parseInt( partitionCount);

if (partitionCountInt == 0)
	system.setTDIProperty("profiles", "sync_all_dns_main_state", "Enabled");
else
{
	// need to know stage to decide
	var stage = system.getTDIProperty("profilesPartitions", "sync_updates_stage");
	if (stage == "update")
		system.setTDIProperty("profiles", "sync_all_dns_main_state", "Enabled");
	else
		// stage is hash
		system.setTDIProperty("profiles", "sync_all_dns_main_state", "Disabled");
}
//----------------------------------------------------------------------------------------------


//----------------------------------------------------------------------------------------------
// Set whether to skip sync_all_dns_process_delete component
//
// if 'partitionCount' is 0 this means we are in standard mode, i.e., single JVM, and thus
// this component is enabled.  If not 0, then we are in multiple JVM mode. 

var partitionCount = system.getTDIProperty("profilesPartitions", "sync_updates_hash_partitions_if_large_model");
var partitionCountInt = parseInt( partitionCount);

if (partitionCountInt == 0)
	system.setTDIProperty("profiles", "sync_all_dns_process_delete_state", "Enabled");
else
{
	// need to know stage to decide
	var stage = system.getTDIProperty("profilesPartitions", "sync_updates_stage");
	if (stage == "update")
		system.setTDIProperty("profiles", "sync_all_dns_process_delete_state", "Enabled");
	else
		// stage is hash
		system.setTDIProperty("profiles", "sync_all_dns_process_delete_state", "Disabled");
}
//----------------------------------------------------------------------------------------------

//----------------------------------------------------------------------------------------------
// Set whether to skip sync_all_dns_process_add component

 // if 'partitionCount' is 0 this means we are in standard mode, i.e., single JVM, and thus
//  this component is enabled.  If not 0, then we are in multiple JVM mode. 

var partitionCount = system.getTDIProperty("profilesPartitions", "sync_updates_hash_partitions_if_large_model");
var partitionCountInt = parseInt( partitionCount);

if (partitionCountInt == 0)
	system.setTDIProperty("profiles", "sync_all_dns_process_add_state", "Enabled");
else
{
	// need to know stage to decide
	var stage = system.getTDIProperty("profilesPartitions", "sync_updates_stage");
	if (stage == "update")
		system.setTDIProperty("profiles", "sync_all_dns_process_add_state", "Enabled");
	else
		// stage is hash
		system.setTDIProperty("profiles", "sync_all_dns_process_add_state", "Disabled");
}
//----------------------------------------------------------------------------------------------

]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="cleanup_old_temp_files" state="Enabled"/>
                    <Component name="initCounters" state="Enabled"/>
                    <Component name="hash_db_entries" state="Simulated"/>
                    <Component name="hash_source_entries" state="Simulated"/>
                    <Component name="sync_all_dns_main" state="Simulated"/>
                    <Component name="sync_all_dns_process_delete" state="Simulated"/>
                    <Component name="sync_all_dns_process_add" state="Simulated"/>
                    <Component name="reportCounter" state="Enabled"/>
                    <Component name="clean_temp_files" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig>
                <Logger name="DailyRollingFileAppender">
                    <InheritFrom>system:/Loggers/ibmdi.DailyRollingFileAppender</InheritFrom>
                    <parameter name="DailyRollingFile.Append">true</parameter>
                    <parameter name="DailyRollingFile.DatePattern">'.'yyyy-MM-dd</parameter>
                    <parameter name="DailyRollingFile.File">logs/SyncUpdates.log</parameter>
                    <parameter name="Pattern.ConversionPattern">%d{ISO8601} %-5p [%c] - %m%n</parameter>
                    <parameter name="com.ibm.di.log.layout">Pattern</parameter>
                    <parameter name="com.ibm.di.log.level">INFO</parameter>
                    <parameter name="enabled">true</parameter>
                </Logger>
            </LogConfig>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="cleanup_old_temp_files">
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[
// if 'partitionCount' is 0 this means we are in standard model, i.e., single JVM, so erase the hash 
// partition files (as usual).  If in multiple JVM mode (large mode), the script handles this

partitionCount = system.getTDIProperty("profilesPartitions", "sync_updates_hash_partitions_if_large_model");
partitionCountInt = parseInt( partitionCount);

if (partitionCountInt == 0)
{
	var workDir = system.getTDIProperty("profiles", "sync_updates_working_directory");

	if (workDir != null && workDir != "") 
	{
		var aFD = java.io.File(workDir);
		if (aFD.exists() && aFD.isDirectory()) {
			var afiles = aFD.listFiles();
			var afile;
			for (afile in afiles) {
				if (afile.getName().indexOf(".dbids") != -1 || afile.getName().indexOf(".ldiff") != -1)
				{
					afile["delete"]();
				}
			}
		}
	}
}
]]></parameter>
                </Script>
                <Script name="initCounters">
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[
var successCounter = "successCounter";
var failCounter = "failCounter";
var deleteCounter = "deleteCounter";
var duplicateCounter = "duplicateCounter";

//clear counter result
clearCounter(successCounter);
clearCounter(deleteCounter);
clearCounter(duplicateCounter);
clearCounter(failCounter);


//re-create counter
createCounter(successCounter);
createCounter(failCounter);
createCounter(deleteCounter);
createCounter(duplicateCounter);
]]></parameter>
                </Script>
                <Function name="hash_db_entries">
                    <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                    <ConnectorState>@SUBSTITUTE{property.profiles:hash_db_entries_state}</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_KEY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_SOURCE_URL</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_UID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hash_column</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sys_usrState</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_KEY</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_SOURCE_URL</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_UID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hash_column</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sys_usrState</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                        </SchemaItem>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="functioncall_fail">
                            <Name>functioncall_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="no_reply">
                            <Name>no_reply</Name>
                            <Script><![CDATA[
// Ok - allow no entry response
work.setAttribute("_hash_status","ok");
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="assemblyLine">sync_all_dns_hash_db</parameter>
                        <parameter name="customSecurity">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="mode">0</parameter>
                        <parameter name="server"/>
                        <parameter name="useTCBAttributes">false</parameter>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>
                <Function name="hash_source_entries">
                    <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                    <ConnectorState>@SUBSTITUTE{property.profiles:hash_source_entries_state}</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>*</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACL</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DirXML-Associations</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GUID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Language</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Obituary</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Profile</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Reference</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Timezone</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>accessCardNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>accountBalance</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>accumulatorConnector</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>additional</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>allowUnlimitedCredit</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatenode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateuserid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>assistant</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>assistantPhone</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>audio</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>auditFileLink</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>authorityRevocation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>auxClassCompatibility</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backLink</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backup</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backupcountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backupserialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>binderyProperty</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>buildingName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>businessCategory</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>c</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cAPrivateKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cAPublicKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>callupName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>carLicense</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>certificateRevocation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>certificateValidityInterval</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>city</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>co</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>company</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>coreDataIntegrity</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>costCenter</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>costCenterDescription</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>creatorsName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>departmentNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dept</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>description</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>destinationIndicator</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>directReports</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>directoryalias</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>displayName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>div</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>divDept</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>emailaddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeStatus</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeecountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeetype</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>entrytype</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>equivalentToMe</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTelephoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTieLine</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>floor</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>fullName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>generationQualifier</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>givenName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>groupMembership</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>higherPrivileges</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>homePhone</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>homePostalAddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrActive</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrCompanyCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrCountryCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrDepartment</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrDivision</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrEmployeeType</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrFamilyName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrFirstName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrInitial</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrLastName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerIndicator</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerPSC</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerSerial</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrMiddleName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrOrganizationCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrPSC</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrPreferredName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrSerialNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibm-entryUuid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibmLoc</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibmserialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>infotelephonenumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>initials</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>instantMessagingID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>internalmaildrop</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>internationaliSDNNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ipTelephoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ismanager</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jackNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jobCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jobresponsibilities</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jpegPhoto</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>l</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>labeledUri</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lastLoginTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lastReferencedTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ldapPhoto</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lockedByIntruder</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginActivationTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginAllowedTimeMap</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginDisabled</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginExpirationTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginGraceLimit</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginGraceRemaining</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginIntruderAddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginIntruderAttempts</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginIntruderResetTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginMaximumSimultaneous</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginScript</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mail</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mailboxID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mailboxLocation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mailstop</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>manager</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managerSerialNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managerWorkforceID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managercountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>masvAuthorizedRange</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>masvDefaultRange</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>masvProposedLabel</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>messageServer</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>minimumAccountBalance</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mobile</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>modifiersName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nDSPKIKeystore</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nDSPKIUserCertificateInfo</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ndapPasswordMgmt</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ndsCrossCertificatePair</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ndsHomeDirectory</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>networkAddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>networkAddressRestriction</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesDN</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesemail</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmaildomain</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmailfile</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmailserver</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesshortname</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nspmAdministratorChangeCount</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nspmDistributionPassword</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nspmPassword</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nspmPasswordHistory</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nspmPasswordKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nspmPasswordPolicyDN</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>o</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectVersion</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectclass</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>odmEntry</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>otherGUID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>otherPhoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ou</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pager</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordAllowChange</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordExpirationInterval</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordExpirationTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsExpired</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsResetByAdmin</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsStruckOut</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordMinimumLength</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordRequired</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordUniqueRequired</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordisreset</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordmodifytimestamp</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordsUsed</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pdif</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>personalTitle</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>photo</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>physicalDeliveryOfficeName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>postOfficeBox</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>postalAddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>postalCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredDeliveryMethod</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredIdentity</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredLanguage</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>primarynode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>primaryuserid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>printJobConfiguration</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>printerControl</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>privateKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>profileMembership</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>publicKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSActiveConnections</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSAttributeLists</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSConcurrentLimit</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSConnectionHistory</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSDefaultProfile</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSDialAccessGroup</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSEnableDialAccess</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSPassword</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSServiceList</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rBSAssignedRoles</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rBSOwnedRoles</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rbsAssignedRoles2</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rbsOwnedCollections</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rbsOwnedCollections2</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>registeredAddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>revision</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>roomNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASEncryptionType</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASLoginConfiguration</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASLoginConfigurationKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASLoginSecret</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASLoginSecretKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASNDSPasswordWindow</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASPKIStoreKeys</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASSecretStore</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASSecretStoreData</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASSecretStoreKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASServiceDN</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sasAllowableSubjectNames</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sasAuthorizedLoginSequences</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sasDefaultLoginSequence</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretary</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretarycountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretaryserialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>securityEquals</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>securityFlags</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>seeAlso</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>serialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>serverHolds</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>shift</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>siteLocation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>st</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>street</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telephonenumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>teletexTerminalIdentifier</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telexNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>tieline</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampBpgui</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampFeed</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>title</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>tollFreePhoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>typeCreatorMap</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>unknownAuxiliaryClass</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>unknownBaseClass</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usedBy</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userPKCS12</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userPassword</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userSMIMECertificate</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usercertificate</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>vehicleInformation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLoc</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLocation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workforceID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workplaceIndicator</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>x121Address</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>x500UniqueIdentifier</Name>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>*</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ACL</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>DirXML-Associations</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>GUID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Language</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Obituary</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Profile</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Reference</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>Timezone</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>accessCardNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>accountBalance</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>accumulatorConnector</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>additional</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>allowUnlimitedCredit</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatenode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateuserid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>assistant</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>assistantPhone</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>audio</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>auditFileLink</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>authorityRevocation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>auxClassCompatibility</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backLink</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backup</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backupcountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backupserialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>binderyProperty</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>buildingName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>businessCategory</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>c</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cAPrivateKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cAPublicKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>callupName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>carLicense</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>certificateRevocation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>certificateValidityInterval</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>city</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>co</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>company</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>coreDataIntegrity</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>costCenter</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>costCenterDescription</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>creatorsName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>departmentNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dept</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>description</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>destinationIndicator</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>directReports</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>directoryalias</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>displayName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>div</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>divDept</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>emailaddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeStatus</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeecountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeetype</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>entrytype</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>equivalentToMe</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTelephoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTieLine</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>floor</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>fullName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>generationQualifier</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>givenName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>groupMembership</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>higherPrivileges</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>homePhone</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>homePostalAddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrActive</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrCompanyCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrCountryCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrDepartment</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrDivision</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrEmployeeType</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrFamilyName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrFirstName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrInitial</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrLastName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerIndicator</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerPSC</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerSerial</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrMiddleName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrOrganizationCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrPSC</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrPreferredName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrSerialNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibm-entryUuid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibmLoc</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibmserialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>infotelephonenumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>initials</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>instantMessagingID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>internalmaildrop</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>internationaliSDNNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ipTelephoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ismanager</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jackNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jobCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jobresponsibilities</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jpegPhoto</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>l</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>labeledUri</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lastLoginTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lastReferencedTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ldapPhoto</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lockedByIntruder</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginActivationTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginAllowedTimeMap</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginDisabled</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginExpirationTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginGraceLimit</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginGraceRemaining</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginIntruderAddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginIntruderAttempts</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginIntruderResetTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginMaximumSimultaneous</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginScript</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>loginTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mail</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mailboxID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mailboxLocation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mailstop</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>manager</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managerSerialNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managerWorkforceID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managercountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>masvAuthorizedRange</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>masvDefaultRange</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>masvProposedLabel</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>messageServer</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>minimumAccountBalance</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mobile</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>modifiersName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nDSPKIKeystore</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nDSPKIUserCertificateInfo</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ndapPasswordMgmt</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ndsCrossCertificatePair</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ndsHomeDirectory</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>networkAddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>networkAddressRestriction</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesDN</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesemail</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmaildomain</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmailfile</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmailserver</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesshortname</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nspmAdministratorChangeCount</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nspmDistributionPassword</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nspmPassword</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nspmPasswordHistory</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nspmPasswordKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>nspmPasswordPolicyDN</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>o</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectVersion</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectclass</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>odmEntry</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>otherGUID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>otherPhoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ou</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pager</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordAllowChange</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordExpirationInterval</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordExpirationTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsExpired</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsResetByAdmin</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsStruckOut</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordMinimumLength</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordRequired</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordUniqueRequired</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordisreset</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordmodifytimestamp</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordsUsed</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pdif</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>personalTitle</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>photo</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>physicalDeliveryOfficeName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>postOfficeBox</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>postalAddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>postalCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredDeliveryMethod</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredIdentity</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredLanguage</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>primarynode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>primaryuserid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>printJobConfiguration</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>printerControl</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>privateKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>profileMembership</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>publicKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSActiveConnections</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSAttributeLists</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSConcurrentLimit</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSConnectionHistory</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSDefaultProfile</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSDialAccessGroup</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSEnableDialAccess</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSPassword</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rADIUSServiceList</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rBSAssignedRoles</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rBSOwnedRoles</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rbsAssignedRoles2</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rbsOwnedCollections</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>rbsOwnedCollections2</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>registeredAddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>revision</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>roomNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASEncryptionType</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASLoginConfiguration</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASLoginConfigurationKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASLoginSecret</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASLoginSecretKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASNDSPasswordWindow</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASPKIStoreKeys</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASSecretStore</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASSecretStoreData</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASSecretStoreKey</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sASServiceDN</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sasAllowableSubjectNames</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sasAuthorizedLoginSequences</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sasDefaultLoginSequence</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretary</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretarycountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretaryserialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>securityEquals</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>securityFlags</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>seeAlso</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>serialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>serverHolds</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>shift</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>siteLocation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>source_url</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>st</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>street</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telephonenumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>teletexTerminalIdentifier</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telexNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>tieline</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampBpgui</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampFeed</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>title</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>tollFreePhoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>typeCreatorMap</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>unknownAuxiliaryClass</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>unknownBaseClass</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usedBy</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userPKCS12</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userPassword</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userSMIMECertificate</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usercertificate</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>vehicleInformation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLoc</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLocation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workforceID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workplaceIndicator</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>x121Address</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>x500UniqueIdentifier</Name>
                        </SchemaItem>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="functioncall_fail">
                            <Name>functioncall_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="assemblyLine">sync_all_dns_hash_source</parameter>
                        <parameter name="customSecurity">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="mode">0</parameter>
                        <parameter name="server"/>
                        <parameter name="useTCBAttributes">false</parameter>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>
                <Function name="sync_all_dns_main">
                    <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                    <ConnectorState>@SUBSTITUTE{property.profiles:sync_all_dns_main_state}</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>PROF_VALUE</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_db_id_map</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_foundChanges</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_inDB</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_key_map</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_page_num</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_uid_map</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>outputResult</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>retCode</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>*</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_db_id_map</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_key_map</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_page_num</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_uid_map</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>retCode</Name>
                        </SchemaItem>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="functioncall_fail">
                            <Name>functioncall_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="assemblyLine">sync_all_dns_main</parameter>
                        <parameter name="customSecurity">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="mode">0</parameter>
                        <parameter name="server"/>
                        <parameter name="useTCBAttributes">true</parameter>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>
                <Function name="sync_all_dns_process_delete">
                    <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
				    <ConnectorState>@SUBSTITUTE{property.profiles:sync_all_dns_process_delete_state}</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_VALUE</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_db_id_map</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_foundChanges</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_inDB</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_page_num</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>additional</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateAddress1</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatelocalityname</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatenode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatepostalcode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatest</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateuserid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backup</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backupcountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backupserialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>buildingName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>c</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>callupName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>checkResult</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>co</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>coreDataIntegrity</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dept</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>directoryalias</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>div</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>divDept</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>emailaddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeecountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeetype</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>entrytype</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTelephoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTieLine</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>floor</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>givenName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hash_column</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrActive</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrCompanyCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrCountryCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrDepartment</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrDivision</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrEmployeeType</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrFamilyName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrFirstName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrInitial</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrLastName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerIndicator</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerPSC</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerSerial</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrMiddleName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrOrganizationCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrPSC</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrPreferredName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrSerialNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibm-entryUuid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibmLoc</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibmserialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>infotelephonenumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>internalmaildrop</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ipTelephoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ismanager</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jobresponsibilities</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mail</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>manager</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managerSerialNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managercountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesemail</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmaildomain</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmailfile</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmailserver</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesshortname</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>o</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectclass</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>odmEntry</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ou</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>outputResult</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsExpired</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsResetByAdmin</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsStruckOut</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordisreset</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordmodifytimestamp</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pdif</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>performDeleteOrInactivateForSync</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>performDeletionForSync</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>personaltitle</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>physicalDeliveryOfficeName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredIdentity</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredLastName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredfirstname</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>primarynode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>primaryuserid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>retCode</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretary</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretarycountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretaryserialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>serialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>shift</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>syncUpdatesShowOnly</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sync_updates_double_check</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telephoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>tieline</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampBpgui</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampFeed</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usercertificate</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLoc</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLocation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workplaceIndicator</Name>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>*</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_db_id_map</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_page_num</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>checkResult</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hash_column</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>performDeleteOrInactivateForSync</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>performDeletionForSync</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>retCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>syncUpdatesShowOnly</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sync_updates_double_check</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                        </SchemaItem>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="functioncall_fail">
                            <Name>functioncall_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="no_reply">
                            <Name>no_reply</Name>
                            <Script><![CDATA[// Indicates that there were no users to process
work.setAttribute("_process_delete_status","ok");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="assemblyLine">sync_all_dns_process_delete</parameter>
                        <parameter name="customSecurity">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="mode">0</parameter>
                        <parameter name="server"/>
                        <parameter name="useTCBAttributes">true</parameter>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>
                <Function name="sync_all_dns_process_add">
                    <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
				    <ConnectorState>@SUBSTITUTE{property.profiles:sync_all_dns_process_add_state}</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>$manager_uid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>$secretary_uid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_VALUE</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_db_id_map</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_foundChanges</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_inDB</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_lookup_manager_field</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_lookup_secretary_field</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_page_num</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>additional</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateAddress1</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatelocalityname</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatenode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatepostalcode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternatest</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>alternateuserid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backup</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backupcountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>backupserialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>buildingName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>c</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>callupName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>carLicense</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>checkResult</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>co</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>coreDataIntegrity</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dept</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>description</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>directoryalias</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>displayname</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>div</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>divDept</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>emailaddress</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeecountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeetype</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>entrytype</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTelephoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTieLine</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>floor</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>givenName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrActive</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrCompanyCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrCountryCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrDepartment</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrDivision</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrEmployeeType</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrFamilyName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrFirstName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrInitial</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrLastName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerIndicator</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerPSC</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrManagerSerial</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrMiddleName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrOrganizationCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrPSC</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrPreferredName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hrSerialNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibm-entryUuid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibmLoc</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibmserialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>infotelephonenumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>initials</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>internalmaildrop</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ipTelephoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ismanager</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>jobresponsibilities</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>l</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mail</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>manager</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managerSerialNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>managercountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesemail</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmaildomain</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmailfile</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesmailserver</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>notesshortname</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>o</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectclass</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>odmEntry</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ou</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>outputResult</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsExpired</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsResetByAdmin</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordIsStruckOut</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordisreset</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>passwordmodifytimestamp</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pdif</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>performDeletionForSync</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>personaltitle</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>physicalDeliveryOfficeName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredIdentity</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredLastName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>preferredfirstname</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>primarynode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>primaryuserid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>retCode</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretary</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretarycountrycode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>secretaryserialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>serialnumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>shift</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>syncUpdatesShowOnly</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telephoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>tieline</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampBpgui</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>timestampFeed</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usercertificate</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userpassword</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLoc</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workLocation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>workplaceIndicator</Name>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>*</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_db_id_map</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_lookup_manager_field</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_lookup_secretary_field</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_page_num</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>c</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>carLicense</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>checkResult</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>description</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>displayname</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeType</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTelephoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>givenName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibm-entryUuid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>initials</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>l</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mail</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>manager</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectclass</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ou</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>performDeletionForSync</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>retCode</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>syncUpdatesShowOnly</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telephoneNumber</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userpassword</Name>
                        </SchemaItem>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_functioncall">
                            <Name>after_functioncall</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_functioncall">
                            <Name>before_functioncall</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="functioncall_fail">
                            <Name>functioncall_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="no_reply">
                            <Name>no_reply</Name>
                            <Script><![CDATA[
// Indicates that there were no users to process
work.setAttribute("_process_add_status","ok");]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="assemblyLine">sync_all_dns_process_add</parameter>
                        <parameter name="customSecurity">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="mode">0</parameter>
                        <parameter name="server"/>
                        <parameter name="useTCBAttributes">true</parameter>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>
                <Script name="reportCounter">
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[
	var doIt;
	var stage;

	var partitionCount = system.getTDIProperty("profilesPartitions", "sync_updates_hash_partitions_if_large_model");
	var partitionCountInt = parseInt( partitionCount);

	if (partitionCountInt == 0)
		doIt = true;
	else
	{
		// need to know stage to decide
		stage = system.getTDIProperty("profilesPartitions", "sync_updates_stage");
		if (stage == "update")
			doIt = true;
		else
			// stage is hash
			doIt = false;
	}

	if (doIt)
	{
		//report counter result
		load_message_bundle();

		log4("INFO", "info_sync_result", "" + getCounterState(successCounter), "" + getCounterState(deleteCounter), "" + getCounterState(duplicateCounter),"" + getCounterState(failCounter));
		console4("out", "info_sync_result", "" + getCounterState(successCounter), "" + getCounterState(deleteCounter), "" + getCounterState(duplicateCounter),"" + getCounterState(failCounter));



var outFileName2 = "_tdisuccesscount.rc";
write_return_code(getCounterState(successCounter), outFileName2);

var outFileName3 = "_tdideletecount.rc";
write_return_code(getCounterState(deleteCounter), outFileName3);

var outFileName4 = "_tdiduplicatecount.rc";
write_return_code(getCounterState(duplicateCounter), outFileName4);

var outFileName5 = "_tdifailcount.rc";
write_return_code(getCounterState(failCounter), outFileName5);

		//clear counter result
		clearCounter(successCounter);
		clearCounter(deleteCounter);
		clearCounter(duplicateCounter);
		clearCounter(failCounter);
	}

]]></parameter>
                </Script>
                <Connector name="clean_temp_files">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[

	var doIt;
	var stage;

	var partitionCount = system.getTDIProperty("profilesPartitions", "sync_updates_hash_partitions_if_large_model");
	var partitionCountInt = parseInt( partitionCount);

	if (partitionCountInt == 0)
		doIt = true;
	else
	{
		// need to know stage to decide
		stage = system.getTDIProperty("profilesPartitions", "sync_updates_stage");
		if (stage == "update")
			doIt = true;
		else
			// stage is hash
			doIt = false;
	}

	if (doIt)
	{
		var doCleanup = system.getTDIProperty("profiles", "sync_updates_clean_temp_files");
		var workDir = system.getTDIProperty("profiles", "sync_updates_working_directory");

		if ("true" == doCleanup && workDir != null && workDir != "") 
		{
			var aFD = java.io.File(workDir);
			if (aFD.exists() && aFD.isDirectory()) {
				var afiles = aFD.listFiles();
				var afile;
				for (afile in afiles) {
					if (afile.getName().indexOf(".dbids") != -1 || afile.getName().indexOf(".ldiff") != -1)
					{
						afile["delete"]();
					}
				}
			}
		}
	}
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="sync_all_dns_check_if_remove">
            <ModTime>1398114853075</ModTime>
            <Settings/>
            <Hooks>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script>throw error.getObject( "exception" );</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
load_lcConf(true);

var checkingResult;]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="checkIfRemove" state="Enabled"/>
                    <Component name="check_ldap_entry" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="checkIfRemove">
                    <parameter name="script"><![CDATA[
//-------------------------------------------------
// Do a lookup on the DN to make absolutely sure
// the entry does not exist and it is not a case 
// where our ranges from DB vs LDAP do not match
// for some other reason
//-------------------------------------------------

var log_check_if_remove_prevents_delete = lcConf.log_check_if_remove_prevents_delete;
//task.logmsg("++++ CheckIfRemove: log_check_if_remove_prevents_delete: " + log_check_if_remove_prevents_delete); 

checkingResult = work.getAttribute("checkResult");
resultTemp = "updated";

var searchCriteria = com.ibm.di.server.SearchCriteria("$dn", com.ibm.di.server.SearchCriteria.EXACT, work.getAttribute("$dn").getValue(0));
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("++++ CheckIfRemove: work.getAttribute( $dn ).getValue(0): " + work.getAttribute("$dn").getValue(0));
	task.logmsg("++++ CheckIfRemove: searchCriteria LDAPFilter is: " + searchCriteria.getLDAPFilter());
}
var ckEntry = check_ldap_entry.connector.findEntry(searchCriteria);
if (js_trace_level.debug <= trace_javascript_level)
{
	if (js_trace_level.finer == trace_javascript_level)
		task.logmsg("++++ CheckIfRemove: ckEntry is: " + ckEntry);
	task.logmsg("++++ CheckIfRemove: (ckEntry == null) is: " + (ckEntry == null) + ", getFindEntryCount is: " + check_ldap_entry.connector.getFindEntryCount());
}
if((ckEntry == null) && (check_ldap_entry.connector.getFindEntryCount() == 0)) 
{
	resultTemp = "remove";

	if ((log_check_if_remove_prevents_delete) && (js_trace_level.info == trace_javascript_level))
	{
		task.logmsg("++++ Check If Remove: result is: " + resultTemp + " : (i.e., deleted) for: " + searchCriteria.getLDAPFilter());
	}
}
else
{
	if ((log_check_if_remove_prevents_delete) || (js_trace_level.debug <= trace_javascript_level))
	{
		task.logmsg("++++ Check If Remove: result is: " + resultTemp + " : (i.e., NOT deleted) for: " + searchCriteria.getLDAPFilter());
	}

}

checkingResult.setValue("" + resultTemp);
]]></parameter>
                </Script>
                <Connector name="check_ldap_entry">
                    <InheritFrom>/Connectors/FetchLDAPDataWithFilter</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="automapADPassword">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="ldapAddAttr">false</parameter>
                        <parameter name="ldapAuthenticationMethod">Simple</parameter>
                        <parameter name="ldapBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid]]></parameter>
                        <parameter name="ldapPageSize">0</parameter>
                        <parameter name="ldapPassword">@SUBSTITUTE{property.profiles:source_ldap_user_password}</parameter>
                        <parameter name="ldapReferrals">follow</parameter>
                        <parameter name="ldapReturnAttributes"><![CDATA[ibm-entryUuid
entryUUID
objectGUID
nsuniqueid
dominounid
GUID
*]]></parameter>
                        <parameter name="ldapSearchBase">@SUBSTITUTE{property.profiles:source_ldap_search_base}</parameter>
                        <parameter name="ldapSearchFilter">@SUBSTITUTE{property.profiles:source_ldap_search_filter}</parameter>
                        <parameter name="ldapSearchScope">subtree</parameter>
                        <parameter name="ldapSizeLimit">0</parameter>
                        <parameter name="ldapTimeLimit">0</parameter>
                        <parameter name="ldapUrl">@SUBSTITUTE{property.profiles:source_ldap_url}</parameter>
                        <parameter name="ldapUseSSL">@SUBSTITUTE{property.profiles:source_ldap_use_ssl}</parameter>
                        <parameter name="ldapUsername">@SUBSTITUTE{property.profiles:source_ldap_user_login}</parameter>
                        <parameter name="ldapVLVPageSize">0</parameter>
                        <parameter name="simulateRename">false</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations>
                <Operation name="checkIfRemove">
                    <Schema name="Input"/>
                    <Schema name="Output"/>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                </Operation>
            </Operations>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="sync_all_dns_hash_db">
            <ModTime>1398114853184</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs">sync_dns_utilities</parameter>
                <parameter name="maxerr"/>
                <parameter name="maxread"/>
                <parameter name="nullBehavior">Null</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
                <parameter name="nullBehaviorValue"/>
                <parameter name="nullDefinition"/>
                <parameter name="nullDefinitionValue"/>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script><![CDATA[
if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: prolog, retcode: " );
}

//----------------------------------------------------------------------------------------------
// Set whether to skip LookupMemTimestampDb component
//

	// this component is enabled only if "sync_updates_use_ldap_timestamp" is set to true
	// if it is true, the table named EMP_UPDATE_TIMESTAMP is assumed to exist.  

	// we assume only a single source at present, i.e., the LDAP.  This is shown in this config below:
    //                &lt;LinkCriteriaItem&gt;
    //                    &lt;Key&gt;14bf008caaa&lt;/Key&gt;
    //                    &lt;Attribute&gt;LDAP_MOD_TIMESTAMP_SOURCE&lt;/Attribute&gt;
    //                    &lt;Operator&gt;equals&lt;/Operator&gt;
    //                    &lt;Value&gt;modifyTimestamp&lt;/Value&gt;
    //                &lt;/LinkCriteriaItem&gt;
	//
	// That is, we supply a key that includes all parts, so only one record is can be returned.
	//
	// if multiple sources, e.g., an ldap and a db table, need to be supported then this link criteria needs to 
	// be removed, and either a TDI loop connector or the On No Match and On Multiple Hooks need to be
	// employed.  See http://www.tdi-users.org/twiki/bin/view/Integrator/ConnectorLoop.  Numerous other
	// changes are needed below, but you will see no other comments on this subject.  However, the changes and
	// where to make them will be fairly straightforward (famous last words).

	var bTimestampEnabled = false;

	// get the property
	var bTimestampEnabledStr = system.getTDIProperty("profiles", "sync_updates_use_ldap_timestamp");  // sync_all_dns_hash_db

	if (bTimestampEnabledStr == null)
		bTimestampEnabledStr = "false";

	if (bTimestampEnabledStr.toLowerCase() == "true")
	{
		bTimestampEnabled = true;

		bTimestampDisabledByCommandArg = system.getTDIProperty("profilesPartitions", "sync_updates_hash_timestamp_disabled_by_command_arg");

		if (bTimestampDisabledByCommandArg == null)
			bTimestampDisabledByCommandArg = "false";

		if (bTimestampDisabledByCommandArg == "true")
			bTimestampEnabled = false;
	}

	if (bTimestampEnabled)
		system.setTDIProperty("profiles", "LookupMemTimestampDb_state", "Enabled");
	else
		system.setTDIProperty("profiles", "LookupMemTimestampDb_state", "Disabled");
//----------------------------------------------------------------------------------------------

]]></Script>
                    <Enabled>true</Enabled>
                </Hook>

                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Script><![CDATA[
log0("INFO", "info_end_hash_db");
console0("INFO", "info_end_hash_db");
consoleMsg("out", "**********");
logmsg("INFO", "**********");

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: epilog2, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: onfailure, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
retCode = 0;

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf(true);
lcIterUtil.reset();

//--------------------------------------------------------------
// Set up the hash parameters
//--------------------------------------------------------------
var sync_updates_hash_field = lcConf.sync_updates_hash_field;
var sync_updates_hash_partitions = lcConf.sync_updates_hash_partitions;
var sync_updates_working_directory = lcConf.sync_updates_working_directory;

//--------------------------------------------------------------
// Setup working directory
//--------------------------------------------------------------
lcSyncDnsUtils.resetTempFiles(".dbids");

consoleMsg("out", "**********");
logmsg("INFO", "**********");
log0("INFO", "info_begin_hash_db");
console0("INFO", "info_begin_hash_db");
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="iterate_profiles" state="Enabled"/>
                    <Component name="map_hash_column" state="Enabled"/>
                    <Component name="filter_no_hash_column" state="Enabled"/>
                    <Component name="filter_inactive_user" state="Enabled"/>
                    <Component name="LookupMemTimestampDb" state="Enabled"/>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                    <Component name="write_partitions" state="Simulated"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="iterate_profiles">
                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="iterator_return_key_data_only">true</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>simple</Type>
                            <Simple>distinguishedName</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>email</Name>
                            <Type>simple</Type>
                            <Simple>email</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>guid</Name>
                            <Type>simple</Type>
                            <Simple>guid</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>key</Name>
                            <Type>simple</Type>
                            <Simple>key</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>sourceUrl</Name>
                            <Type>simple</Type>
                            <Simple>sourceUrl</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>sys_usrState</Name>
                            <Type>simple</Type>
                            <Simple>sys_usrState</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>uid</Name>
                            <Type>simple</Type>
                            <Simple>uid</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: after_close, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script>retCode=0;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_getnext">
                            <Name>before_getnext</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script><![CDATA[

retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: close_fail, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <Name>connect_init</Name>
                            <Script><![CDATA[
// hook is badly named, it means connector initialization failed
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: connect_init, retcode: " + retCode  );
}

consoleMsg("err", error.getString("exception"));
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

system.abortAssemblyLine(error.getString("exception"));
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: default_fail, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
retCode=0;

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: get_fail, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: initialize_fail, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="on_connection_failure">
                            <Name>on_connection_failure</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: on_connection_failure, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <ALMap name="map_hash_column">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>hash_column</Name>
                            <Type>advanced</Type>
                            <Script><![CDATA[
// only email case insensitive
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++++++ assembly: sync_all_dns_hash_db; connector: map_hash_column: lcConf.sync_updates_hash_email_bool: " + lcConf.sync_updates_hash_email_bool);
	task.logmsg("+++++++ assembly: sync_all_dns_hash_db; connector: map_hash_column: work entry: sync_updates_hash_field: " + sync_updates_hash_field);
}

var tmp = work[sync_updates_hash_field];

if (tmp == null || tmp.getValue() == null) {
	ret.value = null;
} 
else {
	var retValue = tmp.getValue().toString();
	if (lcConf.sync_updates_hash_email_bool)
		retValue = retValue.toLowerCase();
	ret.value = retValue;
}

if (js_trace_level.debug <= trace_javascript_level)
{
	if (tmp != null)
		task.logmsg("+++++++ assembly: sync_all_dns_hash_db; connector: map_hash_column: tmp.getValue(): " + tmp.getValue());
	task.logmsg("+++++++ assembly: sync_all_dns_hash_db; connector: map_hash_column: work entry: ret.value: " + ret.value);
}
]]></Script>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>
                <Script name="filter_no_hash_column">
                    <parameter name="script"><![CDATA[
// in the previous component - map_hash_column - the value of the work item determined by 
// "sync_updates_hash_field" is placed in the "hash_column" work item.  We pick this value up here
// in "tmp".

var tmp = work.getString("hash_column");

if (tmp == null || tmp.length() == 0) {
	if (js_trace_level.debug <= trace_javascript_level)
	{
		var hash_id = work.getString(sync_updates_hash_field);
		task.logmsg("+++++++ about to dump sync_all_dns_hash_db: filter_no_hash_column: work entry: hash_id: " + hash_id);
		task.dumpEntry(work);
	}

	var msgText = "sync hash must be ...";
	system.skipEntry();
}
]]></parameter>
                </Script>
                <Script name="filter_inactive_user">
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[
var tmp = work.getString("sys_usrState");
if (tmp == null || !tmp.equals("active")) {
	if (js_trace_level.finer <= trace_javascript_level)
	{
		var hash_id = work.getString(sync_updates_hash_field);
		task.logmsg("+++++++ about to dump sync_all_dns_hash_db: filter_inactive_user: work entry: hash_id: " + hash_id);		   //qqq
		task.dumpEntry(work);																									   //qqq
	}
	system.skipEntry();
}
]]></parameter>
                </Script>

            <Connector name="LookupMemTimestampDb">
                <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                <ConnectorMode>Lookup</ConnectorMode>
                <ConnectorState>@SUBSTITUTE{property.profiles:LookupMemTimestampDb_state}</ConnectorState>
                <Configuration>
                    <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">false</parameter>
                    <parameter name="jdbcAutoCreateTable">false</parameter>
                    <parameter name="jdbcCommit">After every database operation</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                    <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                    <parameter name="jdbcPreparedStatement">true</parameter>
                    <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
					<parameter name="jdbcTable">@SUBSTITUTE{property.profiles:sync_updates_timestamp_table}</parameter>
                </Configuration>
                <Parser>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425656624339</ModTime>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1425656624338</ModTime>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1425656624338</ModTime>
                    </Schema>
                </Parser>
                <AttributeMap name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>db_ldap_mod_timestamp</Name>
                            <Type>simple</Type>
                            <Simple>LDAP_MOD_TIMESTAMP</Simple>
                        </AttributeMapItem>
                </AttributeMap>
                <AttributeMap name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </AttributeMap>
                <DeltaSettings/>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                    <SchemaItem>
                        <Name>PROF_KEY</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>LDAP_MOD_TIMESTAMP_SOURCE</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>LDAP_MOD_TIMESTAMP</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>MARK</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>TENANT_KEY</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                </Schema>
                <LinkCriteria>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425661318202</ModTime>
                    <LinkCriteriaItem>
                        <Key>14bf008c906</Key>
                        <Attribute>PROF_KEY</Attribute>
                        <Operator>equals</Operator>
                        <Value>$key</Value>
                    </LinkCriteriaItem>

                    <LinkCriteriaItem>
                        <Key>14bf008caaa</Key>
                        <Attribute>LDAP_MOD_TIMESTAMP_SOURCE</Attribute>
                        <Operator>equals</Operator>
                        <Value>modifyTimestamp</Value>
                    </LinkCriteriaItem>

                    <LinkCriteriaItem>
                        <Key>14bf008cbbb</Key>
                        <Attribute>TENANT_KEY</Attribute>
                        <Operator>equals</Operator>
                        <Value>00000000-0000-0000-0000-040508202233</Value>
                    </LinkCriteriaItem>

                </LinkCriteria>

                <Hooks>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[

task.logmsg("+++++++ default_fail");
//system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
//		task.logmsg("+++++++ lookup_nomatch");
//system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_ok">
                            <Name>lookup_ok</Name>
                            <Script><![CDATA[
//task.logmsg("+++++++ lookup_ok");
//system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                </Hooks>

                <CheckpointConfig/>
                <SandboxConfig/>
                <Reconnect>
                    <InheritFrom>[parent]</InheritFrom>
                    <ReconnectRules/>
                </Reconnect>
                <Operations/>
                <PoolDefinition>
                    <InheritFrom>[parent]</InheritFrom>
                </PoolDefinition>
                <PoolInstance/>
            </Connector>

                <Script name="DumpWorkEntry">
                    <parameter name="script"><![CDATA[
// Dump the work entry
//  task.logmsg("$$$$$$$$$$$$$$$$$$ ");
//  task.dumpEntry(work);
]]></parameter>
                </Script>

                <Connector name="write_partitions">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">sync_updates/0.dbids</parameter>
                        <parameter name="script"><![CDATA[
var time = getCurrentTime();
var newFilePath = time + system.getTDIProperty("profiles", "sync_updates_working_directory")
	+ "/" + "0.dbids";
ret.value = newFilePath;
]]></parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.LDIF</InheritFrom>
                        <parameter name="attributeName">hash_column</parameter>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="csvColumns">hashed_column;PROF_SOURCE_UID</parameter>
                        <parameter name="csvEnableQuoting">true</parameter>
                        <parameter name="csvLogLongLines">0</parameter>
                        <parameter name="csvWriteHeader">true</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="ldifDNAttributeName">$dn</parameter>
                        <parameter name="ldifVersion">false</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>$dn</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>PROF_KEY</Name>
                            <Type>advanced</Type>
                            <Script>work.key</Script>
                            <Simple>PROF_KEY</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>PROF_SOURCE_URL</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>work.sourceUrl</Script>
                            <Simple>PROF_SOURCE_URL</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>PROF_UID</Name>
                            <Type>advanced</Type>
                            <Script>work.uid</Script>
                            <Simple>PROF_UID</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>hash_column</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>work.hash_column</Script>
                            <Simple>hash_column</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>sys_usrState</Name>
                            <Type>simple</Type>
                            <Simple>sys_usrState</Simple>
                        </AttributeMapItem>

                        <AttributeMapItem>
                            <Name>db_ldap_mod_timestamp</Name>
                            <Type>simple</Type>
                            <Simple>db_ldap_mod_timestamp</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script><![CDATA[//

// Determine hash code
//
var hash_value_key = java.lang.String(work.getString("hash_column"));
var hash_code = Math.abs(hash_value_key.hashCode() % sync_updates_hash_partitions);


//
// dynamically set file path and connect to file
//
var newFilePath = lcConf.sync_updates_working_directory
	+ "/" + hash_code + ".dbids";

var oldFilePath = thisConnector.connector.getParam("filePath");

if (newFilePath != oldFilePath)
{
	thisConnector.connector.setParam("filePath",newFilePath);
	thisConnector.connector.reconnect();
}

lcIterUtil.incr();
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <Name>connect_init</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="sync_all_dns_hash_source">
            <ModTime>1398114853309</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs">sync_dns_utilities</parameter>
                <parameter name="maxerr"/>
                <parameter name="maxread"/>
                <parameter name="nullBehavior">Null</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
                <parameter name="nullBehaviorValue"/>
                <parameter name="nullDefinition"/>
                <parameter name="nullDefinitionValue"/>
            </Settings>
            <Hooks>
                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Script><![CDATA[
log0("INFO", "info_end_hash_sr");
console0("INFO", "info_end_hash_sr");
consoleMsg("out", "**********");
logmsg("INFO", "**********");

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_source" + ", hook: epilog2, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script><![CDATA[retCode=1;
throw error.getObject( "exception" );]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
//-----------------------------------------------
// Inialize conf & reset .dns file
//-----------------------------------------------
load_lcConf(true);

// TODO - probably want sub routines for this
retCode = 0;

// set up working director
lcSyncDnsUtils.resetTempFiles(".ldiff");

log0("INFO", "info_begin_hash_sr");
console0("INFO", "info_begin_hash_sr");
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="SpecifyIterateOperation" state="Enabled"/>
                    <Component name="SourceRepositoryIterateFC" state="Simulated"/>
                    <Component name="Call_hashFlow" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <ALMap name="SpecifyIterateOperation">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>accumulatorConnector</Name>
                            <Type>advanced</Type>
                            <Script>ret.value = Call_hashFlow.connector;</Script>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>
                <Function name="SourceRepositoryIterateFC">
                    <InheritFrom>/Functions/SourceRepositoryIterateFC</InheritFrom>
                    <ConnectorState>Enabled</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="functioncall_fail">
                            <Name>functioncall_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>
                <Connector name="Call_hashFlow">
                    <InheritFrom>system:/Connectors/ibmdi.AssemblyLineConnector</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="assemblyLine">sync_all_dns_hash_source_flow</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="shareLog">true</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>*</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>line</Name>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="sync_all_dns_hash_source_flow">
            <ModTime>1398114853418</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Script><![CDATA[

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_hash_source_flow" + ", hook: epilog2, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihsrc.rc";
write_return_code(retCode, outFileName1);

]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script><![CDATA[
retCode = 1;
throw error.getObject( "exception" );
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
//-----------------------------------------------
// Inialize conf & reset
//-----------------------------------------------
load_lcConf(true);
lcIterUtil.reset();

//--------------------------------------------------------------
// Get the mappings to create db fields from ldap fields. The
// call below will create db_from_ldap_array associative array
//--------------------------------------------------------------
load_mappings_dbrepos_from_source();

var retCode = 0;
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="FilterInvalidSourceUsers" state="Enabled"/>
                    <Component name="comment_about_manager_secretary" state="Enabled"/>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                    <Component name="write_partitions" state="Simulated"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer"/>
            <ContainerDF name="DataFlowContainer">
                <Script name="FilterInvalidSourceUsers">
                    <InheritFrom>/Scripts/FilterInvalidSourceUsers</InheritFrom>
                </Script>
                <Script name="comment_about_manager_secretary">
                    <parameter name="script"><![CDATA[//
// AhernM:
//
// For this assembly line we do not attempt to lookup the manager 
//   and the secretary, but instead defer the action to the 'iterate' 
//   portion of sync_all_dns.  The reason for this is that during 
//   long polls of LDAP, we have seen the iterate step timeout.  To 
//   avoid that if possible, we thus perform the joining of LDAP data 
//   at a sequential stage of the script later on.
//
]]></parameter>
                </Script>
                <Script name="DumpWorkEntry">
                    <parameter name="script"><![CDATA[
// Dump the work entry
// task.logmsg("$$$$$$ sync_all_dns_hash_source_flow just before write_partitions");
// task.dumpEntry(work);
]]></parameter>
                </Script>

                <Connector name="write_partitions">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">sync_updates/dummy.ldiff</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>/Parsers/lc_ldiff_parser</InheritFrom>
                        <parameter name="attributeName">snprofiles_hash_code</parameter>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="ldifBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid
sourceObjectGUID]]></parameter>
                        <parameter name="ldifDNAttributeName">$dn</parameter>
                        <parameter name="ldifVersion">false</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="addonly_fail">
                            <Name>addonly_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_hash_source_flow" + ", hook: after_close, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihsrc.rc";
write_return_code(retCode, outFileName1);

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script><![CDATA[
//
// Determine hash code, sync_all_dns_hash_source_flow, write_partitions
//

var hash_code = 0;

var hash_value_key_attr = map_single_field(lcConf.sync_updates_hash_field, db_from_ldap_array);
//task.logmsg("+++++++ assembly: sync_all_dns_hash_source_flow; connector: write_partitions: lcConf.sync_updates_hash_field: " + lcConf.sync_updates_hash_field);  // e.g., email
//task.logmsg("+++++++ assembly: sync_all_dns_hash_source_flow; connector: write_partitions: hash_value_key_attr (value): " + hash_value_key_attr);
if(hash_value_key_attr!=null&&hash_value_key_attr.getValue()!=null)
{
	var hash_value_key = java.lang.String(hash_value_key_attr.getValue());
	//task.logmsg("+++++++ assembly: sync_all_dns_hash_source_flow; connector: write_partitions: hash_value_key: " + hash_value_key);

	if (lcConf.sync_updates_hash_email_bool) {
		hash_value_key = hash_value_key.toLowerCase();

		//task.logmsg("+++++++ assembly: sync_all_dns_hash_source_flow; connector: write_partitions: hash_value_key post lower: " + hash_value_key);
	}

	hash_code = Math.abs(hash_value_key.hashCode() % lcConf.sync_updates_hash_partitions);

	//
	// dynamically set file path and connect to file
	//
	var newFilePath = lcConf.sync_updates_working_directory
		+ "/" + hash_code + ".ldiff";

	var oldFilePath = thisConnector.connector.getParam("filePath");

	if (newFilePath != oldFilePath)
	{	
		thisConnector.connector.setParam("filePath",newFilePath);
		thisConnector.connector.reconnect();
	}
}
else
{
	system.skipEntry();
}

lcIterUtil.incr();
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations>
                <Operation name="putEntry">
                    <Schema name="Input"/>
                    <Schema name="Output">
                        <SchemaItem>
                            <Name>*</Name>
                        </SchemaItem>
                    </Schema>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                </Operation>
                <Operation name="Iterator">
                    <Schema name="Input"/>
                    <Schema name="Output"/>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                </Operation>
            </Operations>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="sync_all_dns_iterate">
            <UserComment>we sometimes get failures if we do skipEntry and no block after the else, so include dummy script here</UserComment>
            <ModTime>1398114853527</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script>throw error.getObject( "exception" );</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
load_lcConf(true);
load_mappings_dbrepos_from_source();
load_validations_dbrepos();

//--------------------------------------------------------------
// Get the property which says show summary of changes but
// not to execute them. It defaults to true
//--------------------------------------------------------------
var sync_updates_show_summary_only = lcConf.sync_updates_show_summary_only;

//--------------------------------------------------------------
// Get the property which says do the deletion action when sync the DB from Source.
//  It defaults to true
//--------------------------------------------------------------
var perform_deletion_for_sync = lcConf.perform_deletion_for_sync;

//--------------------------------------------------------------
// Get the property which says double check all adds and
// deletes
//--------------------------------------------------------------
var sync_updates_double_check = lcConf.sync_updates_double_check;

//--------------------------------------------------------------
// Get the properties to control storing and synching with source
//--------------------------------------------------------------
var sync_store_source_url = lcConf.sync_store_source_url;
if (js_trace_level.error <= trace_javascript_level)
	task.logmsg("INFO", "sync_all_dns_iterate: sync_store_source_url: " + sync_store_source_url);

var sync_source_url_override = lcConf.sync_source_url_override;
var sync_source_url_enforce = lcConf.sync_source_url_enforce;

var sync_use_ldap_timestamp = lcConf.sync_use_ldap_timestamp;
																	// sync_use_ldap_timestamp is true
var b_can_base_need_for_update_on_timestamp = sync_use_ldap_timestamp;

// check for possibly switching ldap provider, i.e., timestamp is meaningless
if  ((sync_source_url_enforce) && (sync_source_url_override))
	b_can_base_need_for_update_on_timestamp = false;	

//--------------------------------------------------------------
// Get the regex expression which is used to filter DNs from
// property file, if any
//--------------------------------------------------------------
var source_ldap_required_dn_regex_pattern = lcConf.source_ldap_required_dn_regex_pattern;

var itCounter = 0;
var successCounter = "successCounter";
var failCounter = "failCounter";
var deleteCounter = "deleteCounter";
var duplicateCounter = "duplicateCounter";
var lastSuccessfulDN = null;
var retCode = 0;

var dbIdMap = null;
var uidMap = null;
var keyMap = null;
var tsMap = null;
var pageNum = null;
var countAdd = 0;
var countDelete = 0;
var countUpdate = 0;

//--------------------------------------------------------
// We should be called via call-and-return from
// another AL, we allow the source filter to be passed
// in.  We check for and handle that possibility
//--------------------------------------------------------
if(work != null)
{
	dbIdMap = work.getAttribute("_db_id_map").getValue(0);
	uidMap = work.getAttribute("_uid_map").getValue(0); 
	keyMap = work.getAttribute("_key_map").getValue(0); 
	tsMap = work.getAttribute("_ts_map").getValue(0); 
	pageNum = parseInt(work.getAttribute("_page_num").getValue(0));
}
//else { // MIA TEST
//	dbIdMap = java.util.HashMap();
//}

//--------------------------------------------------------------
// Set up the hash parameters
//--------------------------------------------------------------
var sync_updates_working_directory = lcConf.sync_updates_working_directory;
var sync_updates_hash_field = lcConf.sync_updates_hash_field;
var sync_updates_hash_partitions = lcConf.sync_updates_hash_partitions;

var isInDBIdMap = false;
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="ldiff_iterate" state="Enabled"/>
                    <Component name="check_for_dn" state="Enabled"/>
                    <Component name="add_secretary_data" state="Simulated"/>
                    <Component name="add_manager_data" state="Simulated"/>
                    <Component name="check_DB_entry" state="Enabled"/>
                    <Component name="checkIdMapResult" state="Enabled"/>
                    <Component name="IF inDBIdMap:updateEntry" state="Enabled"/>
                    <Component name="processSync_update" state="Enabled"/>
                    <Component name="write_update_file" state="Simulated"/>
                    <Component name="write_add_file" state="Simulated"/>
                    <Component name="write_delete_file" state="Simulated"/>
                    <Component name="write_error_file" state="Simulated"/>
                    <Component name="write_skip_file" state="Simulated"/>
                    <Component name="write_create_temp_file" state="Simulated"/>
                    <Component name="write_delete_temp_file" state="Simulated"/>
                    <Component name="PopulateEmpTimestampUpdate" state="Simulated"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="ldiff_iterate">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="exclusiveLock">false</parameter>
                        <parameter name="fileAwaitDataTimeout"/>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:sync_updates_working_directory}/0.ldiff</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.LDIF</InheritFrom>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="ldifBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid
sourceObjectGUID]]></parameter>
                        <parameter name="ldifDNAttributeName">$dn</parameter>
                        <parameter name="ldifVersion">false</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>badPasswordTime</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>badPwdCount</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>description</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>displayName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeID</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>givenName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>instanceType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lastAgedChange</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lockoutTime</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mail</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>memberOf</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>msDS-UserAccountDisabled</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>name</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectCategory</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectClass</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectGUID</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectSid</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pwdLastSet</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sAMAccountName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceObjectGuid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>source_url</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uSNChanged</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uSNCreated</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userPrincipalName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>whenChanged</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>whenCreated</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode)
{
	task.logmsg("Assembly: " + "sync_all_dns_iterate" + ", hook: after_close, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(retCode, outFileName1);

var retAttr = work.getAttribute("retCode");
if(retAttr == null) {
	retAttr = work.newAttribute("retCode");
}
//task.logmsg("write_dn_mod.connector is " + write_dn_mod.connector);
if(retCode == 0) {
	//------------------------------------------------
	// If any entries left in dbIdMap, then these are
	// entries in the database that no longer have 
	// associated entries in LDAP. So they need to be
	// deleted, so add delete operations for each
	// of the DNs
	//------------------------------------------------
	if(dbIdMap.size() > 0)
	{
		var keyArray = dbIdMap.keySet().toArray();
		for(keyIndex=0; keyIndex < keyArray.length; ++keyIndex) 
		{
			var entryID = keyArray[keyIndex];
			var entryDN = dbIdMap.get(entryID);
			var entryUID = uidMap.get(entryID);
			var entryKEY = keyMap.get(entryID);
			//output to deletes.dbids file
			var outputEntry = new com.ibm.di.entry.Entry();
			outputEntry.addAttributeValue("$dn", entryDN);
			outputEntry.addAttributeValue("uid", entryUID);
			outputEntry.addAttributeValue("key", entryKEY);
			outputEntry.addAttributeValue("hash_column", entryID);
			write_delete_temp_file.connector.putEntry(outputEntry);
			countDelete++;
		}
	}
}
write_delete_temp_file.connector.terminate();
write_create_temp_file.connector.terminate();
uidMap.clear();

log3("INFO", "info_each_iteration_result", pageNum,  (countUpdate+countAdd), countDelete);
console3("INFO", "info_each_iteration_result", pageNum, (countUpdate+countAdd), countDelete);
consoleMsg("out", "**********");
logmsg("INFO", "**********");
retAttr.setValue("" + retCode);
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_getnext">
                            <Name>before_getnext</Name>
                            <Script><![CDATA[
bSyncNewFilePath=false;

//
// dynamically set file path and connect to file
//
var newFilePath = sync_updates_working_directory
	+ "/" + pageNum + ".ldiff";
var oldFilePath = thisConnector.connector.getParam("filePath");

if (oldFilePath != newFilePath)
{
	thisConnector.connector.setParam("filePath",newFilePath);
	thisConnector.connector.reconnect();
	bSyncNewFilePath=true;
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script><![CDATA[
//--------------------------------------------------------------
// Ensure files exist in working directory
//--------------------------------------------------------------

var syncUpdatesDir = new java.io.File(sync_updates_working_directory);

if (syncUpdatesDir.exists() && syncUpdatesDir.isDirectory())
{
	for (var i = 0; i < sync_updates_hash_partitions; i++)
	{
		var partFile = java.io.File(sync_updates_working_directory + "/" + i + ".ldiff");
		if (!partFile.exists()) {
			partFile.createNewFile();
		}
	}
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
// nothing here
]]></Script>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="check_for_dn">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
//---------------------------------------------
// We somehow seem to get entered here an 
// initial time with no DN, so we will
// skip the iteration this time
//---------------------------------------------
if(work.getAttribute("$dn") == null) {
	system.skipEntry();
}
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Function name="add_secretary_data">
                    <InheritFrom>/Functions/AddSecretaryDataFC</InheritFrom>
                    <ConnectorState>Enabled</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>
                <Function name="add_manager_data">
                    <InheritFrom>/Functions/AddManagerDataFC</InheritFrom>
                    <ConnectorState>Enabled</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>
                <Connector name="check_DB_entry">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("INFO: sync_use_ldap_timestamp in check_DB_entry: " + sync_use_ldap_timestamp);
		task.logmsg("INFO: b_can_base_need_for_update_on_timestamp in check_DB_entry: " + b_can_base_need_for_update_on_timestamp);
	}

	var ldapTS = "9";
	if (b_can_base_need_for_update_on_timestamp)
	{
		var ldapTS = work.getString("modifyTimestamp");
		if (ldapTS == null)
			ldapTS = "9";
	}

//task.logmsg("+++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: ldapTS : " + ldapTS );


	var tmpAttr = map_single_field(sync_updates_hash_field, db_from_ldap_array);
	isInDBIdMap = false;
	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("+++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: sync_updates_hash_field: " + sync_updates_hash_field);
		task.logmsg("+++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: tmpAttr == null: " + (tmpAttr == null));
		task.logmsg("+++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: dbIdMap.size(): " + dbIdMap.size());
	}

if( tmpAttr != null)  
{
	var idSourceValue = tmpAttr.getValue().toString();

	var dbTS = "0";
	if (b_can_base_need_for_update_on_timestamp)
	{
		dbTS = tsMap.get(idSourceValue);

		if (js_trace_level.debug <= trace_javascript_level)
			task.logmsg("+++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: dbTS: " + dbTS);

		if ((dbTS == null) || (ldapTS == "9"))
			dbTS = "0";
	}

	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("+++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: dbTS: " + dbTS);
		task.logmsg("+++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: ldapTS: " + ldapTS);
		//task.logmsg("+++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: dbKey: " + dbKey);
	}

	if (idSourceValue != null) 
	{
		if (lcConf.sync_updates_hash_email_bool)
			idSourceValue = idSourceValue.toLowerCase();
	}

	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("+++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: (tmpAttr != null), ldap idSourceValue is: " + idSourceValue);
		if (idSourceValue != null) 
			task.logmsg("+++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: hash field {" + sync_updates_hash_field + "} = " + 
											tmpAttr.getValue() + " / db map contains: " + dbIdMap.containsKey(idSourceValue));

		if (bSyncNewFilePath)
			task.logmsg("+++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: dbidmap is:" + dbIdMap);
	}
	bSyncNewFilePath=false;

	if (idSourceValue != null) 
	{
		if(dbIdMap.get(idSourceValue) != null) 
		{
			//-----------------------------------------
			// Now remove the value from the dbIdMap
			// because at the end we will assume 
			// existing entries are no longer in LDAP
			// and need to be removed
			//-----------------------------------------
			if (js_trace_level.debug <= trace_javascript_level)
				task.logmsg("+++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: | removing " + idSourceValue + " from dbIdMap");
			dbIdMap.remove(idSourceValue);
			isInDBIdMap = true;	

			// see if check for timestamp is ok.  we do not check if summary only.  This is debatable,
			// but let us do the full compare if summary only so we can double check timestamp if need be.
			if (b_can_base_need_for_update_on_timestamp && !sync_updates_show_summary_only)
			{
				if (dbTS >= ldapTS)
				{
					if (js_trace_level.debug <= trace_javascript_level)
						task.logmsg("+++++++ timestamp test found no need to check update ");
					incrementCounter(duplicateCounter);
					system.skipEntry();
				} 
			} 
		}
		else  //dbIdMap.get(idSourceValue) == null, need to add this ldap entry to db
		{
			if (js_trace_level.debug <= trace_javascript_level)
				task.logmsg("++++++++ assembly: sync_all_dns_iterate: connector: check_db_entry: | dbIdMap.get(idSourceValue) == null, idSourceValue is: (will add)" + idSourceValue);
			//-----------------------------------------
			// Add by tyw
			// Now append LDAP record to 'creates.ldiff' 
			//-----------------------------------------
			//perform write to file
			write_create_temp_file.connector.putEntry(work);
			countAdd++;
			isInDBIdMap = false;		
		}
	}
}
else 
{
	log1("ERROR", "err_no_uid", work.getString("$dn"));
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: aaa] [connector: ccc] [no hook]" );
		log1("ERROR", "err_no_uid", work.getString("$dn"));
		if (work)
			task.dumpEntry(work);
	}
	isInDBIdMap = false;
	system.skipEntry();
}
]]></ConnectorScript>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

                <ALMap name="checkIdMapResult">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>isInDBIdMapAttr</Name>
                            <Type>advanced</Type>
                            <Script>ret.value = isInDBIdMap;</Script>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>

                <Branch name="IF inDBIdMap:updateEntry">
                    <Connector name="processSync_update">
                        <ConnectorMode>Script</ConnectorMode>
                        <ConnectorState>Enabled</ConnectorState>
                        <Configuration/>
                        <ConnectorScript><![CDATA[
var theEntry = new com.ibm.di.entry.Entry();
var outputEntry = new com.ibm.di.entry.Entry();

if(!map_into_entry(db_from_ldap_array, theEntry)) 
{
	log1("ERROR", "err_mapping_failed_for_entry", work.getString("$dn"));
	outputEntry.addAttributeValue("$dn", work.getString("$dn"));
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_iterate] [connector: processSync_update] [hook: n/a 1]" );
		if (work)
			task.dumpEntry(work);
	}
	system.skipEntry();
}

if(!validate_existing(validate_dbrepos_field_array, theEntry)) 
{
	log1("ERROR", "warn_validation_failed_for_entry", work.getString("$dn"));
	outputEntry.addAttributeValue("$dn", work.getString("$dn"));
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_iterate] [connector: processSync_update] [hook: n/a 2]" );
		if (work)
			task.dumpEntry(work);
	}
	system.skipEntry();
}

//add by tyw-2009-11-22
create_extension_attribute_mappings(db_from_ldap_array, theEntry);
//end add

var dnValue = theEntry.getString("distinguishedName");
var uidValue = theEntry.getString("uid");

if(uidValue==null){
	task.logmsg("ERROR", "null uid value for entry: " + dnValue);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_iterate] [connector: processSync_update] [hook: n/a 3]" );
		if (work)
			task.dumpEntry(work);
	}
	system.skipEntry();
}

if((theEntry.getString("surname")==null) || (theEntry.getString("surname")==""))
{
	task.logmsg("ERROR", "null surname for entry: " + dnValue);
	outputEntry.addAttributeValue("$dn", work.getString("$dn"));
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_iterate] [connector: processSync_update] [hook: n/a 4]" );
		if (work)
			task.dumpEntry(work);
	}
	system.skipEntry();
}

if((theEntry.getString("displayName")==null) || (theEntry.getString("displayName")==""))
{
	task.logmsg("ERROR", "null displayName for entry: " + dnValue);
	outputEntry.addAttributeValue("$dn", work.getString("$dn"));
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_iterate] [connector: processSync_update] [hook: n/a 4]" );
		if (work)
			task.dumpEntry(work);
	}
	system.skipEntry();
}

// sync_all_dns_iterate
var tdiCRUDSvc = com.ibm.lconn.profiles.api.tdi.service.impl.ProfilesTDICRUDServiceImpl.getInstance();
try{
	var store = true;
	if((sync_store_source_url==null) || (sync_store_source_url==false))
	{
		store = false;
	}
	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("INFO", "currently processing entry: " + uidValue);
		task.logmsg("***** about to possibly update db");
		task.dumpEntry(theEntry);
	}

	// sync_all_dns_iterate
	var state = tdiCRUDSvc.syncProfileEntry( theEntry, store, sync_source_url_override, sync_source_url_enforce, sync_store_source_url, sync_updates_show_summary_only);

	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("INFO", "sync_all_dns_iterate: tdiCRUDSvc.syncProfileEntry state==: " + state);
	}
	
	//perform write to file
	var outputEntry = new com.ibm.di.entry.Entry();
	outputEntry.addAttributeValue("$dn", dnValue);

	// state == 0 means added.
	if(state==0)
	{
		// we ignore timestamp in the add case.  it will be fixed the next time thru
		// sync all
		
		write_add_file.connector.putEntry(outputEntry);
		incrementCounter(successCounter);

		if (js_trace_level.info <= trace_javascript_level)
		{ 
			task.logmsg("INFO: add entry, success counter incremented to " + getCounterState(successCounter) + ", [assemblyline: sync_all_dns_iterate] [connector: processSync_update] [hook: n/a 5]" );
			if (work)
				task.dumpEntry(work);
		}
	}
	// state == 1 means row was updated.
	else if(state==1)
	{
		countUpdate++;

		incrementCounter(successCounter);
		if (js_trace_level.info <= trace_javascript_level)
		{ 
			task.logmsg("INFO: update entry, success counter incremented to " + getCounterState(successCounter) + ", [assemblyline: sync_all_dns_iterate] [connector: processSync_update] [hook: n/a 6]" );
			if (work)
				task.dumpEntry(work);
		}
		write_update_file.connector.putEntry(outputEntry);

		// if summary only, do not change anything
		if (!sync_updates_show_summary_only)
		{
			// if doing the timestamp thing ....
			if (sync_use_ldap_timestamp)
			{
				var dbKey = keyMap.get(idSourceValue);
				if (js_trace_level.info <= trace_javascript_level)
					task.logmsg("about to call PopulateEmpTimestampUpdate: key: " + dbKey);

				// if we do not have db key, nothing to do
				if (dbKey != null)
				{
					// put key in work entry
					work.addAttributeValue("modifyTimestamp_key", dbKey);

					// put source name in work entry (always "modifyTimestamp", i.e., LDAP is source, at present)
					work.addAttributeValue("modifyTimestampSourceName", "modifyTimestamp");

					// get the ldap timestamp
					var ldapTS = work.getString("modifyTimestamp");

					if (js_trace_level.info <= trace_javascript_level)
						task.logmsg("about to call PopulateEmpTimestampUpdate: ldapTS: " + ldapTS);

					// if ldap timestamp in null, set it to 0, which is less than any possible
					// timestamp from an ldap
					if (ldapTS == null)
						work.addAttributeValue("modifyTimestamp", "0");
					
					// if we are switching ldaps, set timestamp to "0"
					if (!b_can_base_need_for_update_on_timestamp)
						work.setAttribute("modifyTimestamp", "0");

					PopulateEmpTimestampUpdate.update(work);

					if (js_trace_level.info <= trace_javascript_level)
						task.logmsg("called PopulateEmpTimestampUpdate: ldapTS: " + ldapTS);
				}
			}
		}
	}
	// state == 2 means row was not changed, i.e., not updated.
	else if(state==2)
	{
		// if summary only, do not change anything
		if (!sync_updates_show_summary_only)
		{
			// if doing the timestamp thing ....
			if (sync_use_ldap_timestamp)
			{
					var dbKey = keyMap.get(idSourceValue);
					if (js_trace_level.info <= trace_javascript_level)
						task.logmsg("about to call PopulateEmpTimestampUpdate: key: " + dbKey);

					// if we do not have db key, nothing to do
					if (dbKey != null)
					{
						// put key in work entry
						work.addAttributeValue("modifyTimestamp_key", dbKey);

					// put source name in work entry (always "modifyTimestamp", i.e., LDAP is source, at present)
					work.addAttributeValue("modifyTimestampSourceName", "modifyTimestamp");

						// get the ldap timestamp
						var ldapTS = work.getString("modifyTimestamp");

						if (js_trace_level.info <= trace_javascript_level)
							task.logmsg("about to call PopulateEmpTimestampUpdate: ldapTS: " + ldapTS);

						// if ldap timestamp in null, set it to 0, which is less than any possible
						// timestamp from an ldap
						if (ldapTS == null)
							work.addAttributeValue("modifyTimestamp", "0");
						
						// if we are switching ldaps, set timestamp to "0"
						if (!b_can_base_need_for_update_on_timestamp)
							work.setAttribute("modifyTimestamp", "0");

						PopulateEmpTimestampUpdate.update(work);

						if (js_trace_level.info <= trace_javascript_level)
							task.logmsg("called PopulateEmpTimestampUpdate: ldapTS: " + ldapTS);
					}
			}
		}

		incrementCounter(duplicateCounter);
		if (js_trace_level.finer <= trace_javascript_level)
		{ 
			task.logmsg("INFO: duplicate entry, duplicate counter incremented to " + getCounterState(duplicateCounter) + ", [assemblyline: sync_all_dns_iterate] [connector: processSync_update] [hook: n/a 7]" );
			if (work)
				task.dumpEntry(work);
		}
	}
	// state == 3 means error, i.e., no update.
	else if(state==3)
	{
		write_skip_file.connector.putEntry(outputEntry);
		if (js_trace_level.finer <= trace_javascript_level)
		{ 
			task.logmsg("INFO: skip entry, no counter incremented to, [assemblyline: sync_all_dns_iterate] [connector: processSync_update] [hook: n/a 8]" );
			if (work)
				task.dumpEntry(work);
		}
	}
}catch(e)
{
	task.logmsg("******************************************************************************************************************");
	task.logmsg("******************************************************************************************************************");
	task.logmsg("ERROR", "Problem updating entry: " + dnValue);
	task.logmsg("***** Caught exception updating db - update existing record. Look at the line 4 lines above here for the cause of ");
	task.logmsg("***** the exception. ");
	task.logmsg("***** Javascript Exception message: " + e);
	outputEntry.addAttributeValue("$dn", dnValue);
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.dumpEntry(outputEntry);
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + 
					", [assemblyline: sync_all_dns_iterate] [connector: processSync_update] [hook: n/a 9]" );
		if (work)
			task.dumpEntry(work);
	}
	system.skipEntry();
}
]]></ConnectorScript>
                        <Parser>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                        </Parser>
                        <AttributeMap name="Input"/>
                        <AttributeMap name="Output"/>
                        <DeltaSettings>
                            <Driver>BTree</Driver>
                        </DeltaSettings>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <LinkCriteria/>
                        <Hooks/>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                        <InitializeOption>0</InitializeOption>
                    </Connector>
                    <Conditions>
                        <BranchCondition>
                            <LeftHand>isInDBIdMapAttr</LeftHand>
                            <Operator>equals</Operator>
                            <RightHand>true</RightHand>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                    </Conditions>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>0</Type>
                </Branch>
                <Connector name="write_update_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">employee.updates</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_add_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">employee.adds</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_delete_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">employee.delete</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_error_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">employee.error</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if (work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_skip_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="filePath">employee.skip</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_create_temp_file">
                    <InheritFrom>/Connectors/LDIFFWriter</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="filePath">sync_updates/creates.ldiff</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.LDIF</InheritFrom>
                        <parameter name="ldifBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid
sourceObjectGUID]]></parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_delete_temp_file">
                    <InheritFrom>/Connectors/LDIFFWriter</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="filePath">sync_updates/deletes.dbids</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

            <Connector name="PopulateEmpTimestampUpdate">
                <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                <ConnectorMode>Update</ConnectorMode>
                <ConnectorState>Passive</ConnectorState>
                <Configuration>
                    <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">false</parameter>
                    <parameter name="jdbcAutoCreateTable">false</parameter>
                    <parameter name="jdbcCommit">After every database operation</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                    <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                    <parameter name="jdbcPreparedStatement">true</parameter>
                    <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
					<parameter name="jdbcTable">@SUBSTITUTE{property.profiles:sync_updates_timestamp_table}</parameter>
                </Configuration>
                <Parser>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425656624339</ModTime>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1425656624338</ModTime>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1425656624338</ModTime>
                    </Schema>
                </Parser>
                <AttributeMap name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425656624339</ModTime>
                </AttributeMap>
                <AttributeMap name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425660419778</ModTime>
                    <AttributeMapItem>
                        <Name>PROF_KEY</Name>
                        <Type>advanced</Type>
                        <Script>work.modifyTimestamp_key</Script>
                        <Simple>PROF_KEY</Simple>
                    </AttributeMapItem>

                    <AttributeMapItem>
                        <Name>LDAP_MOD_TIMESTAMP_SOURCE</Name>
                        <Type>advanced</Type>
                        <Script>work.modifyTimestampSourceName</Script>
                        <Simple>LDAP_MOD_TIMESTAMP_SOURCE</Simple>
                    </AttributeMapItem>

                    <AttributeMapItem>
                        <Name>LDAP_MOD_TIMESTAMP</Name>
                        <Type>advanced</Type>
                        <Script>work.modifyTimestamp</Script>
                        <Simple>LDAP_MOD_TIMESTAMP</Simple>
                    </AttributeMapItem>
                </AttributeMap>
                <DeltaSettings/>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425656624339</ModTime>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425657448404</ModTime>
                    <SchemaItem>
                        <Name>PROF_KEY</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>LDAP_MOD_TIMESTAMP</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>MARK</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                </Schema>
                <LinkCriteria>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425661318202</ModTime>
                    <LinkCriteriaItem>
                        <Key>14bf008c906</Key>
                        <Attribute>PROF_KEY</Attribute>
                        <Operator>equals</Operator>
                        <Value>$modifyTimestamp_key</Value>
                    </LinkCriteriaItem>

                    <LinkCriteriaItem>
                        <Key>14bf008caaa</Key>
                        <Attribute>LDAP_MOD_TIMESTAMP_SOURCE</Attribute>
                        <Operator>equals</Operator>
                        <Value>$modifyTimestampSourceName</Value>
                    </LinkCriteriaItem>

                </LinkCriteria>

                <Hooks>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
	task.logmsg("PopulateEmpTimestampUpdate: default_fail:  ");
//system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
	task.logmsg("PopulateEmpTimestampUpdate: lookup_nomatch:  ");
//system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                </Hooks>

                <CheckpointConfig/>
                <SandboxConfig/>
                <Reconnect>
                    <InheritFrom>[parent]</InheritFrom>
                    <ReconnectRules/>
                </Reconnect>
                <Operations/>
                <PoolDefinition>
                    <InheritFrom>[parent]</InheritFrom>
                </PoolDefinition>
                <PoolInstance/>
            </Connector>

            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="sync_all_dns_main">
            <ModTime>1398114853652</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script>throw error.getObject( "exception" );</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
load_lcConf(true);
load_mappings_dbrepos_from_source();
load_validations_dbrepos();

var dbIdMap = new java.util.HashMap();
var uidMap = new java.util.HashMap();
var keyMap = new java.util.HashMap();
var tsMap = new java.util.HashMap();
var rc=0;
//--------------------------------------------------------------
// Set up the hash parameters
//--------------------------------------------------------------
var sync_updates_working_directory = lcConf.sync_updates_working_directory;
var sync_updates_hash_field = lcConf.sync_updates_hash_field;
var sync_updates_hash_partitions = lcConf.sync_updates_hash_partitions;

//--------------------------------------------------------------
// Get the properties to control storing and synching with source
//--------------------------------------------------------------
var sync_store_source_url = lcConf.sync_store_source_url;
var sync_source_url_override = lcConf.sync_source_url_override;
var sync_source_url_enforce = lcConf.sync_source_url_enforce;

//remove the previous update files
var addFile = java.io.File("employee.adds");
if(addFile.exists()){
	addFile["delete"]();
}
var updateFile = java.io.File("employee.updates");
if(updateFile.exists()){
	updateFile["delete"]();
}
var deleteFile = java.io.File("employee.delete");
if(deleteFile.exists()){
	deleteFile["delete"]();
}
var deleteFile = java.io.File("employee.error");
if(deleteFile.exists()){
	deleteFile["delete"]();
}
var deleteFile = java.io.File("employee.duplicate");
if(deleteFile.exists()){
	deleteFile["delete"]();
}
var deleteFile = java.io.File("employee.skip");
if(deleteFile.exists()){
	deleteFile["delete"]();
}]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="get_page_num" state="Enabled"/>
                    <Component name="show_page" state="Enabled"/>
                    <Component name="collect_db_ids" state="Enabled"/>
                    <Component name="add_hashed_col_to_list" state="Enabled"/>
                    <Component name="setup_db_maps" state="Enabled"/>
                    <Component name="call_iterate" state="Simulated"/>
                    <Component name="clear_id_map" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="get_page_num">
                    <InheritFrom>system:/Connectors/ibmdi.ScriptConnector</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="includeFiles"/>
                        <parameter name="includePrologs"/>
                        <parameter name="script"><![CDATA[
var sync_updates_hash_partitions = -1;
var count = -1;
var countInit = -1;

var sync_updates_hash_partitionsTemp = parseInt(system.getTDIProperty("profilesPartitions", "sync_updates_hash_partitions_if_large_model"));

if (sync_updates_hash_partitionsTemp == 0)
{
	sync_updates_hash_partitions = parseInt(system.getTDIProperty("profiles", "sync_updates_hash_partitions"));
	countInit = 0;
	countTo = sync_updates_hash_partitions;
}
else
{
	sync_updates_hash_partitions = sync_updates_hash_partitionsTemp;
	countInit = parseInt(system.getTDIProperty("profilesPartitions", "sync_updates_count_init"));
	countTo = parseInt(system.getTDIProperty("profilesPartitions", "sync_updates_count_to"));
}

count = countInit;

task.logmsg("%%%%% sync_updates_hash_partitionsTemp is " + sync_updates_hash_partitionsTemp + ", count is " + count);
task.logmsg("%%%%% countInit is " + countInit + ", countTo is " + countTo);


function selectEntries()
{
}

function getNextEntry ()
{
	if (count < countTo)
	{
		entry.setAttribute("_page_num",count++);
	}
	else
	{
		result.setStatus (0);
		result.setMessage ("End of input");
	}
}

function putEntry ()
{
}

function modEntry ()
{
}

function deleteEntry ()
{
}

function findEntry ()
{
}
]]></parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>_page_num</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>_page_num</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>_page_num</Name>
                            <Syntax>java.lang.Double</Syntax>
                            <Presence>null</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_main" + ", hook: after_close, retcode: " + rc  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(rc, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(rc, outFileName1);

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_selectEntries">
                            <Name>after_selectEntries</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script><![CDATA[
rc=1;
throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <Name>connect_init</Name>
                            <Script><![CDATA[
// hook is badly named, it means connector initialization failed
rc=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_main" + ", hook: connect_init, retcode: " + rc  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(rc, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(rc, outFileName1);

system.abortAssemblyLine(error.getString("message"));
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
rc=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_main" + ", hook: default_fail, retcode: " + rc  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(rc, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(rc, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script><![CDATA[
rc=1;
throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_ok">
                            <Name>get_ok</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++++++ about to dump sync_all_dns_main: get_page_num: work entry: hash_id: ");
	task.dumpEntry(work);
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
rc=1;
throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="on_connection_failure">
                            <Name>on_connection_failure</Name>
                            <Script><![CDATA[
rc=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_main" + ", hook: on_connection_failure, retcode: " + rc  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(rc, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(rc, outFileName1);

system.abortAssemblyLine(error.getString("message"));
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="show_page">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
var page_num = work.getString("_page_num");
if(page_num != null) {
	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("current sync all page/partition is " + page_num);
}
else {
	system.abortAssemblyLine("Page number is null!");
}
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Loop name="collect_db_ids">
                    <LoopType>1</LoopType>
                    <LoopInitOption>0</LoopInitOption>
                    <Connector name="collect_db_ids">
                        <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                        <ConnectorMode>Iterator</ConnectorMode>
                        <ConnectorState>Enabled</ConnectorState>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                            <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                            <parameter name="fileAwaitDataTimeout"/>
                            <parameter name="filePath">@SUBSTITUTE{property.profiles:sync_updates_working_directory}/0.dbids</parameter>
                        </Configuration>
                        <ComputeChanges>true</ComputeChanges>
                        <DeltaBehavior>0</DeltaBehavior>
                        <DeltaStrict>true</DeltaStrict>
                        <Parser>
                            <InheritFrom>system:/Parsers/ibmdi.LDIF</InheritFrom>
                            <parameter name="attributeName">_hashed_column</parameter>
                            <parameter name="characterSet">UTF-8</parameter>
                            <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                            <parameter name="ldifDNAttributeName">$dn</parameter>
                            <parameter name="ldifVersion">true</parameter>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                        </Parser>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <AttributeMapItem>
                                <Name>_hashed_column</Name>
                                <Type>simple</Type>
                                <Enabled>true</Enabled>
                                <Add>true</Add>
                                <Modify>true</Modify>
                                <Simple>hash_column</Simple>
                                <SubstitutionTemplate>null</SubstitutionTemplate>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>_prof_key</Name>
                                <Type>advanced</Type>
                                <Script>conn.PROF_KEY</Script>
                                <Simple>_prof_key</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>_prof_source_uid</Name>
                                <Type>advanced</Type>
                                <Enabled>true</Enabled>
                                <Add>true</Add>
                                <Modify>true</Modify>
                                <Script>conn["$dn"]</Script>
                                <Simple>$dn</Simple>
                                <SubstitutionTemplate>null</SubstitutionTemplate>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>_prof_source_url</Name>
                                <Type>simple</Type>
                                <Simple>PROF_SOURCE_URL</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>_prof_uid</Name>
                                <Type>advanced</Type>
                                <Script>conn.PROF_UID</Script>
                                <Simple>PROF_UID</Simple>
                            </AttributeMapItem>

                            <AttributeMapItem>
                                <Name>_db_ldap_mod_timestamp</Name>
                                <Type>simple</Type>
                                <Simple>db_ldap_mod_timestamp</Simple>
                            </AttributeMapItem>

                        </AttributeMap>
                        <AttributeMap name="Output"/>
                        <DeltaSettings>
                            <UniqueAttribute/>
                            <WhenToCommit>After every database operation</WhenToCommit>
                            <Driver>BTree</Driver>
                        </DeltaSettings>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>$dn</Name>
                                <Syntax>java.lang.String</Syntax>
                                <Presence>null</Presence>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>PROF_SOURCE_URL</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>PROF_UID</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>hash_column</Name>
                                <Syntax>java.lang.String</Syntax>
                                <Presence>null</Presence>
                            </SchemaItem>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>debug</Name>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>exclusiveLock</Name>
                                <NativeSyntax>boolean</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>fileAppend</Name>
                                <NativeSyntax>boolean</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>fileAwaitDataTimeout</Name>
                                <NativeSyntax>DROPEDIT</NativeSyntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>filePath</Name>
                            </SchemaItem>
                        </Schema>
                        <LinkCriteria/>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                            <Hook name="after_close">
                                <Name>after_close</Name>
                                <Script><![CDATA[

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_main" + ", hook: after_close, retcode: " + rc  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(rc, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(rc, outFileName1);

]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="before_execute">
                                <Name>before_execute</Name>
                                <Script/>
                                <Enabled>false</Enabled>
                                <DebugBreak>false</DebugBreak>
                            </Hook>
                            <Hook name="before_getnext">
                                <Name>before_getnext</Name>
                                <Script><![CDATA[
//
// dynamically set file path and connect to file
//
var pn = parseInt(work.getString("_page_num"));

var newFilePath = sync_updates_working_directory
	+ "/" + pn + ".dbids";

var oldFilePath = thisConnector.connector.getParam("filePath");

if (oldFilePath != newFilePath)
{
	thisConnector.connector.setParam("filePath",newFilePath);
	thisConnector.connector.reconnect();
}
]]></Script>
                                <Enabled>true</Enabled>
                                <DebugBreak>false</DebugBreak>
                            </Hook>
                            <Hook name="before_initialize">
                                <Name>before_initialize</Name>
                                <Script><![CDATA[
//--------------------------------------------------------------
// Ensure files exist in working directory
//--------------------------------------------------------------

var syncUpdatesDir = new java.io.File(sync_updates_working_directory);

if (syncUpdatesDir.exists() && syncUpdatesDir.isDirectory())
{
	for (var i = 0; i < sync_updates_hash_partitions; i++)
	{
		var partFile = java.io.File(sync_updates_working_directory + "/" + i + ".dbids");
		if (!partFile.exists()) {
			partFile.createNewFile();
		}
	}
}
]]></Script>
                                <Enabled>true</Enabled>
                                <DebugBreak>false</DebugBreak>
                            </Hook>
                            <Hook name="close_fail">
                                <Name>close_fail</Name>
                                <Script><![CDATA[
var rc = 1;
throw error.getObject( "exception" );
]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="connect_init">
                                <Name>connect_init</Name>
                                <Script><![CDATA[
// hook is badly named, it means connector initialization failed
var rc = 1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_main" + ", hook: connect_init, retcode: " + rc  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(rc, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(rc, outFileName1);

system.abortAssemblyLine(error.getString("message"));
]]></Script>
                                <Enabled>true</Enabled>
                                <DebugBreak>false</DebugBreak>
                            </Hook>
                            <Hook name="default_fail">
                                <Name>default_fail</Name>
                                <Script><![CDATA[var rc = 1;
throw error.getObject( "exception" );]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="get_fail">
                                <Name>get_fail</Name>
                                <Script><![CDATA[
var rc = 1;
throw error.getObject( "exception" );
]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="initialize_fail">
                                <Name>initialize_fail</Name>
                                <Script><![CDATA[
var rc = 1;
throw error.getObject( "exception" );
]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="on_connection_failure">
                                <Name>on_connection_failure</Name>
                                <Script><![CDATA[
var rc = 1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_main" + ", hook: on_connection_failure, retcode: " + rc  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(rc, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(rc, outFileName1);

system.abortAssemblyLine(error.getString("message"));]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                        </Hooks>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                        <InitializeOption>0</InitializeOption>
                    </Connector>
                    <Branch name="collect_db_ids">
                        <Connector name="add_hashed_col_to_list">
                            <ConnectorMode>Script</ConnectorMode>
                            <ConnectorState>Enabled</ConnectorState>
                            <Configuration/>
                            <ConnectorScript><![CDATA[
var dbId = work.getString("_hashed_column");
var key = work.getString("_prof_key");
var uid = work.getString("_prof_uid");
var sourceId = work.getString("_prof_source_uid");
var db_url = work.getString("_prof_source_url");
var db_ldap_timestamp = work.getString("_db_ldap_mod_timestamp");


if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++in add uids1, _hashed_column (dbId), is " + dbId);
	task.logmsg("+++in add uids2, _prof_key (key), is " + key);
	task.logmsg("+++in add uids3, _prof_uid (uid), is " + uid);
	task.logmsg("+++in add uids4, db url is " + db_url);
	task.logmsg("+++in add uids5, ldap url is " + sync_store_source_url + ", db url is " + db_url);
	task.logmsg("+++in add uids6, source id (dn), for dbIdMap, is " + sourceId);
	task.logmsg("+++in add uids7, db ts is " + db_ldap_timestamp);
}

// so if enforce is on, only add the entry if they match
if (!sync_source_url_enforce) {
	dbIdMap.put(dbId, sourceId);
	uidMap.put(dbId, uid);
	keyMap.put(dbId, key);
	tsMap.put(dbId, db_ldap_timestamp);
}
else if ((sync_store_source_url != null) && (sync_store_source_url.equals(db_url))) {
	dbIdMap.put(dbId, sourceId);
	uidMap.put(dbId, uid);
	keyMap.put(dbId, key);
	tsMap.put(dbId, db_ldap_timestamp);
}
]]></ConnectorScript>
                            <ComputeChanges>true</ComputeChanges>
                            <DeltaBehavior>0</DeltaBehavior>
                            <DeltaStrict>true</DeltaStrict>
                            <Parser>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                </Schema>
                            </Parser>
                            <AttributeMap name="Input"/>
                            <AttributeMap name="Output"/>
                            <DeltaSettings>
                                <Driver>BTree</Driver>
                            </DeltaSettings>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <LinkCriteria/>
                            <Hooks/>
                            <CheckpointConfig/>
                            <SandboxConfig/>
                            <Reconnect>
                                <InheritFrom>[parent]</InheritFrom>
                                <ReconnectRules/>
                            </Reconnect>
                            <Operations/>
                            <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                            <PoolDefinition>
                                <InheritFrom>[parent]</InheritFrom>
                            </PoolDefinition>
                            <PoolInstance/>
                            <InitializeOption>0</InitializeOption>
                        </Connector>
                        <Conditions/>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>0</Type>
                    </Branch>
                </Loop>
                <ALMap name="setup_db_maps">
                    <AttributeMap name="Input">
                        <AttributeMapItem>
                            <Name>_db_id_map</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>ret.value = dbIdMap;</Script>
                            <Simple>_db_uids</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>_key_map</Name>
                            <Type>advanced</Type>
                            <Script>ret.value = keyMap;</Script>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>_uid_map</Name>
                            <Type>advanced</Type>
                            <Script>ret.value = uidMap;</Script>
                        </AttributeMapItem>

                        <AttributeMapItem>
                            <Name>_ts_map</Name>
                            <Type>advanced</Type>
                            <Script>ret.value = tsMap;</Script>
                        </AttributeMapItem>

                        <AttributeMapItem>
                            <Name>retCode</Name>
                            <Type>substitution</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>retCode</Simple>
                            <SubstitutionTemplate>1</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>
                <Function name="call_iterate">
                    <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                    <ConnectorState>Enabled</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$_already_lookup_manager</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>$_already_lookup_secretary</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>$manager_uid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>$secretary_uid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>*</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>PROF_VALUE</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_foundChanges</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_hash_value</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_inDB</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>badPasswordTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>badPwdCount</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>c</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cn</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>db_url</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>description</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>displayname</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeType</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>givenname</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibm-entryUuid</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>instanceType</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>isInDBIdMapAttr</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lastAgedChange</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lockoutTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mail</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>memberOf</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>msDS-UserAccountDisabled</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>name</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectCategory</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectGUID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectSid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectclass</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>outputResult</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>outputResults</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pwdLastSet</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sAMAccountName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sn</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceObjectGuid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>source_url</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uSNChanged</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uSNCreated</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userPrincipalName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userpassword</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>whenChanged</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>whenCreated</Name>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>$lookup_operation</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>*</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>badPasswordTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>badPwdCount</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>c</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cn</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>description</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>displayname</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeType</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>givenname</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibm-entryUuid</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>instanceType</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>isInDBIdMapAttr</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lastAgedChange</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>lockoutTime</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mail</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>memberOf</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>msDS-UserAccountDisabled</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>name</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectCategory</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectGUID</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectSid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectclass</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>pwdLastSet</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sAMAccountName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sn</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceObjectGuid</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>source_url</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uSNChanged</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uSNCreated</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userPrincipalName</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userpassword</Name>
                            <Presence>null</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>whenChanged</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>whenCreated</Name>
                        </SchemaItem>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
var rc = work.getString("retCode");
if(rc==null){
	rc = 1;
}

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_main" + ", hook: after_close, retcode: " + rc  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(rc, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(rc, outFileName1);

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
rc=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_main" + ", hook: default_fail, retcode: " + rc  );
}
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(rc, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(rc, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="functioncall_fail">
                            <Name>functioncall_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="$initialize.logFileName">logs/SyncUpdates.log</parameter>
                        <parameter name="assemblyLine">sync_all_dns_iterate</parameter>
                        <parameter name="customSecurity">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="mode">0</parameter>
                        <parameter name="server"/>
                        <parameter name="shareLog">true</parameter>
                        <parameter name="useTCBAttributes">false</parameter>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>retCode</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>retCode</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>_db_id_map</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>_db_id_map</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>_key_map</Name>
                            <Type>simple</Type>
                            <Simple>_key_map</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>_page_num</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>_page_num</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>_uid_map</Name>
                            <Type>simple</Type>
                            <Simple>_uid_map</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>_ts_map</Name>
                            <Type>simple</Type>
                            <Simple>_ts_map</Simple>
                        </AttributeMapItem>

                    </AttributeMap>
                </Function>
                <Connector name="clear_id_map">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
dbIdMap.clear();
uidMap.clear();
keyMap.clear();
tsMap.clear();
]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="sync_all_dns_process_add">
            <ModTime>1398114853777</ModTime>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Script><![CDATA[
log0("INFO", "info_end_process_addList");
console0("INFO", "info_end_process_addList");
consoleMsg("out", "**********");
logmsg("INFO", "**********");

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_process_add" + ", hook: epilog2, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(retCode, outFileName1);

]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script>throw error.getObject( "exception" );</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[load_lcConf(true);
load_mappings_dbrepos_from_source();
load_validations_dbrepos();

//--------------------------------------------------------------
// Get the properties to control storing and synching with source
//--------------------------------------------------------------
var sync_updates_show_summary_only = lcConf.sync_updates_show_summary_only;
var sync_store_source_url = lcConf.sync_store_source_url;
var sync_source_url_override = lcConf.sync_source_url_override;
var sync_source_url_enforce = lcConf.sync_source_url_enforce;
var sync_updates_working_directory = lcConf.sync_updates_working_directory;

var sync_use_ldap_timestamp = lcConf.sync_use_ldap_timestamp;
var b_can_base_need_for_update_on_timestamp = sync_use_ldap_timestamp;

// reset the counter used for just this phase
lcIterUtil.reset();

var itCounter = 0;
var successCounter = "successCounter";
var failCounter = "failCounter";
var deleteCounter = "deleteCounter";
var duplicateCounter = "duplicateCounter";
var lastSuccessfulDN = null;
var retCode = 0;

log0("INFO", "info_begin_process_addList");
console0("INFO", "info_begin_process_addList");
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="iterate_addList" state="Enabled"/>
                    <Component name="checkDN" state="Enabled"/>
                    <Component name="processSync_add" state="Enabled"/>
                    <Component name="write_update_file" state="Simulated"/>
                    <Component name="write_add_file" state="Simulated"/>
                    <Component name="write_delete_file" state="Simulated"/>
                    <Component name="write_error_file" state="Simulated"/>
                    <Component name="write_skip_file" state="Simulated"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="iterate_addList">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="filePath">sync_updates/creates.ldiff</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>/Parsers/lc_ldiff_parser</InheritFrom>
                        <parameter name="attributeName">line</parameter>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="ldifBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid
sourceObjectGUID]]></parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_lookup_manager_field</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_lookup_secretary_field</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>c</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>carLicense</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>description</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>displayname</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTelephoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>givenName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibm-entryUuid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>initials</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>l</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mail</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>manager</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectclass</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ou</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telephoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userpassword</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_lookup_manager_field</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>_lookup_secretary_field</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>c</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>carLicense</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>cn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>description</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>displayname</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>employeeType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>facsimileTelephoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>givenName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ibm-entryUuid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>initials</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>l</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>mail</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>manager</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>objectclass</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>ou</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>telephoneNumber</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>userpassword</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_process_add" + ", hook: after_close, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(retCode, outFileName1);

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script>lcIterUtil.incr();</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_getnext">
                            <Name>before_getnext</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script><![CDATA[
//---------------------------------------------------------------------
//Set return code to indicate error here, in case initialization fails. 
// If initialization succeeds, we will set back to zero.
//---------------------------------------------------------------------
var retCode = 0;
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <Name>connect_init</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++++++ processAdd | default successful");
}
retCode = 0;
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="end_of_data">
                            <Name>end_of_data</Name>
                            <Script>//task.logmsg("+++++++ processAdd | end of data");</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++++++ processAdd | iterate error");
}

msgText = log2("ERROR", "err_iteration_failure", lastSuccessfulDN, error.getString("message"));
incrementCounter(failCounter);

if (js_trace_level.error <= trace_javascript_level)
{ 
	task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_process_add] [connector: iterate_addList] [hook: get_fal]" );
	if (work)
		task.dumpEntry(work);
}

retCode = 1;

throw error.getObject( "exception" );
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="get_ok">
                            <Name>get_ok</Name>
                            <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("+++++++ processAdd | getNext successful");
}

retCode = 0;
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script>throw error.getObject( "exception" );</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="on_connection_failure">
                            <Name>on_connection_failure</Name>
                            <Script>task.logmsg("+++++++ processAdd | on connection lost");</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Script name="checkDN">
                    <parameter name="script"><![CDATA[
var dnVal = work.getString("$dn");
if(dnVal == null) {
	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("+++++++ processAdd | checkDN, dn is null. skip");
	system.skipEntry();
}
]]></parameter>
                </Script>
                <Connector name="processSync_add">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
var theEntry = new com.ibm.di.entry.Entry();
var outputEntry = new com.ibm.di.entry.Entry();

if(!map_into_entry(db_from_ldap_array, theEntry))
{
	log1("ERROR", "err_mapping_failed_for_entry", work.getString("$dn"));
	outputEntry.addAttributeValue("$dn", work.getString("$dn"));
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: aaa] [connector: ccc] [no hook]" );
		if (work)
			task.dumpEntry(work);
	}
	system.skipEntry();
}

if (sync_source_url_override != false) {
	theEntry.addAttributeValue("sourceUrl", sync_store_source_url);	
}

if(!validate_all(validate_dbrepos_field_array, theEntry))
{
	log1("ERROR", "warn_validation_failed_for_entry", work.getString("$dn"));
	outputEntry.addAttributeValue("$dn", work.getString("$dn"));
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: add failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_process_add] [connector: processSync_add] [hook: n/a 2]" );
		if (work)
			task.dumpEntry(work);
	}
	system.skipEntry();
}

create_extension_attribute_mappings(db_from_ldap_array, theEntry);

var dnValue = theEntry.getString("distinguishedName");
var uidValue = theEntry.getString("uid");

if(uidValue==null)
{
	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("ERROR", "null uid value for entry: " + dnValue);
	outputEntry.addAttributeValue("$dn", dnValue);
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: add failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_process_add] [connector: processSync_add] [hook: n/a 3]" );
		if (work)
			task.dumpEntry(work);
	}
	system.skipEntry();
}

if((theEntry.getString("surname")==null) || (theEntry.getString("surname")==""))
{
	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("ERROR", "null surname for entry: " + dnValue);
	outputEntry.addAttributeValue("$dn", dnValue);
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_process_add] [connector: processSync_add] [hook: n/a 4]" );
		if (work)
			task.dumpEntry(work);
	}
	system.skipEntry();
}

if((theEntry.getString("displayName")==null) || (theEntry.getString("displayName")==""))
{
	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("ERROR", "null displayName for entry: " + dnValue);
	outputEntry.addAttributeValue("$dn", dnValue);
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_process_add] [connector: processSync_add] [hook: n/a 4]" );
		if (work)
			task.dumpEntry(work);
	}
	system.skipEntry();
}

// sync_all_dns_process_add
var tdiCRUDSvc = com.ibm.lconn.profiles.api.tdi.service.impl.ProfilesTDICRUDServiceImpl.getInstance();

try
{
	var store = true;
	if((sync_store_source_url==null) || (sync_store_source_url==false)) {
		store = false;
	}

	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("INFO", "currently processing entry: " + uidValue);

	// sync_all_dns_process_add
	var state = tdiCRUDSvc.syncProfileEntry(theEntry,store,sync_source_url_override, sync_source_url_enforce, sync_store_source_url, sync_updates_show_summary_only);
	
	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("INFO", "sync_all_dns_process_add: tdiCRUDSvc.syncProfileEntry state==: " + state);
	}

	//perform write to file
	var outputEntry = new com.ibm.di.entry.Entry();
	outputEntry.addAttributeValue("$dn", dnValue);

	if(state==0){
		// if summary only, do not change anything
		if (!sync_updates_show_summary_only)
		{
			// if doing the timestamp thing ....
			if (sync_use_ldap_timestamp)
			{
					task.logmsg("about to call PopulateEmpTimestampUpdate: about to get key: ");
				var dbKey = theEntry.getString("__key__");
				if (js_trace_level.info <= trace_javascript_level)
					task.logmsg("about to call PopulateEmpTimestampUpdate: key: " + dbKey);

				// if we do not have db key, nothing to do
				if (dbKey != null)
				{
					// put key in work entry
					work.addAttributeValue("modifyTimestamp_key", dbKey);

					// get the ldap timestamp
					var ldapTS = work.getString("modifyTimestamp");

					if (js_trace_level.info <= trace_javascript_level)
						task.logmsg("about to call PopulateEmpTimestampUpdate: ldapTS: " + ldapTS);

					// if ldap timestamp in null, set it to 0, which is less than any possible
					// timestamp from an ldap
					if (ldapTS == null)
						work.addAttributeValue("modifyTimestamp", "0");
					
					// if we are switching ldaps, set timestamp to "0"
					if (!b_can_base_need_for_update_on_timestamp)
						work.setAttribute("modifyTimestamp", "0");

					PopulateEmpTimestampUpdateAdd.update(work);

					if (js_trace_level.info <= trace_javascript_level)
						task.logmsg("called PopulateEmpTimestampUpdateAdd: ldapTS: " + ldapTS);
				}
			}
		}

		write_add_file.connector.putEntry(outputEntry);
		incrementCounter(successCounter);
		if (js_trace_level.info <= trace_javascript_level)
		{ 
			task.logmsg("INFO: add entry, success counter incremented to " + getCounterState(successCounter) + ", [assemblyline: sync_all_dns_process_add ] [connector: processSync_add] [hook: n/a 5]" );
			if (work)
				task.dumpEntry(work);
		}

	}
	else if(state==1) {
		write_update_file.connector.putEntry(outputEntry);
		incrementCounter(successCounter);
		if (js_trace_level.info <= trace_javascript_level)
		{ 
			task.logmsg("INFO: update entry, success counter incremented to " + getCounterState(successCounter) + ", [assemblyline: sync_all_dns_process_add ] [connector: processSync_add] [hook: n/a 5]" );
			if (work)
				task.dumpEntry(work);
		}
	}
	else if(state==2) {
// the number of records written to this file does not currently match the duplicateCounter, 
// so do not enable this for now
//		write_dup_file.connector.putEntry(outputEntry);
		incrementCounter(duplicateCounter);
		if (js_trace_level.finer <= trace_javascript_level)
		{ 
			task.logmsg("INFO: duplicate entry, duplicate counter incremented to " + getCounterState(duplicateCounter) + ", [assemblyline: sync_all_dns_process_add ] [connector: processSync_add] [hook: n/a 6]" );
			if (work)
				task.dumpEntry(work);
		}
	}
	else if(state==3){
		write_skip_file.connector.putEntry(outputEntry);
		if (js_trace_level.finer <= trace_javascript_level)
		{ 
			task.logmsg("INFO: skip entry, no counter incremented to, [assemblyline: sync_all_dns_process_add] [connector: processSync_add] [hook: n/a 7]" );
			if (work)
				task.dumpEntry(work);
		}
	}
}catch(e)
{
	task.logmsg("******************************************************************************************************************");
	task.logmsg("******************************************************************************************************************");
	task.logmsg("ERROR", "Problem creating entry: " + dnValue);
	task.logmsg("***** Caught exception updating db - create new record. Look at the line 4 lines above here for the cause of ");
	task.logmsg("***** the exception. ");
	task.logmsg("***** Javascript Exception message: " + e);
	outputEntry.addAttributeValue("$dn", dnValue);
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + 
			", [assemblyline: sync_all_dns_process_add] [connector: processSync_add] [hook: n/a 8]" );
		if (work)
			task.dumpEntry(work);
	}
	system.skipEntry();
}
]]></ConnectorScript>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_update_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">employee.updates</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_add_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">employee.adds</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[if(work.getAttribute("dn") == null) {
	system.skipEntry();
}]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_delete_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">employee.delete</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[if(work.getAttribute("dn") == null) {
	system.skipEntry();
}]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_error_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">employee.error</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	task.logmsg("error in add, dn is null " + task.dumpEntry(work));
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_skip_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="filePath">employee.skip</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

            <Connector name="PopulateEmpTimestampUpdateAdd">
                <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                <ConnectorMode>Update</ConnectorMode>
                <ConnectorState>Passive</ConnectorState>
                <Configuration>
                    <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">false</parameter>
                    <parameter name="jdbcAutoCreateTable">false</parameter>
                    <parameter name="jdbcCommit">After every database operation</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                    <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                    <parameter name="jdbcPreparedStatement">true</parameter>
                    <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
					<parameter name="jdbcTable">@SUBSTITUTE{property.profiles:sync_updates_timestamp_table}</parameter>
                </Configuration>
                <Parser>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425656624339</ModTime>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1425656624338</ModTime>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1425656624338</ModTime>
                    </Schema>
                </Parser>
                <AttributeMap name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425656624339</ModTime>
                </AttributeMap>
                <AttributeMap name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425660419778</ModTime>
                    <AttributeMapItem>
                        <Name>PROF_KEY</Name>
                        <Type>advanced</Type>
                        <Script>work.modifyTimestamp_key</Script>
                        <Simple>PROF_KEY</Simple>
                    </AttributeMapItem>

                    <AttributeMapItem>
                        <Name>LDAP_MOD_TIMESTAMP_SOURCE</Name>
                        <Type>advanced</Type>
                        <Script>work.modifyTimestampSourceName</Script>
                        <Simple>LDAP_MOD_TIMESTAMP_SOURCE</Simple>
                    </AttributeMapItem>

                    <AttributeMapItem>
                        <Name>LDAP_MOD_TIMESTAMP</Name>
                        <Type>advanced</Type>
                        <Script>work.modifyTimestamp</Script>
                        <Simple>LDAP_MOD_TIMESTAMP</Simple>
                    </AttributeMapItem>
                </AttributeMap>
                <DeltaSettings/>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425656624339</ModTime>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425657448404</ModTime>
                    <SchemaItem>
                        <Name>PROF_KEY</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>LDAP_MOD_TIMESTAMP</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>MARK</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                </Schema>
                <LinkCriteria>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425661318202</ModTime>
                    <LinkCriteriaItem>
                        <Key>14bf008c906</Key>
                        <Attribute>PROF_KEY</Attribute>
                        <Operator>equals</Operator>
                        <Value>$modifyTimestamp_key</Value>
                    </LinkCriteriaItem>

                    <LinkCriteriaItem>
                        <Key>14bf008caaa</Key>
                        <Attribute>LDAP_MOD_TIMESTAMP_SOURCE</Attribute>
                        <Operator>equals</Operator>
                        <Value>modifyTimestampSourceName</Value>
                    </LinkCriteriaItem>

                </LinkCriteria>

                <Hooks>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
	task.logmsg("PopulateEmpTimestampUpdateAdd: default_fail:  ");
//system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
	task.logmsg("PopulateEmpTimestampUpdateAdd: lookup_nomatch:  ");
//system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                </Hooks>

                <CheckpointConfig/>
                <SandboxConfig/>
                <Reconnect>
                    <InheritFrom>[parent]</InheritFrom>
                    <ReconnectRules/>
                </Reconnect>
                <Operations/>
                <PoolDefinition>
                    <InheritFrom>[parent]</InheritFrom>
                </PoolDefinition>
                <PoolInstance/>
            </Connector>

            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="sync_all_dns_process_delete">
            <ModTime>1398114854151</ModTime>
            <Settings/>
            <Hooks>
                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Script><![CDATA[
log0("INFO", "info_end_process_deleteList");
console0("INFO", "info_end_process_deleteList");
consoleMsg("out", "**********");
logmsg("INFO", "**********");

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_process_delete" + ", hook: epilog2, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(retCode, outFileName1);

]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script>throw error.getObject( "exception" );</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
load_lcConf(true);

load_mappings_dbrepos_from_source();
load_validations_dbrepos();

//--------------------------------------------------------------
// Get the properties to control storing and synching with source
//--------------------------------------------------------------
var sync_updates_show_summary_only = lcConf.sync_updates_show_summary_only;
var sync_store_source_url = lcConf.sync_store_source_url;
var sync_source_url_override = lcConf.sync_source_url_override;
var sync_source_url_enforce = lcConf.sync_source_url_enforce;
var sync_updates_working_directory = lcConf.sync_updates_working_directory;

var perform_deletion_or_inactivate_for_sync = lcConf.perform_deletion_or_inactivate_for_sync;
var sync_updates_hash_field = lcConf.sync_updates_hash_field;
var sync_updates_working_directory = lcConf.sync_updates_working_directory;

// used for custom delete double-checking
var sync_updates_double_check = lcConf.sync_updates_double_check;

// custom delete assembly line reference
var sync_check_if_remove =  lcConf.sync_check_if_remove;

// reset the counter used for just this phase
lcIterUtil.reset();

var itCounter = 0;
var successCounter = "successCounter";
var failCounter = "failCounter";
var deleteCounter = "deleteCounter";
var duplicateCounter = "duplicateCounter";
var lastSuccessfulDN = null;
var retCode = 0;

log0("INFO", "info_begin_process_deleteList");
console0("INFO", "info_begin_process_deleteList");
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="checkDN" state="Enabled"/>
                    <Component name="setup_vars" state="Enabled"/>
                    <Component name="doubleCheckIsTrue" state="Enabled"/>
                    <Component name="checkIfRemove" state="Simulated"/>
                    <Component name="noNeedToDoubleCheck" state="Enabled"/>
                    <Component name="setCheckResult" state="Enabled"/>
                    <Component name="delete" state="Enabled"/>
                    <Component name="showSummaryOnly" state="Enabled"/>
                    <Component name="skipEntry" state="Enabled"/>
                    <Component name="PerformDeleteOrInactivate" state="Enabled"/>
                    <Component name="callSyncDB_deleteOrInactivate" state="Simulated"/>
                    <Component name="notPerformDeletion" state="Enabled"/>
                    <Component name="recordToFile" state="Enabled"/>
                    <Component name="updated" state="Enabled"/>
                    <Component name="showSummaryOnly_update" state="Enabled"/>
                    <Component name="skipEntry_update" state="Enabled"/>
                    <Component name="PerformUpdates" state="Enabled"/>
                    <Component name="lookup_dn" state="Enabled"/>
                    <Component name="callSyncDB_update" state="Simulated"/>
                    <Component name="check_ldap_entry" state="Enabled"/>
                    <Component name="write_update_file" state="Simulated"/>
                    <Component name="write_add_file" state="Simulated"/>
                    <Component name="write_delete_file" state="Simulated"/>
                    <Component name="DeleteMemTimestampDb" state="Simulated"/>
                    <Component name="write_error_file" state="Simulated"/>
                    <Component name="write_skip_file" state="Simulated"/>
                    <Component name="iterate_deleteList" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="iterate_deleteList">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="filePath">sync_updates/deletes.dbids</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>/Parsers/lc_ldiff_parser</InheritFrom>
                        <parameter name="attributeName">line</parameter>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="ldifBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid
sourceObjectGUID]]></parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>simple</Type>
                            <Simple>$dn</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>hash_column</Name>
                            <Type>simple</Type>
                            <Simple>hash_column</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>key</Name>
                            <Type>simple</Type>
                            <Simple>key</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>uid</Name>
                            <Type>simple</Type>
                            <Simple>uid</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>hash_column</Name>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dn</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_process_delete" + ", hook: after_close, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "_tdiupd.rc";
write_return_code(retCode, outFileName1);

]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script>lcIterUtil.incr();</Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[var itCounter = 0;
var retCode = 0;]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_getnext">
                            <Name>before_getnext</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script><![CDATA[
msgText = log2("ERROR", "err_iteration_failure", lastSuccessfulDN, error.getString("message"));

var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", work.getString("$dn"));
write_error_file.connector.putEntry(outputEntry);

incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_process_delete] [connector: iterate_deleteList] [no hook]" );
		if (work)
			task.dumpEntry(work);
	}
retCode = 1;
throw error.getObject( "exception" );
system.skipEntry();]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Script name="checkDN">
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[var dnVal = work.getString("$dn");
if(dnVal == null) {
	task.logmsg("+++++++cannot find dn in prcessDelete | checkDn");
	system.skipEntry();
}
]]></parameter>
                </Script>
                <ALMap name="setup_vars">
                    <AttributeMap name="Input">
                        <AttributeMapItem>
                            <Name>checkResult</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>ret.value = "init";</Script>
                            <Simple>_db_uids</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>performDeleteOrInactivateForSync</Name>
                            <Type>advanced</Type>
                            <Script>ret.value=perform_deletion_or_inactivate_for_sync;</Script>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>performDeletionForSync</Name>
                            <Type>advanced</Type>
                            <Script>ret.value=perform_deletion_or_inactivate_for_sync;</Script>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>syncUpdatesShowOnly</Name>
                            <Type>advanced</Type>
                            <Script>ret.value=sync_updates_show_summary_only;</Script>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>sync_updates_double_check</Name>
                            <Type>advanced</Type>
                            <Script>ret.value=sync_updates_double_check;</Script>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>
                <Branch name="doubleCheckIsTrue">
                    <Function name="checkIfRemove">
                        <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                        <ConnectorState>Enabled</ConnectorState>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                            <Hook name="after_functioncall">
                                <Name>after_functioncall</Name>
                                <Enabled>false</Enabled>
                            </Hook>
                            <Hook name="before_functioncall">
                                <Name>before_functioncall</Name>
                                <Script/>
                                <Enabled>false</Enabled>
                            </Hook>
                            <Hook name="default_ok">
                                <Name>default_ok</Name>
                                <Enabled>false</Enabled>
                            </Hook>
                            <Hook name="functioncall_fail">
                                <Name>functioncall_fail</Name>
                                <Script><![CDATA[
var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", work.getString("$dn"));
write_error_file.connector.putEntry(outputEntry);

throw error.getObject( "exception" );
]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="functioncall_ok">
                                <Name>functioncall_ok</Name>
                                <Enabled>false</Enabled>
                            </Hook>
                        </Hooks>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                            <parameter name="assemblyLine">@SUBSTITUTE{javascript ret.value = lcConf.sync_check_if_remove;}</parameter>
                            <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                            <parameter name="operation">checkIfRemove</parameter>
                            <parameter name="script">ret.value = lcConf.sync_check_if_remove;</parameter>
                        </Configuration>
                        <SandboxConfig/>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <AttributeMapItem>
                                <Name>checkResult</Name>
                                <Type>simple</Type>
                                <Enabled>true</Enabled>
                                <Add>true</Add>
                                <Modify>true</Modify>
                                <Simple>checkResult</Simple>
                            </AttributeMapItem>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                            <AttributeMapItem>
                                <Name>$dn</Name>
                                <Type>simple</Type>
                                <Simple>$dn</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>checkResult</Name>
                                <Type>simple</Type>
                                <Simple>checkResult</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>performDeletionForSync</Name>
                                <Type>simple</Type>
                                <Simple>performDeletionForSync</Simple>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>syncUpdatesShowOnly</Name>
                                <Type>simple</Type>
                                <Simple>syncUpdatesShowOnly</Simple>
                            </AttributeMapItem>
                        </AttributeMap>
                    </Function>
                    <Conditions>
                        <BranchCondition>
                            <LeftHand>sync_updates_double_check</LeftHand>
                            <Operator>equals</Operator>
                            <RightHand>true</RightHand>
                            <CaseSensitive>false</CaseSensitive>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                    </Conditions>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>0</Type>
                </Branch>
                <Branch name="noNeedToDoubleCheck">
                    <Script name="setCheckResult">
                        <parameter name="script"><![CDATA[
var checkingResult = work.getAttribute("checkResult");
checkingResult.setValue("remove");]]></parameter>
                    </Script>
                    <Conditions/>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>2</Type>
                </Branch>
                <Branch name="delete">
                    <Branch name="showSummaryOnly">
                        <Script name="skipEntry">
                            <parameter name="script"><![CDATA[
var entryDN = work.getString("$dn");
var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", entryDN);
outputEntry.addAttributeValue("uid", work.getString("uid"));

write_delete_file.connector.putEntry(outputEntry);

//deleteCounter++;
incrementCounter(deleteCounter);
if (js_trace_level.debug <= trace_javascript_level)
	task.logmsg("+++++++show summary only is true. Will not do actual updates/delete. DN is:" + work.getString("$dn"));
if (js_trace_level.info <= trace_javascript_level)
{ 
	task.logmsg("INFO: delete entry, delete counter incremented to " + getCounterState(deleteCounter) + ", [assemblyline: sync_all_dns_process_delete] [connector: showSummaryOnly] [no hook]" );
	if (work)
		task.dumpEntry(work);
}
system.skipEntry();
]]></parameter>
                        </Script>
                        <Conditions>
                            <BranchCondition>
                                <LeftHand>syncUpdatesShowOnly</LeftHand>
                                <Operator>equals</Operator>
                                <RightHand>true</RightHand>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>0</Type>
                    </Branch>
                    <Branch name="PerformDeleteOrInactivate">
                        <Function name="callSyncDB_deleteOrInactivate">
                            <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                            <ConnectorState>Enabled</ConnectorState>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>*</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>syncExisting</Name>
                                </SchemaItem>
                            </Schema>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="after_initialize">
                                    <Name>after_initialize</Name>
                                    <Script>retCode = 0;</Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="before_initialize">
                                    <Name>before_initialize</Name>
                                    <Script><![CDATA[//---------------------------------------------------------------------
//Set return code to indicate error here, in case initialization fails. 
// If initialization succeeds, we will set back to zero.
//---------------------------------------------------------------------
retCode = 1;]]></Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="connect_init">
                                    <Name>connect_init</Name>
                                    <Script>retCode = 1;</Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="default_fail">
                                    <Name>default_fail</Name>
                                    <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
	task.logmsg("INFO", "+++++++in on error. outputResult is: " + work.getString("outputResult"));

task.logmsg("ERROR", "something wrong with getting entry: " + work.getString("$dn")); 

var dnValue = work.getString("$dn");
var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", dnValue);

write_error_file.connector.putEntry(outputEntry);

incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: delete failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_process_delete] [connector: PerformDeleteOrInactivate, Function callSyncDb_deleteOrInactivate] [hook: default_fail]" );
		if (work)
			task.dumpEntry(work);
	}
retCode = 1;
work.removeAllAttributes();
system.skipEntry();
]]></Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="default_ok">
                                    <Name>default_ok</Name>
                                    <Script><![CDATA[
var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", work.getString("$dn"));
outputEntry.addAttributeValue("uid", work.getString("uid"));

if(work.getString("outputResult") == "deleted")
{
	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("INFO", "+++++++outputResult is: " + work.getString("outputResult"));

	incrementCounter(deleteCounter);

	var sync_use_ldap_timestamp = lcConf.sync_use_ldap_timestamp;

	if (sync_use_ldap_timestamp)
	{
		if (js_trace_level.debug <= trace_javascript_level)
		{
			task.logmsg("DeleteMemTimestampDb.deleteEntry(work);");
			task.dumpEntry(work);
		}

		try
		{		
			DeleteMemTimestampDb.deleteEntry(work);
		}

		catch(e)
		{
		}
	}

	if (js_trace_level.info <= trace_javascript_level)
	{ 
		task.logmsg("INFO: deleted entry, delete counter incremented to " + getCounterState(deleteCounter) + ", [assemblyline: sync_all_dns_process_delete] [connector:  PerformDeleteOrInactivate, Function callSyncDb_deleteOrInactivate] [hook: default_ok]" );
		if (work)
			task.dumpEntry(work);
	}
	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("INFO", "+++++++delete this entry: " + work.getString("$dn"));
	write_delete_file.connector.putEntry(outputEntry);
	retCode = 0;
}
else {
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: delete failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_process_delete] [connector: connector:  PerformDeleteOrInactivate, Function delete, PerformDeleteOrInactive, callSyncDb_deleteOrInactivate] [hook: default_ok]" );
		if (work)
			task.dumpEntry(work);
	}
}
work.removeAllAttributes();
]]></Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="functioncall_fail">
                                    <Name>functioncall_fail</Name>
                                    <Script>throw error.getObject( "exception" );</Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="initialize_fail">
                                    <Name>initialize_fail</Name>
                                    <Script>retCode = 1;</Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                            </Hooks>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="$initialize.logFilename">logs/PopulateDBFromDNFile.log</parameter>
                                <parameter name="assemblyLine">SyncDBfromSource</parameter>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                <parameter name="mode">2</parameter>
                                <parameter name="operation">delete</parameter>
                            </Configuration>
                            <SandboxConfig/>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>outputResult</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>outputResult</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>*</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>*</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                        </Function>
                        <Conditions>
                            <BranchCondition>
                                <LeftHand>performDeleteOrInactivateForSync</LeftHand>
                                <Operator>equals</Operator>
                                <RightHand>true</RightHand>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>1</Type>
                    </Branch>
                    <Branch name="notPerformDeletion">
                        <Script name="recordToFile">
                            <parameter name="script"><![CDATA[
var entryDN = work.getString("$dn");
var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", entryDN);
outputEntry.addAttributeValue("uid", work.getString("uid"));
write_delete_file.connector.putEntry(outputEntry);

//deleteCounter++;
incrementCounter(deleteCounter);
if (js_trace_level.info <= trace_javascript_level)
{ 
	task.logmsg("INFO: delete entry, delete counter incremented to " + getCounterState(deleteCounter) + ", [assemblyline: sync_all_dns_process_delete] [connector: delete, notPerformDeletion] [hook: n/a]" );
	if (work)
		task.dumpEntry(work);
}
retCode = 0;
]]></parameter>
                        </Script>
                        <Conditions/>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>2</Type>
                    </Branch>
                    <Conditions>
                        <BranchCondition>
                            <LeftHand>checkResult</LeftHand>
                            <Operator>equals</Operator>
                            <RightHand>remove</RightHand>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                    </Conditions>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>0</Type>
                </Branch>
                <Branch name="updated">
                    <Branch name="showSummaryOnly_update">
                        <Script name="skipEntry_update">
                            <parameter name="script"><![CDATA[
var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", work.getString("$dn"));

incrementCounter(successCounter);
		if (js_trace_level.info <= trace_javascript_level)
		{ 
	task.logmsg("INFO: show summary delete entry, success counter incremented to " + getCounterState(successCounter) + ", [assemblyline: sync_all_dns_process_delete] [connector: showSummaryOnly_update] [hook: n/a]" );
			if (work)
				task.dumpEntry(work);
		}
if (js_trace_level.debug <= trace_javascript_level)
	task.logmsg("INFO", "+++++++delete this entry: " + work.getString("$dn"));
write_update_file.connector.putEntry(outputEntry);
retCode = 0;

system.skipEntry();
]]></parameter>
                        </Script>
                        <Conditions>
                            <BranchCondition>
                                <LeftHand>syncUpdatesShowOnly</LeftHand>
                                <Operator>equals</Operator>
                                <RightHand>true</RightHand>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>0</Type>
                    </Branch>
                    <Branch name="PerformUpdates">
                        <Function name="lookup_dn">
                            <InheritFrom>/Functions/SourceRepositoryLookupFC</InheritFrom>
                            <ConnectorState>Enabled</ConnectorState>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="default_fail">
                                    <Name>default_fail</Name>
                                    <Script><![CDATA[
log1("ERROR", "err_lookup_dn", work.getString("$dn"));

var dnValue = work.getString("$dn");
var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", dnValue);

write_error_file.connector.putEntry(outputEntry);

incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
	task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_process_delete] [connector: PerformUpdates] [hook: default_fail]" );
		if (work)
			task.dumpEntry(work);
	}
retCode = 1;
system.skipEntry();
]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="functioncall_fail">
                                    <Name>functioncall_fail</Name>
                                    <Script>throw error.getObject( "exception" );</Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                            </Hooks>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                            </Configuration>
                            <SandboxConfig/>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </AttributeMap>
                        </Function>

                        <Function name="callSyncDB_update">
                            <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                            <ConnectorState>Enabled</ConnectorState>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>$manager_uid</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>$operation</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>$secretary_uid</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>deleteActionFlag</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>distinguishedName</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>email</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>entryUID</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>guid</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>key</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>outputResult</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>sourceUrl</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>uid</Name>
                                </SchemaItem>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <SchemaItem>
                                    <Name>$operation</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>*</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>deleteActionFlag</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>distinguishedName</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>email</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>entryUID</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>guid</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>key</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>outputResult</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>sourceUrl</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>syncExisting</Name>
                                </SchemaItem>
                                <SchemaItem>
                                    <Name>uid</Name>
                                </SchemaItem>
                            </Schema>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="after_initialize">
                                    <Name>after_initialize</Name>
                                    <Script>retCode = 0;</Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="before_initialize">
                                    <Name>before_initialize</Name>
                                    <Script><![CDATA[//---------------------------------------------------------------------
//Set return code to indicate error here, in case initialization fails. 
// If initialization succeeds, we will set back to zero.
//---------------------------------------------------------------------
retCode = 1;]]></Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="connect_init">
                                    <Name>connect_init</Name>
                                    <Script>retCode = 1;</Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="default_fail">
                                    <Name>default_fail</Name>
                                    <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
	task.logmsg("INFO", "+++++++in on error. outputResult is: " + work.getString("outputResult"));

task.logmsg("ERROR", "something getting wrong with entry: " + work.getString("$dn"));

var dnValue = work.getString("$dn");
var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", dnValue);

write_error_file.connector.putEntry(outputEntry);

incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
	task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_process_delete] [connector: updated, callSyncDB_update] [hook: default_fail]" );
		if (work)
			task.dumpEntry(work);
	}
retCode = 1;
work.removeAllAttributes();
system.skipEntry();
]]></Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="default_ok">
                                    <Name>default_ok</Name>
                                    <Script><![CDATA[
var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", work.getString("$dn"));
if(work.getString("outputResult") == "duplicate")
{
	incrementCounter(successCounter);
		if (js_trace_level.info <= trace_javascript_level)
		{ 
		task.logmsg("INFO: delete entry, success counter incremented to " + getCounterState(successCounter) + ", [assemblyline: sync_all_dns_process_delete] [connector: updated, callSyncDB_update] [hook: default_ok, duplicate]" );
			if (work)
				task.dumpEntry(work);
		}
	write_update_file.connector.putEntry(outputEntry);
	retCode = 0;
}
else if(work.getString("outputResult") == "written")
{
	incrementCounter(successCounter);
		if (js_trace_level.info <= trace_javascript_level)
		{ 
		task.logmsg("INFO: delete entry, success counter incremented to " + getCounterState(successCounter) + ", [assemblyline: sync_all_dns_process_delete] [connector: updated, callSyncDB_update] [hook: default_ok, written]" );
			if (work)
				task.dumpEntry(work);
		}
	write_add_file.connector.putEntry(outputEntry);
	retCode = 0;
}
else {
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	if (js_trace_level.error <= trace_javascript_level)
	{ 
		task.logmsg("ERROR: update failed, failure counter incremented to " + getCounterState(failCounter) + ", [assemblyline: sync_all_dns_process_delete] [connector: updated, callSyncDB_update] [hook: default_ok, else]" );
		if (work)
			task.dumpEntry(work);
	}
}
work.removeAllAttributes();
]]></Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                                <Hook name="functioncall_fail">
                                    <Name>functioncall_fail</Name>
                                    <Script>throw error.getObject( "exception" );</Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                                <Hook name="initialize_fail">
                                    <Name>initialize_fail</Name>
                                    <Script>retCode = 1;</Script>
                                    <Enabled>true</Enabled>
                                    <DebugBreak>false</DebugBreak>
                                </Hook>
                            </Hooks>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="$initialize.logFilename">logs/PopulateDBFromDNFile.log</parameter>
                                <parameter name="assemblyLine">SyncDBfromSource</parameter>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                <parameter name="mode">2</parameter>
                                <parameter name="operation">modify</parameter>
                            </Configuration>
                            <SandboxConfig/>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>outputResult</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>outputResult</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>*</Name>
                                    <Type>simple</Type>
                                    <Enabled>true</Enabled>
                                    <Add>true</Add>
                                    <Modify>true</Modify>
                                    <Simple>*</Simple>
                                    <SubstitutionTemplate>null</SubstitutionTemplate>
                                </AttributeMapItem>
                            </AttributeMap>
                        </Function>
                        <Conditions/>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>2</Type>
                    </Branch>
                    <Conditions>
                        <BranchCondition>
                            <LeftHand>checkResult</LeftHand>
                            <Operator>equals</Operator>
                            <RightHand>updated</RightHand>
                            <CaseSensitive>true</CaseSensitive>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                    </Conditions>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>1</Type>
                </Branch>
                <Function name="check_ldap_entry">
                    <InheritFrom>/Functions/LookupUserFC</InheritFrom>
                    <ConnectorState>Passive</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                </Function>
                <Connector name="write_update_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">employee.updates</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_add_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">employee.adds</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_delete_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">employee.delete</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>

            <Connector name="DeleteMemTimestampDb">
                <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                <ConnectorMode>Delete</ConnectorMode>
                <ConnectorState>Passive</ConnectorState>
                <Configuration>
                    <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">false</parameter>
                    <parameter name="jdbcAutoCreateTable">false</parameter>
                    <parameter name="jdbcCommit">After every database operation</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                    <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                    <parameter name="jdbcPreparedStatement">true</parameter>
                    <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
					<parameter name="jdbcTable">@SUBSTITUTE{property.profiles:sync_updates_timestamp_table}</parameter>
                </Configuration>
                <Parser>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425656624339</ModTime>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1425656624338</ModTime>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1425656624338</ModTime>
                    </Schema>
                </Parser>
                <AttributeMap name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>db_ldap_mod_timestamp</Name>
                            <Type>simple</Type>
                            <Simple>LDAP_MOD_TIMESTAMP</Simple>
                        </AttributeMapItem>
                </AttributeMap>
                <AttributeMap name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </AttributeMap>
                <DeltaSettings/>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                    <SchemaItem>
                        <Name>PROF_KEY</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>LDAP_MOD_TIMESTAMP</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>MARK</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                </Schema>
                <LinkCriteria>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425661318202</ModTime>
                    <LinkCriteriaItem>
                        <Key>14bf008c906</Key>
                        <Attribute>PROF_KEY</Attribute>
                        <Operator>equals</Operator>
                        <Value>$key</Value>
                    </LinkCriteriaItem>
                </LinkCriteria>

                <Hooks>
                        <Hook name="default_ok">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
		task.logmsg("+++++++ DeleteMemTimestampDb: default_ok");
//system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
		task.logmsg("+++++++ DeleteMemTimestampDb: default_fail");
system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
		task.logmsg("+++++++ DeleteMemTimestampDb: lookup_nomatch");
system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_ok">
                            <Name>lookup_ok</Name>
                            <Script><![CDATA[
task.logmsg("+++++++ DeleteMemTimestampDb: lookup_ok");
//system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                </Hooks>

                <CheckpointConfig/>
                <SandboxConfig/>
                <Reconnect>
                    <InheritFrom>[parent]</InheritFrom>
                    <ReconnectRules/>
                </Reconnect>
                <Operations/>
                <PoolDefinition>
                    <InheritFrom>[parent]</InheritFrom>
                </PoolDefinition>
                <PoolInstance/>
            </Connector>

                <Connector name="write_error_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">employee.error</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	task.logmsg("error in delete, dn is null " + task.dumpEntry(work));
	system.skipEntry();
}

if (js_trace_level.debug <= trace_javascript_level)
	task.logmsg("error in delete, write to file " + task.dumpEntry(work));
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_skip_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="filePath">employee.skip</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[if(work.getAttribute("dn") == null) {
	system.skipEntry();
}]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="sync_dns_from_file">
            <ModTime>1398114854276</ModTime>
            <Settings/>
            <Hooks>
                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Script><![CDATA[
//report counter result
load_message_bundle();

log4("INFO", "info_sync_result", "" + getCounterState(successCounter), "" + getCounterState(deleteCounter), "" + getCounterState(duplicateCounter),"" + getCounterState(failCounter));
console4("out", "info_sync_result", "" + getCounterState(successCounter), "" + getCounterState(deleteCounter), "" + getCounterState(duplicateCounter),"" + getCounterState(failCounter));
]]></Script>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script>throw error.getObject( "exception" );</Script>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script>print_version_info();  // sync_dns_from_file</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "sync_dns_from_file";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

var sync_updates_hash_field_lower = "null";  // bogus value
if (lcConf.sync_updates_hash_field != null)
	sync_updates_hash_field_lower = lcConf.sync_updates_hash_field.toLowerCase();
// if (!(sync_updates_hash_field_lower == "uid"))
// {
// 	var msgText = log0("ERROR", "Validation of the synchronize hash field value - " + sync_updates_hash_field_lower + " - failed. The value must be uid for the sync_dns_from_file command. Stopping.");
// 	consoleMsg("out", "ERROR: " + msgText);
// 	system.abortAssemblyLine(msgText);
// }

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

load_mappings_dbrepos_from_source();
load_validations_dbrepos();

//--------------------------------------------------------------
// Get the properties to control storing and synching with source
//--------------------------------------------------------------
var sync_updates_show_summary_only = lcConf.sync_updates_show_summary_only;
var sync_store_source_url = lcConf.sync_store_source_url;
var sync_source_url_override = lcConf.sync_source_url_override;
var sync_source_url_enforce = lcConf.sync_source_url_enforce;

var sync_updates_working_directory = lcConf.sync_updates_working_directory;

var sync_updates_double_check = lcConf.sync_updates_double_check;
var performDeletionForSync = lcConf.perform_deletion_or_inactivate_for_sync;
var syncUpdatesShowOnly = lcConf.sync_updates_show_summary_only;

// reset the counter used for just this phase
lcIterUtil.reset();

var itCounter = 0;
var successCounter = "successCounter";
var failCounter = "failCounter";
var deleteCounter = "deleteCounter";
var duplicateCounter = "duplicateCounter";
var lastSuccessfulDN = null;
var retCode = 0;
var source_ldap_escape_dns = false;
var aProp = system.getTDIProperty("profiles", "source_ldap_escape_dns");
if ((aProp != null) && ((aProp == "true") || (aProp == "TRUE"))) {
	source_ldap_escape_dns = true;
}
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="fixup_dn" state="Enabled"/>
                    <Component name="lookup_dn" state="Simulated"/>
                    <Component name="notfound" state="Enabled"/>
                    <Component name="set_vars" state="Enabled"/>
                    <Component name="lookup_db_attrs" state="Enabled"/>
                    <Component name="doublecheck" state="Enabled"/>
                    <Component name="checkifremove" state="Simulated"/>
                    <Component name="nodoublecheck" state="Enabled"/>
                    <Component name="setcheck" state="Enabled"/>
                    <Component name="delete" state="Enabled"/>
                    <Component name="showSummaryOnly" state="Enabled"/>
                    <Component name="skipEntry" state="Enabled"/>
                    <Component name="perform delete or inactivate" state="Enabled"/>
                    <Component name="delete or inactivate" state="Simulated"/>
                    <Component name="no delete" state="Enabled"/>
                    <Component name="record to file" state="Enabled"/>
                    <Component name="process add" state="Enabled"/>
                    <Component name="add_secretary_data" state="Simulated"/>
                    <Component name="add_manager_data" state="Simulated"/>
                    <Component name="processSync_add" state="Enabled"/>
                    <Component name="write_update_file" state="Simulated"/>
                    <Component name="write_add_file" state="Simulated"/>
                    <Component name="write_delete_file" state="Simulated"/>
                    <Component name="write_error_file" state="Simulated"/>
                    <Component name="write_skip_file" state="Simulated"/>
                    <Component name="check_ldap_entry" state="Enabled"/>
                    <Component name="iterate_entries" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="iterate_entries">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:sync_dns_simple_file}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="characterSet">@SUBSTITUTE{javascript ret.value = lcConf.file_encoding;}</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <RowLocking>SERIALIZABLE</RowLocking>
                        <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
//report counter result
load_message_bundle();

log4("INFO", "info_sync_result", "" + getCounterState(successCounter), "" + getCounterState(deleteCounter), "" + getCounterState(duplicateCounter),"" + getCounterState(failCounter));

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

console4("out", "info_sync_result", "" + getCounterState(successCounter), "" + getCounterState(deleteCounter), "" + getCounterState(duplicateCounter),"" + getCounterState(failCounter));
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_selectEntries">
                            <Name>before_selectEntries</Name>
                            <Script><![CDATA[
// before selection, check for Byte Order Marker (BOM)
check_for_BOM_at_BOF_and_skip_it( "sync_dns_simple_file");

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script><![CDATA[
incrementCounter(failCounter);

system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>

            <ContainerDF name="DataFlowContainer">
                <Script name="fixup_dn">
                    <parameter name="script"><![CDATA[
var dnVal = work.getString("$dn");

//if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++++++++ next dnVal in .in file is " + dnVal);
	task.logmsg("+++++++++ source_ldap_escape_dns is " + source_ldap_escape_dns);
}

if (dnVal != null) 
{
	dnVal = dnVal.trim();
	if(dnVal != "") 
	{
		if((source_ldap_escape_dns != null) && source_ldap_escape_dns) {
			var newDn = escape_dn(dnVal);
			if(newDn != dnVal) 
			{
//				if (js_trace_level.debug <= trace_javascript_level)
					task.logmsg("+++++++++ new dnVal post escaping is " + newDn);
				work.setAttribute("$dn", newDn);
			}
		}
	}
	else {
		incrementCounter(failCounter);
		system.skipEntry();
	}
}
else {
	incrementCounter(failCounter);
	system.skipEntry();
}

var uidVal = work.getString("uid");
//if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++++++++ next uidVal in .in file is " + uidVal);
}

if (uidVal != null)
{
	uidVal = uidVal.trim();
	if(uidVal != "")
	{
		work.setAttribute("uid", uidVal);
	}
	else
	{
		incrementCounter(failCounter);
		system.skipEntry();
	}
}

if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("$dn is " + work.getString("$dn"));
	task.logmsg("uid is " + work.getString("uid"));
}
]]></parameter>
                </Script>

                <Function name="lookup_dn">
                    <InheritFrom>/Functions/SourceRepositoryLookupFC</InheritFrom>
                    <ConnectorState>Enabled</ConnectorState>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
work.setAttribute("ret_status", conn.getString("$lookup_status"));
incrementCounter(failCounter);

log1("WARN", "err_lookup_dn", work.getString("$dn"));
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[

if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("dump work &&&&&&&&&&&&&&&&");
	task.dumpEntry(work);
	task.logmsg("dump conn &&&&&&&&&&&&&&&&");
	task.dumpEntry(conn);
}

// we now get the $dn from the ldap by looking up the user by uid.
// note we do this cautiously in case there is no uid, etc.
var uidAttrObj = work.getAttribute("uid");
// if there is a uid 
if (uidAttrObj != null)
{
	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("++++ CheckIfRemove: work.getAttribute( $dn ).getValue(0): " + uidAttrObj.getValue(0));
	}

	// lookup the user in ldap via uid.
	var searchCriteria = com.ibm.di.server.SearchCriteria("uid", com.ibm.di.server.SearchCriteria.EXACT, uidAttrObj.getValue(0));
	var ckEntry = check_ldap_entry.connector.findEntry(searchCriteria);

	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("ckEntry: %%%%%%%%%%%%%%%%%%%%% " + ckEntry);

	var dnFromLdapServer = "";
	// make sure the lookup by uid got data
	if (ckEntry != null) 
	{
		// we don't check for nulls below.
	    var dnInWork = work.getAttribute("$dn").getValue(0);
	    dnFromLdapServer = ckEntry.getAttribute("$dn").getValue(0);

		// switch $dn if necessary.
	    if  (dnInWork != dnFromLdapServer)
	    {
			if (js_trace_level.debug <= trace_javascript_level)
	        	task.logmsg("setting $dns in work to: " + dnFromLdapServer);
	        work.setAttribute("$dn", dnFromLdapServer);
	    }
	}

	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("dump dnFromLdapServer: " + dnFromLdapServer);
		task.logmsg("dump $dn in work: " + work.getAttribute("$dn").getValue(0));
	}
}

work.setAttribute("ret_status", conn.getString("$lookup_status"));

if (js_trace_level.info <= trace_javascript_level)
	task.logmsg("INFO: in success hook - $dn=" + work.getString("$dn") + ", status = " + work.getString("ret_status"));

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="functioncall_fail">
                            <Name>functioncall_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="functioncall_ok">
                            <Name>functioncall_ok</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="no_reply">
                            <Name>no_reply</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <SandboxConfig/>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>simple</Type>
                            <Simple>$dn</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>$lookup_operation</Name>
                            <Type>advanced</Type>
                            <Script>ret.value="lookup_user";</Script>
                            <Simple>$lookup_operation</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                </Function>

                <Branch name="notfound">
                    <ALMap name="set_vars">
                        <InheritFrom>[no inheritance]</InheritFrom>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <AttributeMapItem>
                                <Name>checkResult</Name>
                                <Type>advanced</Type>
                                <Script>ret.value = "init";</Script>
                            </AttributeMapItem>
                            <AttributeMapItem>
                                <Name>distinguishedName</Name>
                                <Type>advanced</Type>
                                <Script>ret.value = work.getString("$dn");</Script>
                            </AttributeMapItem>
                        </AttributeMap>
                        <State>Enabled</State>
                    </ALMap>
                    <Connector name="lookup_db_attrs">
                        <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                        <ConnectorMode>Lookup</ConnectorMode>
                        <ConnectorState>Enabled</ConnectorState>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                            <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        </Configuration>
                        <Parser>
                            <InheritFrom>[parent]</InheritFrom>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                        </Parser>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <AttributeMapItem>
                                <Name>*</Name>
                                <Type>simple</Type>
                                <Simple>*</Simple>
                            </AttributeMapItem>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <DeltaSettings/>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>distinguishedName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>email</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>guid</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>key</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>sourceUrl</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>uid</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                            <SchemaItem>
                                <Name>distinguishedName</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>email</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>guid</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>key</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>sourceUrl</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                            <SchemaItem>
                                <Name>uid</Name>
                                <Syntax>java.lang.String</Syntax>
                            </SchemaItem>
                        </Schema>
                        <LinkCriteria>
                            <InheritFrom>[parent]</InheritFrom>
                            <LinkCriteriaItem>
                                <Key>133b7311527</Key>
                                <Attribute>uid</Attribute>
                                <Operator>equals</Operator>
                                <Value>$uid</Value>
                            </LinkCriteriaItem>
                        </LinkCriteria>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                            <Hook name="default_fail">
                                <Name>default_fail</Name>
                                <Script><![CDATA[
incrementCounter(failCounter);
system.skipEntry();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                            <Hook name="lookup_fail">
                                <Name>lookup_fail</Name>
                                <Script><![CDATA[
incrementCounter(failCounter);
system.skipEntry();]]></Script>
                                <Enabled>true</Enabled>
                            </Hook>
                        </Hooks>
                        <CheckpointConfig/>
                        <SandboxConfig/>
                        <Reconnect>
                            <InheritFrom>[parent]</InheritFrom>
                            <ReconnectRules/>
                        </Reconnect>
                        <Operations/>
                        <PoolDefinition>
                            <InheritFrom>[parent]</InheritFrom>
                        </PoolDefinition>
                        <PoolInstance/>
                        <InitializeOption>0</InitializeOption>
                    </Connector>
                    <Branch name="doublecheck">
                        <Function name="checkifremove">
                            <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                            <ConnectorState>Enabled</ConnectorState>
                            <Schema name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Schema name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                            </Schema>
                            <Hooks>
                                <InheritFrom>[parent]</InheritFrom>
                                <Hook name="functioncall_fail">
                                    <Name>functioncall_fail</Name>
                                    <Script><![CDATA[var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", work.getString("$dn"));
write_error_file.connector.putEntry(outputEntry);
incrementCounter(failCounter);

throw error.getObject( "exception" );]]></Script>
                                    <Enabled>true</Enabled>
                                </Hook>
                            </Hooks>
                            <Configuration>
                                <InheritFrom>[parent]</InheritFrom>
                                <parameter name="assemblyLine">sync_all_dns_check_if_remove</parameter>
                                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                            </Configuration>
                            <SandboxConfig/>
                            <AttributeMap name="Input">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>checkResult</Name>
                                    <Type>simple</Type>
                                    <Simple>checkResult</Simple>
                                </AttributeMapItem>
                            </AttributeMap>
                            <AttributeMap name="Output">
                                <InheritFrom>[parent]</InheritFrom>
                                <AttributeMapItem>
                                    <Name>$dn</Name>
                                    <Type>simple</Type>
                                    <Simple>$dn</Simple>
                                </AttributeMapItem>
                                <AttributeMapItem>
                                    <Name>checkResult</Name>
                                    <Type>simple</Type>
                                    <Simple>checkResult</Simple>
                                </AttributeMapItem>
                            </AttributeMap>
                        </Function>
                        <ScriptCondition>return sync_updates_double_check</ScriptCondition>
                        <Conditions/>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>0</Type>
                    </Branch>
                    <Branch name="nodoublecheck">
                        <Script name="setcheck">
                            <parameter name="script"><![CDATA[
var checkingResult = work.getAttribute("checkResult");
checkingResult.setValue("remove");
]]></parameter>
                        </Script>
                        <Conditions/>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>2</Type>
                    </Branch>
                    <Branch name="delete">
                        <Branch name="showSummaryOnly">
                            <Script name="skipEntry">
                                <parameter name="script"><![CDATA[
var entryDN = work.getString("$dn");
var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", entryDN);
outputEntry.addAttributeValue("uid", work.getString("uid"));

write_delete_file.connector.putEntry(outputEntry);

incrementCounter(deleteCounter);

if (js_trace_level.debug <= trace_javascript_level)
	task.logmsg("+++++++show summary only is true. Will not do actual updates/delete. DN is:" + work.getString("$dn"));
system.skipEntry();
]]></parameter>
                            </Script>
                            <ScriptCondition>return syncUpdatesShowOnly</ScriptCondition>
                            <Conditions/>
                            <MatchAny>false</MatchAny>
                            <Enabled>true</Enabled>
                            <Type>0</Type>
                        </Branch>
                        <Branch name="perform delete or inactivate">
                            <Function name="delete or inactivate">
                                <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
                                <ConnectorState>Enabled</ConnectorState>
                                <Schema name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                    <SchemaItem>
                                        <Name>$_already_lookup_manager</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>$_already_lookup_secretary</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>$manager_uid</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>$operation</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>$secretary_uid</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>deleteActionFlag</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>distinguishedName</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>email</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>entryUID</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>guid</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>key</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>outputResult</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>sourceUrl</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>uid</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>usrState</Name>
                                    </SchemaItem>
                                </Schema>
                                <Schema name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                    <SchemaItem>
                                        <Name>$lookup_operation</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>$operation</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>*</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>deleteActionFlag</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>distinguishedName</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>email</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>entryUID</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>guid</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>key</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>outputResult</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>sourceUrl</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>uid</Name>
                                    </SchemaItem>
                                    <SchemaItem>
                                        <Name>usrState</Name>
                                    </SchemaItem>
                                </Schema>
                                <Hooks>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <Hook name="default_fail">
                                        <Name>default_fail</Name>
                                        <Script><![CDATA[
incrementCounter(failCounter);
]]></Script>
                                        <Enabled>true</Enabled>
                                    </Hook>
                                    <Hook name="default_ok">
                                        <Name>default_ok</Name>
                                        <Script><![CDATA[
usrState = work.getString("usrState");

if (usrState == "inactive")
	incrementCounter(duplicateCounter);
else
	incrementCounter(deleteCounter);
]]></Script>
                                        <Enabled>true</Enabled>
                                    </Hook>
                                </Hooks>
                                <Configuration>
                                    <InheritFrom>[parent]</InheritFrom>
                                    <parameter name="assemblyLine">SyncDBfromSource</parameter>
                                    <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                                    <parameter name="mode">2</parameter>
                                    <parameter name="operation">delete</parameter>
                                </Configuration>
                                <SandboxConfig/>
                                <AttributeMap name="Input">
                                    <InheritFrom>[parent]</InheritFrom>
                                    <AttributeMapItem>
                                        <Name>outputResult</Name>
                                        <Type>simple</Type>
                                        <Simple>outputResult</Simple>
                                    </AttributeMapItem>
                                </AttributeMap>
                                <AttributeMap name="Output">
                                    <InheritFrom>[parent]</InheritFrom>
                                    <AttributeMapItem>
                                        <Name>*</Name>
                                        <Type>simple</Type>
                                        <Simple>*</Simple>
                                    </AttributeMapItem>
                                </AttributeMap>
                            </Function>
                            <ScriptCondition>return performDeletionForSync</ScriptCondition>
                            <Conditions/>
                            <MatchAny>false</MatchAny>
                            <Enabled>true</Enabled>
                            <Type>1</Type>
                        </Branch>
                        <Branch name="no delete">
                            <Script name="record to file">
                                <parameter name="script"><![CDATA[
//no delete
var entryDN = work.getString("$dn");
var outputEntry = new com.ibm.di.entry.Entry();
outputEntry.addAttributeValue("$dn", entryDN);
outputEntry.addAttributeValue("uid", work.getString("uid"));
write_delete_file.connector.putEntry(outputEntry);

//deleteCounter++;
incrementCounter(deleteCounter);
retCode = 0;
]]></parameter>
                            </Script>
                            <Conditions/>
                            <MatchAny>false</MatchAny>
                            <Enabled>true</Enabled>
                            <Type>2</Type>
                        </Branch>
                        <Conditions>
                            <BranchCondition>
                                <LeftHand>checkResult</LeftHand>
                                <Operator>equals</Operator>
                                <RightHand>remove</RightHand>
                                <MatchAny>false</MatchAny>
                            </BranchCondition>
                        </Conditions>
                        <MatchAny>false</MatchAny>
                        <Enabled>true</Enabled>
                        <Type>0</Type>
                    </Branch>
                    <Conditions>
                        <BranchCondition>
                            <LeftHand>ret_status</LeftHand>
                            <Operator>equals</Operator>
                            <RightHand>nomatch</RightHand>
                            <MatchAny>false</MatchAny>
                        </BranchCondition>
                    </Conditions>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>0</Type>
                </Branch>
                <Branch name="process add">
                    <Function name="add_secretary_data">
                        <InheritFrom>/Functions/AddSecretaryDataFC</InheritFrom>
                        <ConnectorState>Enabled</ConnectorState>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                        </Hooks>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                        </Configuration>
                        <SandboxConfig/>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                    </Function>
                    <Function name="add_manager_data">
                        <InheritFrom>/Functions/AddManagerDataFC</InheritFrom>
                        <ConnectorState>Enabled</ConnectorState>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Hooks>
                            <InheritFrom>[parent]</InheritFrom>
                        </Hooks>
                        <Configuration>
                            <InheritFrom>[parent]</InheritFrom>
                        </Configuration>
                        <SandboxConfig/>
                        <AttributeMap name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                        <AttributeMap name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </AttributeMap>
                    </Function>
                    <Script name="processSync_add">
                        <parameter name="script"><![CDATA[
{
var theEntry = new com.ibm.di.entry.Entry();
var outputEntry = new com.ibm.di.entry.Entry();

if(!map_into_entry(db_from_ldap_array, theEntry)) {
	log1("ERROR", "err_mapping_failed_for_entry", work.getString("$dn"));
	outputEntry.addAttributeValue("$dn", work.getString("$dn"));
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	system.skipEntry();
}
if(!validate_existing(validate_dbrepos_field_array, theEntry)) {
	log1("ERROR", "warn_validation_failed_for_entry", work.getString("$dn"));
	outputEntry.addAttributeValue("$dn", work.getString("$dn"));
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	system.skipEntry();
}

create_extension_attribute_mappings(db_from_ldap_array, theEntry);

var dnValue = theEntry.getString("distinguishedName");
var uidValue = theEntry.getString("uid");

if(uidValue==null){
	task.logmsg("ERROR", "null uid value for entry: " + dnValue);
	outputEntry.addAttributeValue("$dn", dnValue);
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	system.skipEntry();
}
if((theEntry.getString("surname")==null) || (theEntry.getString("surname")=="")){
	task.logmsg("ERROR", "null surname for entry: " + dnValue);
	outputEntry.addAttributeValue("$dn", dnValue);
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	system.skipEntry();
}

if((theEntry.getString("displayName")==null) || (theEntry.getString("displayName")=="")){
	task.logmsg("ERROR", "null displayName for entry: " + dnValue);
	outputEntry.addAttributeValue("$dn", dnValue);
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	system.skipEntry();
}

// sync_dns_from_file
var tdiCRUDSvc = com.ibm.lconn.profiles.api.tdi.service.impl.ProfilesTDICRUDServiceImpl.getInstance();
try
{
	var store = true;
	if((sync_store_source_url==null) || (sync_store_source_url==false)){
		store = false;
	}
	if (js_trace_level.debug <= trace_javascript_level)
		task.logmsg("INFO", "currently processing entry: " + uidValue);

	// sync_dns_from_file
	var state = tdiCRUDSvc.syncProfileEntry(theEntry,store,sync_source_url_override,sync_source_url_enforce,sync_store_source_url,sync_updates_show_summary_only);
	
	//perform write to file
	var outputEntry = new com.ibm.di.entry.Entry();
	outputEntry.addAttributeValue("$dn", dnValue);
	if(state==0){
		write_add_file.connector.putEntry(outputEntry);
		incrementCounter(successCounter);
	}else if(state==1){
		write_update_file.connector.putEntry(outputEntry);
		incrementCounter(successCounter);
	}else if(state==2){
// the number of records written to this file does not currently match the duplicateCounter, 
// so do not enable this for now
//		write_dup_file.connector.putEntry(outputEntry);
		incrementCounter(duplicateCounter);
	}else if(state==3){
		write_skip_file.connector.putEntry(outputEntry);
	}
}catch(e){
	task.logmsg("******************************************************************************************************************");
	task.logmsg("******************************************************************************************************************");
	task.logmsg("ERROR", "Problem getting/updating entry: " + dnValue);
	outputEntry.addAttributeValue("$dn", dnValue);
	write_error_file.connector.putEntry(outputEntry);
	incrementCounter(failCounter);
	system.skipEntry();
}
}
]]></parameter>
                    </Script>
                    <Conditions/>
                    <MatchAny>false</MatchAny>
                    <Enabled>true</Enabled>
                    <Type>2</Type>
                </Branch>
                <Connector name="write_update_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="filePath">employee.update</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_add_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="filePath">employee.add</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_delete_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="filePath">employee.delete</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_error_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="filePath">employee.error</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
                <Connector name="write_skip_file">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="filePath">employee.skip</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.Simple</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

                <Connector name="check_ldap_entry">
                    <InheritFrom>/Connectors/FetchLDAPDataWithFilter</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Passive</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="automapADPassword">false</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="ldapAddAttr">false</parameter>
                        <parameter name="ldapAuthenticationMethod">Simple</parameter>
                        <parameter name="ldapBinaryAttributes"><![CDATA[GUID
objectGUID
objectSid]]></parameter>
                        <parameter name="ldapPageSize">0</parameter>
                        <parameter name="ldapPassword">@SUBSTITUTE{property.profiles:source_ldap_user_password}</parameter>
                        <parameter name="ldapReferrals">follow</parameter>
                        <parameter name="ldapReturnAttributes"><![CDATA[ibm-entryUuid
entryUUID
objectGUID
nsuniqueid
dominounid
GUID
*]]></parameter>
                        <parameter name="ldapSearchBase">@SUBSTITUTE{property.profiles:source_ldap_search_base}</parameter>
                        <parameter name="ldapSearchFilter">@SUBSTITUTE{property.profiles:source_ldap_search_filter}</parameter>
                        <parameter name="ldapSearchScope">subtree</parameter>
                        <parameter name="ldapSizeLimit">0</parameter>
                        <parameter name="ldapTimeLimit">0</parameter>
                        <parameter name="ldapUrl">@SUBSTITUTE{property.profiles:source_ldap_url}</parameter>
                        <parameter name="ldapUseSSL">@SUBSTITUTE{property.profiles:source_ldap_use_ssl}</parameter>
                        <parameter name="ldapUsername">@SUBSTITUTE{property.profiles:source_ldap_user_login}</parameter>
                        <parameter name="ldapVLVPageSize">0</parameter>
                        <parameter name="simulateRename">false</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>

            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="load_photos_from_ldap">
            <ModTime>1398114848536</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_photos}</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script><![CDATA[
print_version_info();  // load_photos_from_ldap
                    ]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "load_photos_from_ldap";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();


if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}

//Set Return code
var retCode = 0;
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="iterate_profiles" state="Enabled"/>
                    <Component name="DumpWorkEntry0" state="Enabled"/>
                    <Component name="filter_inactive_user" state="Enabled"/>
                    <Component name="lookup_user" state="Enabled"/>
                    <Component name="filter_no_photo" state="Enabled"/>
                    <Component name="DumpWorkEntry1" state="Enabled"/>
                    <Component name="indicateResult" state="Enabled"/>
                    <Component name="DumpWorkEntry2" state="Enabled"/>
                    <Component name="update_photo" state="Simulated"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig>
                <Logger name="IDIFileRoller">
                    <parameter name="IDIFileRoller.Encoding">UTF-8</parameter>
                    <parameter name="IDIFileRoller.File">logs/LoadPhotosFromFiles.log</parameter>
                    <parameter name="IDIFileRoller.RollCount">5</parameter>
                    <parameter name="Pattern.ConversionPattern">%d{ISO8601} %-5p [%c] - %m%n</parameter>
                    <parameter name="com.ibm.di.log.appender">IDIFileRoller</parameter>
                    <parameter name="com.ibm.di.log.layout">Pattern</parameter>
                    <parameter name="com.ibm.di.log.level">INFO</parameter>
                    <parameter name="enabled">true</parameter>
                </Logger>
            </LogConfig>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="iterate_profiles">
                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="iterator_return_key_data_only">true</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>simple</Type>
                            <Simple>distinguishedName</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>email</Name>
                            <Type>simple</Type>
                            <Simple>email</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>guid</Name>
                            <Type>simple</Type>
                            <Simple>guid</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>key</Name>
                            <Type>simple</Type>
                            <Simple>key</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>sourceUrl</Name>
                            <Type>simple</Type>
                            <Simple>sourceUrl</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>sys_usrState</Name>
                            <Type>simple</Type>
                            <Simple>sys_usrState</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>uid</Name>
                            <Type>simple</Type>
                            <Simple>uid</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode)
{
	task.logmsg("Assembly: " + "load_photos_from_ldap" + ", hook: after_close, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");  //  load_photos_from_ldap
write_return_code(retCode, outFileName);

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode)
{
	task.logmsg("Assembly: " + "load_photos_from_ldap" + ", hook: after_close, wrote to fle: " + retCode  );
}


log3("INFO", "info_iteration_result2", "" + getCounterState(successCounter),
													"" + getCounterState(failCounter), "" + lastSuccessfulUid);

console3("out", "info_iteration_result2", "" + getCounterState(successCounter), 
													"" + getCounterState(failCounter), "" + lastSuccessfulUid);

lcIterUtil.report();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script><![CDATA[
var lastSuccessfulUid = null;

// this is the overall counter
lcIterUtil.reset();

var successCounter = "successCounter";
var failCounter = "failCounter";

//clear counter result
clearCounter(successCounter);
clearCounter(failCounter);

//re-create counter
createCounter(successCounter);
createCounter(failCounter);
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script>retCode=0;</Script>
                            <Enabled>false</Enabled>
                        </Hook>

                        <Hook name="before_getnext">
                            <Name>before_getnext</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>

                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script><![CDATA[

retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("Assembly: " + "load_photos_from_ldap" + ", hook: close_fail, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <Name>connect_init</Name>
                            <Script><![CDATA[

// hook is badly named, it means connector initialization failed

retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) 
{
	task.logmsg("Assembly: " + "load_photos_from_ldap" + ", hook: connect_init, retcode: " + retCode  );
}

consoleMsg("err", error.getString("exception"));
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

system.abortAssemblyLine(error.getString("exception"));
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "load_photos_from_ldap" + ", hook: default_fail, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
//retCode=0;
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: get_fail, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: initialize_fail, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>

                        <Hook name="on_connection_failure">
                            <Name>on_connection_failure</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: on_connection_failure, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

            </ContainerEF>
            <ContainerDF name="DataFlowContainer">

                <Script name="DumpWorkEntry0">
                    <parameter name="script"><![CDATA[
// Dump the work entry
//task.logmsg("load_photos_from_ldap: DumpWorkEntry0: from iterator");
//task.dumpEntry(work);
]]></parameter>
                </Script>

                <Script name="filter_inactive_user">
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[
var tmp = work.getString("sys_usrState");
if (tmp == null || !tmp.equals("active")) 
{
//	if (js_trace_level.finer <= trace_javascript_level)
	{
		var hash_id = work.getString("uid");
		task.logmsg("+++++++ load_photos_from_ldap: filter_inactive_user: work entry: uid: " + hash_id);		   //qqq
		task.dumpEntry(work);																									   //qqq
	}
	system.skipEntry();
}
]]></parameter>
                </Script>


                <Connector name="lookup_user">
                    <InheritFrom>/Connectors/LDAPLookupUser</InheritFrom>
                    <ConnectorMode>Lookup</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>12bca2772d7</Key>
                            <Attribute>$dn</Attribute>
                            <Operator>equals</Operator>
                            <Value>$$dn</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[

//	if (js_trace_level.finer <= trace_javascript_level)
	{
		var hash_id = work.getString("uid");
		task.logmsg("+++++++ load_photos_from_ldap: lookup_nomatch in ldap: work entry: uid: " + hash_id);		   //qqq
		task.dumpEntry(work);																									   //qqq
	}

incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;
system.skipEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

                <Script name="filter_no_photo">
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[
var photoAttrName = system.getTDIProperty("profiles", "load_photos_from_ldap_attr_name");

if ((photoAttrName == null ) || (photoAttrName == ""))
{
	system.abortAssemblyLine("ERROR: then name of the ldap phote attribute not supplied by property load_photos_from_ldap_attr_name in profiles_tdi.properties.  Aborting.");
}

var tmp = work.getString( photoAttrName);
if (tmp == null || tmp.equals("")) 
{
	if (js_trace_level.finer <= trace_javascript_level)
	{
		task.dumpEntry(work);																									   //qqq
	}
	system.skipEntry();
}
]]></parameter>
                </Script>

                <Script name="DumpWorkEntry1">
                    <parameter name="script"><![CDATA[
// Dump the work entry
//task.logmsg("load_photos_from_files: DumpWorkEntry1: before update_phote");
//task.dumpEntry(work);

]]></parameter>
                </Script>

                <ALMap name="indicateResult">
                    <AttributeMap name="Input">
                        <AttributeMapItem>
                            <Name>image</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>

                                <Script><![CDATA[
	var photoAttrName = system.getTDIProperty("profiles", "load_photos_from_ldap_attr_name");
	var photoObj = work.getObject(photoAttrName);

	if (js_trace_level.debug <= trace_javascript_level)
	{
		task.logmsg("load_photos_from_files: photoObj: " + photoObj);
		task.logmsg("load_photos_from_files: photoObj.length: " + photoObj.length);
	}

	ret.value = photoObj;

]]></Script>


                            <Simple>photo</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>

                <Script name="DumpWorkEntry2">
                    <parameter name="script"><![CDATA[
// Dump the work entry
//task.logmsg("load_photos_from_files: DumpWorkEntry1: before update_phote");
//task.dumpEntry(work);

]]></parameter>
                </Script>

                <Connector name="update_photo">
                    <InheritFrom>system:/Connectors/PhotoConnector</InheritFrom>
                    <ConnectorMode>Update</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_photos}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings/>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>fileType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>image</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>linkStream</Name>
                            <Syntax>java.io.InputStream</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>fileType</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>image</Name>
                            <Syntax>[byte array]</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>updated</Name>
                            <Syntax>java.util.Date</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                        <LinkCriteriaItem>
                            <Key>1371924cc40</Key>
                            <Attribute>key</Attribute>
                            <Operator>equals</Operator>
                            <Value>$key</Value>
                        </LinkCriteriaItem>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="after_reply">
                            <Name>after_reply</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="callreply_fail">
                            <Name>callreply_fail</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="callreply_ok">
                            <Name>callreply_ok</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
incrementCounter(failCounter);
lcIterUtil.incr();

retCode = 1;
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
lastSuccessfulUid = work.getString("uid");
incrementCounter(successCounter);
lcIterUtil.incr();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="no_reply">
                            <Name>no_reply</Name>
                            <Script>retCode = 1;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="generate_iterate_chunk_array">
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">false</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
assemblyName = "generate_iterate_chunk_array";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();
//load_message_bundle();

var chunk_attribute_name;
var chunk_attribute_name = system.getTDIProperty("profiles", "step1_iterate_chunk_attribute_name");
if ((chunk_attribute_name == null) || (chunk_attribute_name == ""))
{
	system.abortAssemblyLine("chunk_attribute_name, e.g., guid, uid, property not defined.  Aborting.");
}

var chunk_output_file_name = system.getTDIProperty("profiles", "step1_iterate_chunk_array_output_file");
if ((chunk_output_file_name == null) || (chunk_output_file_name == ""))
{
	system.abortAssemblyLine("step1_iterate_chunk_array_output_file property not defined.  Aborting.");
}

var chunk_null_ok_bool = false;
var chunk_null_ok_str = system.getTDIProperty("profiles", "step1_iterate_chunk_attribute_null_ok");
if (chunk_null_ok_str == null) 
{
	system.abortAssemblyLine("step1_iterate_chunk_attribute_null_ok = [true | false] property not defined. Aborting.");
}

if ((chunk_null_ok_str == "true") || (chunk_null_ok_str == "TRUE"))
{
	chunk_null_ok_bool = true;
}

var chunk_sync_source_url_bool = false;
var chunk_sync_source_url = null;
var sync_source_url_enforce_str = system.getTDIProperty("profiles", "sync_source_url_enforce");
if (sync_source_url_enforce_str == null) 
{
	system.abortAssemblyLine("sync_source_url_enforce = [true | false] property not defined.  Aborting.");
}

if ((sync_source_url_enforce_str == "true") || (sync_source_url_enforce_str == "TRUE"))
{
	chunk_sync_source_url_bool = true;
	chunk_sync_source_url = system.getTDIProperty("profiles", "step1_iterate_chunk_sync_source_url");

	if ((chunk_sync_source_url == null) || (chunk_sync_source_url == ""))
	{
		system.abortAssemblyLine("step1_iterate_chunk_sync_source_url has no value but sync_source_url_enforce is true. Aborting.");
	}
}


var itCounter = 0;

var chunk_size_str = system.getTDIProperty("profiles", "step1_iterate_chunk_size");
if ((chunk_size_str == null) || (chunk_size_str == ""))
	system.abortAssemblyLine("step1_iterate_chunk_size has no value. Aborting.");

try
{
	var ichunk_size = java.lang.Integer.parseInt( chunk_size_str);
}
catch(e)
{
	system.abortAssemblyLine("step1_iterate_chunk_size: " + e);
}



]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>

                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Script><![CDATA[
{
	var ix = 0;

	consoleMsg("out", "********** itCounter: " + itCounter);

	attrStrArray = new java.lang.String[itCounter];

 	var attrfile = new java.io.File(chunk_output_file_name);
 	attrfileRdr = new java.io.FileReader( attrfile);
 	bufferedRdr = new java.io.BufferedReader(attrfileRdr);
 
 	while ((line = bufferedRdr.readLine()) != null) {
		attrStrArray[ix++] = line;
 	}
 	attrfileRdr.close();

	java.util.Arrays.sort(attrStrArray, java.lang.String.CASE_INSENSITIVE_ORDER);

 	attrfileWriter = new java.io.FileWriter( attrfile);
 	bufferedWriter = new java.io.BufferedWriter(attrfileWriter);

	ix = 0;

 	while (ix < itCounter) {
// 		consoleMsg("out", "********** attrStrArray[ix]: " + attrStrArray[ix]);

		if (((ix + 1) % ichunk_size) == 0)
		{
			console2("out", "disp_iteration_count", "" + new Date(), "" + (ix +1));
			bufferedWriter.write( "\"" + attrStrArray[ix] + "\",\n");
		}
		ix++;
 	}

 	bufferedWriter.close();

}
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>

            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="iterate_profiles" state="Enabled"/>
                    <Component name="get_fields" state="Enabled"/>
                    <Component name="write_out" state="Simulated"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="iterate_profiles">

                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="iterator_return_key_data_only">true</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Simple>*</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>simple</Type>
                            <Simple>distinguishedName</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>

                        <Hook name="after_getnext">
                            <Name>after_getnext</Name>
                            <Script><![CDATA[

//   	task.logmsg("********************* dump conn ");
//    	task.dumpEntry(conn);
//  	system.skipEntry();

if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("chunk sys_usrState: " + state);

	if (js_trace_level.finer == trace_javascript_level)
 		task.dumpEntry(conn);
}

// skip inactive users
var state = conn.getString("sys_usrState");

if (state == null || ! state.equals("active"))
{
	system.skipEntry();
}

if (chunk_sync_source_url_bool)
{
	var sourceUrl = conn.getString("sourceUrl");

// 	consoleMsg("out", "********** sourceUrl: " + sourceUrl);
// 	consoleMsg("out", "********** chunk_sync_source_url: " + chunk_sync_source_url);
// 	system.abortAssemblyLine("Aborting.");


	if (sourceUrl == null || ! sourceUrl.equals(chunk_sync_source_url))
	{
		system.skipEntry();
	}
}


itCounter = itCounter + 1;

if ((itCounter % ichunk_size) == 0)
{
	console2("out", "disp_iteration_count", "" + new Date(), "" + itCounter);
}
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>

                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>


            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Connector name="get_fields">
                    <ConnectorMode>Script</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration/>
                    <ConnectorScript><![CDATA[
// task.logmsg("********************* dump work ");
// task.dumpEntry(work);

var chunk_val;

chunk_val = work.getString( chunk_attribute_name);
// consoleMsg("out", "********** chunk_val: " + chunk_val);

// if no value, e.g., no email, skip
if (chunk_val == null || chunk_val.equals(""))
{
	if (! chunk_null_ok_bool)
	{
		consoleMsg("out", "********** Null chunk attribute value encountered, but not allowed. Aborting.");
		system.abortAssemblyLine("Null chunk attribute value encountered, but not allowed. ");
	}

	itCounter--;
	consoleMsg("out", "********** Chunk attribute value is null or empty string, which is permitted.");
	system.skipEntry();
}

var chunkAttr = work.newAttribute("$chunk");

chunkAttr.setValue( chunk_val);

]]></ConnectorScript>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input"/>
                    <AttributeMap name="Output"/>
                    <DeltaSettings>
                        <Driver>BTree</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria/>
                    <Hooks/>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>

                <Connector name="write_out">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <UserComment/>
                        <InheritFrom>[parent]</InheritFrom>
						<parameter name="debug">@SUBSTITUTE{property.profiles:debug_collect}</parameter>
                        <parameter name="filePath">@SUBSTITUTE{property.profiles:step1_iterate_chunk_array_output_file}</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <UserComment/>
		                <InheritFrom>system:/Parsers/ibmdi.LineReader</InheritFrom>
		                <parameter name="attributeName">$chunk</parameter>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="debug">false</parameter>
                        <parameter name="userComment"/>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>


                    <Name>$chunk</Name>
                    <Type>simple</Type>
                    <Simple>$chunk</Simple>

                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script><![CDATA[

// 	task.dumpEntry(work);

//     if(fieldnameArray != null) {
// 	var uidValue = work.getString("uid");
// 	if(uidValue != null) {
// 		var uidAttr = conn.newAttribute("uid");
// 		uidAttr.setValue(uidValue);
// 		for(k in fieldnameArray) {
// 			var anAttr = conn.newAttribute(k);
// 			anAttr.setValue(fieldnameArray[k]);
// 		}
// 	}
// 	else {
// 		system.skipEntry();
// 	}
// }
// else {
// 	system.skipEntry();
// }
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="initreconnect">false</parameter>
                        <parameter name="numberOfRetries">1</parameter>
                        <parameter name="retryDelay">10</parameter>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>

					 
    <AssemblyLine name="create_timestamp_file_assembly">
      <LogEnabled>true</LogEnabled>
      <Settings>
        <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
        <parameter name="automapattributes">false</parameter>
        <parameter name="createTombstones">false</parameter>
        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_draft}</parameter>
        <parameter name="includeGlobalPrologs">true</parameter>
        <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
      </Settings>
      <Hooks>
        <Hook name="prolog">
          <Name>prolog</Name>
          <Script>print_version_info();  // create_timestamp_file_assembly</Script>
          <Enabled>true</Enabled>
        </Hook>
        <Hook name="prolog0">
          <Name>prolog0</Name>
          <Script><![CDATA[
assemblyName = "create_timestamp_file_assembly";
check_40_Properties_in_profiles();

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

if (js_trace_level.off < trace_javascript_level)
{
	task.logmsg("trace_javascript level :  " + trace_javascript_level_str);
	task.logmsg("assembly: " + assemblyName + " : ENTER");
}
]]></Script>
          <Enabled>true</Enabled>
          <DebugBreak>false</DebugBreak>
        </Hook>
      </Hooks>
      <CheckpointConfig />
      <SandboxConfig />
      <SimulationConfig>
        <SimulationStates>
          <Component name="create_timestamp_file" state="Enabled" />
        </SimulationStates>
        <ProxySettings />
      </SimulationConfig>
      <LogConfig />
      <ContainerEF name="EntryFeedContainer" />
      <ContainerDF name="DataFlowContainer">
        <Connector name="create_timestamp_file">
          <ConnectorMode>Script</ConnectorMode>
          <ConnectorState>Enabled</ConnectorState>
          <Configuration />
          <ConnectorScript><![CDATA[
var append_filename_str = main.commandLineParam("0");
	task.logmsg("append_filename_str :  " + append_filename_str);
if(append_filename_str != null) {
	var now = new Date();
//	var timeStamp = ":" + now.getFullYear + ":" + (now.getMonth + 1) + ":" + now.getSate;

	var year = now.getYear();
	year = year + 1900;

	var month = now.getMonth();
	month = month + 1;
	monthStr = month.toString();
	if (month <= 9)
		monthStr = "0" + monthStr;

	var day = now.getDate();
	dayStr = day.toString();
	if (day <= 9)
		dayStr = "0" + dayStr;

	var hour = now.getHour();
	hourStr = hour.toString();
	if (hour <= 9)
		hourStr = "0" + hourStr;

	var minute = now.getMinutes();
	minuteStr = minute.toString();
	if (minute <= 9)
		minuteStr = "0" + minuteStr;

	var second = now.getSeconds();
	secondStr = second.toString();
	if (second <= 9)
		secondStr = "0" + secondStr;

	var timeStamp = year.toString() + monthStr + dayStr + hourStr + minuteStr + secondStr;

	var outFileName = "_tdiTimesamp_" + append_filename_str + ".txt";
	write_return_code( timeStamp, outFileName);

/* 
function getTimeStamp() {
     var now = new Date();
     return ((now.getMonth() + 1) + '/' +
             (now.getDate()) + '/' +
              now.getFullYear() + " " +
              now.getHours() + ':' +
              ((now.getMinutes() < 10)
                  ? ("0" + now.getMinutes())
                  : (now.getMinutes())) + ':' +
              ((now.getSeconds() < 10)
                  ? ("0" + now.getSeconds())
                  : (now.getSeconds())));
 }
*/

}
]]></ConnectorScript>
          <ComputeChanges>true</ComputeChanges>
          <DeltaBehavior>0</DeltaBehavior>
          <DeltaStrict>true</DeltaStrict>
          <Parser>
            <Schema name="Input">
              <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
              <InheritFrom>[parent]</InheritFrom>
            </Schema>
          </Parser>
          <AttributeMap name="Input" />
          <AttributeMap name="Output" />
          <DeltaSettings>
            <Driver>BTree</Driver>
          </DeltaSettings>
          <Schema name="Input">
            <InheritFrom>[parent]</InheritFrom>
          </Schema>
          <Schema name="Output">
            <InheritFrom>[parent]</InheritFrom>
          </Schema>
          <LinkCriteria />
          <Hooks />
          <CheckpointConfig />
          <SandboxConfig />
          <Reconnect>
            <InheritFrom>[parent]</InheritFrom>
            <ReconnectRules />
          </Reconnect>
          <Operations />
          <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
          <PoolDefinition>
            <InheritFrom>[parent]</InheritFrom>
          </PoolDefinition>
          <PoolInstance />
          <InitializeOption>0</InitializeOption>
        </Connector>
      </ContainerDF>
      <ThreadOptions />
      <Operations />
      <InitParams>
        <Schema name="AssemblyLineInitParams" />
      </InitParams>
    </AssemblyLine>


    <AssemblyLine name="delete_timestamp_records">
        <ModTime>1434489866473</ModTime>
        <Settings/>
        <Hooks/>
        <CheckpointConfig/>
        <SandboxConfig/>
        <SimulationConfig>
            <SimulationStates>
                <Component name="Output" state="Simulated"/>
                <Component name="Input" state="Enabled"/>
            </SimulationStates>
            <ProxySettings/>
        </SimulationConfig>
        <LogConfig/>
        <ContainerEF name="EntryFeedContainer">
            <ModTime>1434489772823</ModTime>
            <Connector name="Input">
                <InheritFrom>system:/Connectors/ibmdi.Database</InheritFrom>
                <ModTime>1434489772823</ModTime>
                <ConnectorMode>Iterator</ConnectorMode>
                <ConnectorState>Enabled</ConnectorState>
                <Configuration>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1434489579168</ModTime>
                    <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                    <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                    <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                    <parameter name="jdbcSchema">EMPINST</parameter>
                    <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
					<parameter name="jdbcTable">@SUBSTITUTE{property.profiles:sync_updates_timestamp_table}</parameter>
                </Configuration>
                <Parser>
                    <InheritFrom>[parent]</InheritFrom>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                </Parser>
                <AttributeMap name="Input">
                    <ModTime>1434489772823</ModTime>
                    <AttributeMapItem>
                        <Name>*</Name>
                        <Type>simple</Type>
                        <Simple>*</Simple>
                    </AttributeMapItem>
                </AttributeMap>
                <AttributeMap name="Output"/>
                <DeltaSettings>
                    <ModTime>1434489375106</ModTime>
                    <WhenToCommit>After every database operation</WhenToCommit>
                    <RowLocking>SERIALIZABLE</RowLocking>
                    <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                </DeltaSettings>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1434489742269</ModTime>
                    <SchemaItem>
                        <Name>LDAP_MOD_TIMESTAMP</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>MARK</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>PROF_KEY</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
                <LinkCriteria/>
                <Hooks/>
                <CheckpointConfig/>
                <SandboxConfig/>
                <Reconnect>
                    <InheritFrom>[parent]</InheritFrom>
                    <ReconnectRules/>
                </Reconnect>
                <Operations/>
                <PoolDefinition>
                    <InheritFrom>[parent]</InheritFrom>
                </PoolDefinition>
                <PoolInstance/>
            </Connector>
        </ContainerEF>
        <ContainerDF name="DataFlowContainer">
            <ModTime>1434489866473</ModTime>
            <Connector name="Output">
                <InheritFrom>system:/Connectors/ibmdi.Database</InheritFrom>
                <ModTime>1434489866473</ModTime>
                <ConnectorMode>Delete</ConnectorMode>
                <ConnectorState>Enabled</ConnectorState>
                <Configuration>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1434489655187</ModTime>
                    <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                    <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                    <parameter name="jdbcSchema">EMPINST</parameter>
                    <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
					<parameter name="jdbcTable">@SUBSTITUTE{property.profiles:sync_updates_timestamp_table}</parameter>
                </Configuration>
                <Parser>
                    <InheritFrom>[parent]</InheritFrom>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                </Parser>
                <AttributeMap name="Input"/>
                <AttributeMap name="Output"/>
                <DeltaSettings/>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1434489826891</ModTime>
                    <SchemaItem>
                        <Name>LDAP_MOD_TIMESTAMP</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>MARK</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>PROF_KEY</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
                <LinkCriteria>
                    <ModTime>1434489866473</ModTime>
                    <LinkCriteriaItem>
                        <Key>14dfe41c91b</Key>
                        <Attribute>PROF_KEY</Attribute>
                        <Operator>equals</Operator>
                        <Value>$PROF_KEY</Value>
                    </LinkCriteriaItem>
                </LinkCriteria>
                <Hooks/>
                <CheckpointConfig/>
                <SandboxConfig/>
                <Reconnect>
                    <InheritFrom>[parent]</InheritFrom>
                    <ReconnectRules/>
                </Reconnect>
                <Operations/>
                <PoolDefinition>
                    <InheritFrom>[parent]</InheritFrom>
                </PoolDefinition>
                <PoolInstance/>
            </Connector>
        </ContainerDF>
        <ThreadOptions/>
        <Operations/>
        <InitParams>
            <Schema name="AssemblyLineInitParams"/>
        </InitParams>
    </AssemblyLine>


        <AssemblyLine name="write_timestamp_table_TEST">
            <ModTime>1398114853184</ModTime>
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="findreturncount">10</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="includePrologs">sync_dns_utilities</parameter>
                <parameter name="maxerr"/>
                <parameter name="maxread"/>
                <parameter name="nullBehavior">Null</parameter>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
                <parameter name="nullBehaviorValue"/>
                <parameter name="nullDefinition"/>
                <parameter name="nullDefinitionValue"/>
            </Settings>
            <Hooks>
                <Hook name="epilog2">
                    <Name>epilog2</Name>
                    <Script><![CDATA[
log0("INFO", "write_timestamp_table_TEST");
console0("INFO", "write_timestamp_table_TEST");
consoleMsg("out", "**********");
logmsg("INFO", "**********");

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "write_timestamp_table_TEST" + ", hook: epilog2, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="onfailure">
                    <Name>onfailure</Name>
                    <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "write_timestamp_table_TEST" + ", hook: onfailure, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="prolog">
                    <Name>prolog</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[
retCode = 0;

//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf(true);
lcIterUtil.reset();

//--------------------------------------------------------------
// Set up the hash parameters
//--------------------------------------------------------------
var sync_updates_hash_field = lcConf.sync_updates_hash_field;
var sync_updates_hash_partitions = lcConf.sync_updates_hash_partitions;
var sync_updates_working_directory = lcConf.sync_updates_working_directory;

//--------------------------------------------------------------
// Setup working directory
//--------------------------------------------------------------
lcSyncDnsUtils.resetTempFiles(".dbids");

consoleMsg("out", "**********");
logmsg("INFO", "**********");
log0("INFO", "info_begin_hash_db");
console0("INFO", "info_begin_hash_db");
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="iterate_profiles" state="Enabled"/>
                    <Component name="map_hash_column" state="Enabled"/>
                    <Component name="filter_no_hash_column" state="Enabled"/>
                    <Component name="filter_inactive_user" state="Enabled"/>
                    <Component name="LookupMemTimestampSource" state="Enabled"/>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                    <Component name="PopMemTimestamp" state="Enabled"/>
                    <Component name="write_partitions" state="Simulated"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig/>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="iterate_profiles">
                    <InheritFrom>system:/Connectors/ProfileConnector</InheritFrom>
                    <ConnectorMode>Iterator</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="iterator_return_key_data_only">true</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                    </Configuration>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>simple</Type>
                            <Simple>distinguishedName</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>email</Name>
                            <Type>simple</Type>
                            <Simple>email</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>guid</Name>
                            <Type>simple</Type>
                            <Simple>guid</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>key</Name>
                            <Type>simple</Type>
                            <Simple>key</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>sourceUrl</Name>
                            <Type>simple</Type>
                            <Simple>sourceUrl</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>sys_usrState</Name>
                            <Type>simple</Type>
                            <Simple>sys_usrState</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>uid</Name>
                            <Type>simple</Type>
                            <Simple>uid</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <DeltaSettings>
                        <UniqueAttribute/>
                        <WhenToCommit>After every database operation</WhenToCommit>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>distinguishedName</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>email</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>guid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>key</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>sourceUrl</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>uid</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>usrState</Name>
                            <Syntax>java.lang.String</Syntax>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_close">
                            <Name>after_close</Name>
                            <Script><![CDATA[
if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: after_close, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_execute">
                            <Name>before_execute</Name>
                            <Script>retCode=0;</Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="before_getnext">
                            <Name>before_getnext</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="close_fail">
                            <Name>close_fail</Name>
                            <Script><![CDATA[

retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: close_fail, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <Name>connect_init</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: connect_init, retcode: " + retCode  );
}

consoleMsg("err", error.getString("exception"));
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

system.abortAssemblyLine(error.getString("exception"));
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: default_fail, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="default_ok">
                            <Name>default_ok</Name>
                            <Script><![CDATA[
retCode=0;

if (js_trace_level.finer <= trace_javascript_level) {
	var follow_id = system.getTDIProperty("profiles", "trace_profile_tdi_follow");
	if (follow_id == null)
		follow_id = "*";
	var hash_id = work.getString(sync_updates_hash_field);
	if ((follow_id == "*") || ((hash_id != null) && (hash_id == follow_id)))
	{
		task.logmsg("+++++++ about to dump sync_all_dns_hash_db: iterate_profiles: work entry: hash_id: " + hash_id);
		task.dumpEntry(work);
	}
}
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="get_fail">
                            <Name>get_fail</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: get_fail, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: initialize_fail, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

throw error.getObject( "exception" );
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="on_connection_failure">
                            <Name>on_connection_failure</Name>
                            <Script><![CDATA[
retCode=1;

if ((js_trace_level.debug <= trace_javascript_level) || js_trace_retcode) {
	task.logmsg("Assembly: " + "sync_all_dns_hash_db" + ", hook: on_connection_failure, retcode: " + retCode  );
}

var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

var outFileName1 = "./_tdihdb.rc";
write_return_code(retCode, outFileName1);

]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance/>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <ALMap name="map_hash_column">
                    <InheritFrom>[no inheritance]</InheritFrom>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>hash_column</Name>
                            <Type>advanced</Type>
                            <Script><![CDATA[
// only email case insensitive
if (js_trace_level.debug <= trace_javascript_level)
{
	task.logmsg("+++++++ assembly: sync_all_dns_hash_db; connector: map_hash_column: lcConf.sync_updates_hash_email_bool: " + lcConf.sync_updates_hash_email_bool);
	task.logmsg("+++++++ assembly: sync_all_dns_hash_db; connector: map_hash_column: work entry: sync_updates_hash_field: " + sync_updates_hash_field);
}

var tmp = work[sync_updates_hash_field];

if (tmp == null || tmp.getValue() == null) {
	ret.value = null;
} 
else {
	var retValue = tmp.getValue().toString();
	if (lcConf.sync_updates_hash_email_bool)
		retValue = retValue.toLowerCase();
	ret.value = retValue;
}

if (js_trace_level.debug <= trace_javascript_level)
{
	if (tmp != null)
		task.logmsg("+++++++ assembly: sync_all_dns_hash_db; connector: map_hash_column: tmp.getValue(): " + tmp.getValue());
	task.logmsg("+++++++ assembly: sync_all_dns_hash_db; connector: map_hash_column: work entry: ret.value: " + ret.value);
}
]]></Script>
                        </AttributeMapItem>
                    </AttributeMap>
                    <State>Enabled</State>
                </ALMap>
                <Script name="filter_no_hash_column">
                    <parameter name="script"><![CDATA[
// in the previous component - map_hash_column - the value of the work item determined by 
// "sync_updates_hash_field" is placed in the "hash_column" work item.  We pick this value up here
// in "tmp".

var tmp = work.getString("hash_column");

if (tmp == null || tmp.length() == 0) {
	if (js_trace_level.debug <= trace_javascript_level)
	{
		var hash_id = work.getString(sync_updates_hash_field);
		task.logmsg("+++++++ about to dump sync_all_dns_hash_db: filter_no_hash_column: work entry: hash_id: " + hash_id);
		task.dumpEntry(work);
	}

	var msgText = "sync hash must be ...";
	system.skipEntry();
}
]]></parameter>
                </Script>
                <Script name="filter_inactive_user">
                    <parameter name="enabled">true</parameter>
                    <parameter name="script"><![CDATA[
var tmp = work.getString("sys_usrState");
if (tmp == null || !tmp.equals("active")) {
	if (js_trace_level.finer <= trace_javascript_level)
	{
		var hash_id = work.getString(sync_updates_hash_field);
		task.logmsg("+++++++ about to dump sync_all_dns_hash_db: filter_inactive_user: work entry: hash_id: " + hash_id);		   //qqq
		task.dumpEntry(work);																									   //qqq
	}
	system.skipEntry();
}
]]></parameter>
                </Script>

            <Connector name="LookupMemTimestampSource">
                <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                <ConnectorMode>Lookup</ConnectorMode>
                <ConnectorState>Disabled</ConnectorState>
                <Configuration>
                    <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">false</parameter>
                    <parameter name="jdbcAutoCreateTable">false</parameter>
                    <parameter name="jdbcCommit">After every database operation</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                    <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                    <parameter name="jdbcPreparedStatement">true</parameter>
                    <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
					<parameter name="jdbcTable">@SUBSTITUTE{property.profiles:sync_updates_timestamp_table}</parameter>
                </Configuration>
                <Parser>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425656624339</ModTime>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1425656624338</ModTime>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1425656624338</ModTime>
                    </Schema>
                </Parser>
                <AttributeMap name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>db_ldap_mod_timestamp</Name>
                            <Type>simple</Type>
                            <Simple>LDAP_MOD_TIMESTAMP</Simple>
                        </AttributeMapItem>
                </AttributeMap>
                <AttributeMap name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </AttributeMap>
                <DeltaSettings/>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                    <SchemaItem>
                        <Name>PROF_KEY</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>MARK</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                </Schema>
                <LinkCriteria>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425661318202</ModTime>
                    <LinkCriteriaItem>
                        <Key>14bf008c906</Key>
                        <Attribute>PROF_KEY</Attribute>
                        <Operator>equals</Operator>
                        <Value>$key</Value>
                    </LinkCriteriaItem>
                </LinkCriteria>

                <Hooks>
                        <Hook name="default_fail">
                            <Name>default_fail</Name>
                            <Script><![CDATA[
system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                        <Hook name="lookup_nomatch">
                            <Name>lookup_nomatch</Name>
                            <Script><![CDATA[
system.ignoreEntry();
]]></Script>
                            <Enabled>true</Enabled>
                        </Hook>
                </Hooks>

                <CheckpointConfig/>
                <SandboxConfig/>
                <Reconnect>
                    <InheritFrom>[parent]</InheritFrom>
                    <ReconnectRules/>
                </Reconnect>
                <Operations/>
                <PoolDefinition>
                    <InheritFrom>[parent]</InheritFrom>
                </PoolDefinition>
                <PoolInstance/>
            </Connector>



                <Script name="DumpWorkEntry">
                    <parameter name="script"><![CDATA[
// Dump the work entry
//  task.logmsg("$$$$$$$$$$$$$$$$$$ ");
//  task.dumpEntry(work);
]]></parameter>
                </Script>

            <Connector name="PopMemTimestamp">
                <InheritFrom>system:/Connectors/ibmdi.JDBC</InheritFrom>
                <ConnectorMode>AddOnly</ConnectorMode>
                <ConnectorState>Enabled</ConnectorState>
                <Configuration>
                    <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">false</parameter>
                    <parameter name="jdbcAutoCreateTable">false</parameter>
                    <parameter name="jdbcCommit">After every database operation</parameter>
                        <parameter name="jdbcDriver">@SUBSTITUTE{property.profiles:dbrepos_jdbc_driver}</parameter>
                    <parameter name="jdbcLogin">@SUBSTITUTE{property.profiles:dbrepos_username}</parameter>
                        <parameter name="jdbcPassword">@SUBSTITUTE{property.profiles:dbrepos_password}</parameter>
                    <parameter name="jdbcPreparedStatement">true</parameter>
                    <parameter name="jdbcSchema">EMPINST</parameter>
                        <parameter name="jdbcSource">@SUBSTITUTE{property.profiles:dbrepos_jdbc_url}</parameter>
					<parameter name="jdbcTable">@SUBSTITUTE{property.profiles:sync_updates_timestamp_table}</parameter>
                </Configuration>
                <Parser>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425656624339</ModTime>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1425656624338</ModTime>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <ModTime>1425656624338</ModTime>
                    </Schema>
                </Parser>
                <AttributeMap name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425656624339</ModTime>
                </AttributeMap>
                <AttributeMap name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425660419778</ModTime>
                    <AttributeMapItem>
                        <Name>PROF_KEY</Name>
                        <Type>advanced</Type>
                        <Script>work.key</Script>
                        <Simple>PROF_KEY</Simple>
                    </AttributeMapItem>
                    <AttributeMapItem>
                        <Name>LDAP_MOD_TIMESTAMP</Name>
                        <Type>advanced</Type>
                        <Script>"00000000"</Script>
                        <Simple>LDAP_MOD_TIMESTAMP</Simple>
                    </AttributeMapItem>
                </AttributeMap>
                <DeltaSettings/>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425656624339</ModTime>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425657448404</ModTime>
                    <SchemaItem>
                        <Name>PROF_KEY</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>LDAP_MOD_TIMESTAMP</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                    <SchemaItem>
                        <Name>MARK</Name>
                        <NativeSyntax>VARCHAR</NativeSyntax>
                    </SchemaItem>
                </Schema>
                <LinkCriteria>
                    <InheritFrom>[parent]</InheritFrom>
                    <ModTime>1425661318202</ModTime>
                </LinkCriteria>

                <Hooks>
                </Hooks>

                <CheckpointConfig/>
                <SandboxConfig/>
                <Reconnect>
                    <InheritFrom>[parent]</InheritFrom>
                    <ReconnectRules/>
                </Reconnect>
                <Operations/>
                <PoolDefinition>
                    <InheritFrom>[parent]</InheritFrom>
                </PoolDefinition>
                <PoolInstance/>
            </Connector>

                <Connector name="write_partitions">
                    <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
                    <ConnectorMode>AddOnly</ConnectorMode>
                    <ConnectorState>Disabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="fileAppend">true</parameter>
                        <parameter name="filePath">sync_updates/0.dbids</parameter>
                        <parameter name="script"><![CDATA[
var time = getCurrentTime();
var newFilePath = time + system.getTDIProperty("profiles", "sync_updates_working_directory")
	+ "/" + "0.dbids";
ret.value = newFilePath;
]]></parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>system:/Parsers/ibmdi.LDIF</InheritFrom>
                        <parameter name="attributeName">hash_column</parameter>
                        <parameter name="characterSet">UTF-8</parameter>
                        <parameter name="csvColumns">hashed_column;PROF_SOURCE_UID</parameter>
                        <parameter name="csvEnableQuoting">true</parameter>
                        <parameter name="csvLogLongLines">0</parameter>
                        <parameter name="csvWriteHeader">true</parameter>
                        <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                        <parameter name="ldifDNAttributeName">$dn</parameter>
                        <parameter name="ldifVersion">false</parameter>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>$dn</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>$dn</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>PROF_KEY</Name>
                            <Type>advanced</Type>
                            <Script>work.key</Script>
                            <Simple>PROF_KEY</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>PROF_SOURCE_URL</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>work.sourceUrl</Script>
                            <Simple>PROF_SOURCE_URL</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>PROF_UID</Name>
                            <Type>advanced</Type>
                            <Script>work.uid</Script>
                            <Simple>PROF_UID</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>hash_column</Name>
                            <Type>advanced</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Script>work.hash_column</Script>
                            <Simple>hash_column</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>sys_usrState</Name>
                            <Type>simple</Type>
                            <Simple>sys_usrState</Simple>
                        </AttributeMapItem>
                        <AttributeMapItem>
                            <Name>db_ldap_mod_timestamp</Name>
                            <Type>simple</Type>
                            <Simple>db_ldap_mod_timestamp</Simple>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="after_initialize">
                            <Name>after_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="before_add">
                            <Name>before_add</Name>
                            <Script><![CDATA[//

// Determine hash code
//
var hash_value_key = java.lang.String(work.getString("hash_column"));
var hash_code = Math.abs(hash_value_key.hashCode() % sync_updates_hash_partitions);

if (js_trace_level.debug <= trace_javascript_level) {
	var follow_id = system.getTDIProperty("profiles", "trace_profile_tdi_follow");
	if (follow_id == null)
		follow_id = "*";
	var hash_id = work.getString(sync_updates_hash_field);
	if ((follow_id == "*") || ((hash_id != null) && (hash_id == follow_id)))
	{
		task.logmsg("+++++++ about to dump sync_all_dns_hash_db: write_partitions: work entry: hash_value_key: " + hash_value_key);
		task.logmsg("+++++++ about to dump sync_all_dns_hash_db: write_partitions: work entry: hash_code: " + hash_code);
	}
}

//
// dynamically set file path and connect to file
//
var newFilePath = lcConf.sync_updates_working_directory
	+ "/" + hash_code + ".dbids";

var oldFilePath = thisConnector.connector.getParam("filePath");

if (newFilePath != oldFilePath)
{
	thisConnector.connector.setParam("filePath",newFilePath);
	thisConnector.connector.reconnect();
}

lcIterUtil.incr();
]]></Script>
                            <Enabled>true</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                        <Hook name="before_initialize">
                            <Name>before_initialize</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="connect_init">
                            <Name>connect_init</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                        <Hook name="initialize_fail">
                            <Name>initialize_fail</Name>
                            <Enabled>false</Enabled>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


        <AssemblyLine name="DSMLServer_TEST">
            <LogEnabled>true</LogEnabled>
            <Settings>
                <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
                <parameter name="automapattributes">false</parameter>
                <parameter name="createTombstones">false</parameter>
                <parameter name="debug">true</parameter>
                <parameter name="includeGlobalPrologs">true</parameter>
                <parameter name="maxread"/>
                <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
            </Settings>
            <Hooks>
                <Hook name="prolog0">
                    <Name>prolog0</Name>
                    <Script><![CDATA[//--------------------------------------------------------------
// Load the message bundle if not done already.  Will set
// variable messageBundle.
//--------------------------------------------------------------
load_lcConf();

var aProp = system.getTDIProperty("profiles", "debug_draft");
if((aProp != null) && (aProp == "true")) {
	debug_draft = true;
}
else {
	debug_draft = false;
}

log2("INFO", "info_debug_prop_setting", "debug_draft", "" + debug_draft);]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <SimulationConfig>
                <SimulationStates>
                    <Component name="Server" state="Enabled"/>
                    <Component name="DumpWorkEntry" state="Enabled"/>
                </SimulationStates>
                <ProxySettings/>
            </SimulationConfig>
            <LogConfig>
                <Logger name="DailyRollingFile">
                    <parameter name="DailyRollingFile.Append">true</parameter>
                    <parameter name="DailyRollingFile.DatePattern">'.'yyyy-MM-dd</parameter>
                    <parameter name="DailyRollingFile.Encoding">UTF-8</parameter>
                    <parameter name="DailyRollingFile.File">@SUBSTITUTE{property.profiles:ad_changelog_logfile}</parameter>
                    <parameter name="Pattern.ConversionPattern">%d{ISO8601} %-5p [%c] - %m%n</parameter>
                    <parameter name="com.ibm.di.log.appender">DailyRollingFile</parameter>
                    <parameter name="com.ibm.di.log.layout">Pattern</parameter>
                    <parameter name="com.ibm.di.log.level">INFO</parameter>
                    <parameter name="enabled">true</parameter>
                </Logger>
            </LogConfig>
            <ContainerEF name="EntryFeedContainer">
                <Connector name="Server">
                    <InheritFrom>system:/Connectors/ibmdi.DSMLv2SOAPServerConnector</InheritFrom>
                    <ConnectorMode>Server</ConnectorMode>
                    <ConnectorState>Enabled</ConnectorState>
                    <Configuration>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="authRealm">IBM Tivoli Directory Integrator</parameter>
                        <parameter name="backlog">20</parameter>
                        <parameter name="binaryAttributes"><![CDATA[photo, personalSignature, audio, jpegPhoto, javaSerializedData, thumbnailPhoto, 
thumbnailLogo, userPassword, userCertificate, authorityRevocationList, 
certificateRevocationList, crossCertificatePair, x500UniqueIdentifier, 
objectGUID, objectSid]]></parameter>
                        <parameter name="debug">true</parameter>
                        <parameter name="dsmlPort">9996</parameter>
                        <parameter name="httpAuth">false</parameter>
                        <parameter name="msgChunked">false</parameter>
                        <parameter name="needClientAuth">false</parameter>
                        <parameter name="soapbinding">true</parameter>
                        <parameter name="useSSL">false</parameter>
                    </Configuration>
                    <ComputeChanges>true</ComputeChanges>
                    <DeltaBehavior>0</DeltaBehavior>
                    <DeltaStrict>true</DeltaStrict>
                    <Parser>
                        <InheritFrom>[parent]</InheritFrom>
                        <Schema name="Input">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                        <Schema name="Output">
                            <InheritFrom>[parent]</InheritFrom>
                        </Schema>
                    </Parser>
                    <AttributeMap name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <AttributeMap name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <AttributeMapItem>
                            <Name>*</Name>
                            <Type>simple</Type>
                            <Enabled>true</Enabled>
                            <Add>true</Add>
                            <Modify>true</Modify>
                            <Simple>*</Simple>
                            <SubstitutionTemplate>null</SubstitutionTemplate>
                        </AttributeMapItem>
                    </AttributeMap>
                    <DeltaSettings>
                        <WhenToCommit>After every database operation</WhenToCommit>
                        <Driver>CloudScape</Driver>
                    </DeltaSettings>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Syntax>String</Syntax>
                            <Presence>Always</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.attributes</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.base</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.compare_name</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.compare_value</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.deleteOldRDN</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.derefAliases</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.extended.requestname</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.extended.requestvalue</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.filter</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.newSuperior</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.operation</Name>
                            <Syntax>String</Syntax>
                            <Presence>Always</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.scope</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.sizeLimit</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.timeLimit</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.typesOnly</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>newrdn</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                        <SchemaItem>
                            <Name>$dn</Name>
                            <Syntax>String</Syntax>
                            <Presence>Always</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.compare_result</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.error</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.exception</Name>
                            <Syntax>javax.naming.NamingException</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.operation</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.referral</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.response</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.responseName</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.resultcode</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                        <SchemaItem>
                            <Name>dsml.resultdescr</Name>
                            <Syntax>String</Syntax>
                            <Presence>May</Presence>
                        </SchemaItem>
                    </Schema>
                    <LinkCriteria>
                        <InheritFrom>[parent]</InheritFrom>
                    </LinkCriteria>
                    <Hooks>
                        <InheritFrom>[parent]</InheritFrom>
                        <Hook name="before_reply">
                            <Name>before_reply</Name>
                            <Script/>
                            <Enabled>false</Enabled>
                            <DebugBreak>false</DebugBreak>
                        </Hook>
                    </Hooks>
                    <CheckpointConfig/>
                    <SandboxConfig/>
                    <Reconnect>
                        <InheritFrom>[parent]</InheritFrom>
                        <parameter name="initreconnect">false</parameter>
                        <parameter name="numberOfRetries">1</parameter>
                        <parameter name="retryDelay">10</parameter>
                        <ReconnectRules/>
                    </Reconnect>
                    <Operations/>
                    <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
                    <PoolDefinition>
                        <InheritFrom>[parent]</InheritFrom>
                    </PoolDefinition>
                    <PoolInstance>
                        <Enabled>false</Enabled>
                        <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
                    </PoolInstance>
                    <InitializeOption>0</InitializeOption>
                </Connector>
            </ContainerEF>
            <ContainerDF name="DataFlowContainer">
                <Script name="DumpWorkEntry">
                    <parameter name="script"><![CDATA[
// Dump the work entry
task.dumpEntry(work);
]]></parameter>
                </Script>
            </ContainerDF>
            <ThreadOptions/>
            <Operations/>
            <InitParams>
                <Schema name="AssemblyLineInitParams"/>
            </InitParams>
        </AssemblyLine>


    </Folder>
    <Folder name="Connectors">
        <Connector name="CollectDns_write_dn">
            <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
            <ModTime>1398114854401</ModTime>
            <ConnectorMode>AddOnly</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_collect}</parameter>
                <parameter name="fileAppend">true</parameter>
                <parameter name="filePath">@SUBSTITUTE{property.profiles:source_ldap_collect_dns_file}</parameter>
            </Configuration>
            <ComputeChanges>true</ComputeChanges>
            <DeltaBehavior>0</DeltaBehavior>
            <DeltaStrict>true</DeltaStrict>
            <Parser>
                <InheritFrom>system:/Parsers/ibmdi.LineReader</InheritFrom>
                <parameter name="attributeName">$dn</parameter>
                <parameter name="characterSet">UTF-8</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_collect}</parameter>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>$dn</Name>
                    <Type>simple</Type>
                    <Simple>$dn</Simple>
                </AttributeMapItem>
            </AttributeMap>
            <DeltaSettings>
                <WhenToCommit>After every database operation</WhenToCommit>
                <Driver>CloudScape</Driver>
            </DeltaSettings>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
            </LinkCriteria>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
                <Hook name="before_execute">
                    <Name>before_execute</Name>
                    <Script><![CDATA[
if(work.getAttribute("$dn") == null) {
	system.skipEntry();
}

// keep track of the number of values seen
lcIterUtil.incr();
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
                <Enabled>false</Enabled>
                <MinPoolSize>0</MinPoolSize>
                <PurgeInterval>0</PurgeInterval>
                <InitializeAttempts>1</InitializeAttempts>
            </PoolDefinition>
            <PoolInstance>
                <Enabled>false</Enabled>
                <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
            </PoolInstance>
            <InitializeOption>0</InitializeOption>
        </Connector>
        <Connector name="FetchLDAPDataWithFilter">
            <InheritFrom>system:/Connectors/ibmdi.LDAP</InheritFrom>
            <ModTime>1398114854510</ModTime>
            <ConnectorMode>Iterator</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="ldapBinaryAttributes"><![CDATA[@SUBSTITUTE{javascript load_lcConf(true);
ret.value = lcConf.source_ldap_binary_attributes.join("\n");}]]></parameter>
                <parameter name="ldapPassword">@SUBSTITUTE{property.profiles:source_ldap_user_password}</parameter>
                <parameter name="ldapReturnAttributes"><![CDATA[@SUBSTITUTE{javascript load_lcConf(true);
ret.value = lcConf.source_ldap_return_attributes.join("\n");}]]></parameter>
                <parameter name="ldapSearchBase">@SUBSTITUTE{property.profiles:source_ldap_search_base}</parameter>
                <parameter name="ldapSearchFilter">@SUBSTITUTE{property.profiles:source_ldap_search_filter}</parameter>
                <parameter name="ldapUrl">@SUBSTITUTE{property.profiles:source_ldap_url}</parameter>
                <parameter name="ldapUsername">@SUBSTITUTE{property.profiles:source_ldap_user_login}</parameter>
                <parameter name="script"><![CDATA[
load_lcConf(true);
ret.value = lcConf.source_ldap_binary_attributes.join("\n");
]]></parameter>
            </Configuration>
            <Parser>
                <InheritFrom>[parent]</InheritFrom>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <DeltaSettings>
                <WhenToCommit>After every database operation</WhenToCommit>
            </DeltaSettings>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
            </LinkCriteria>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
                <Enabled>false</Enabled>
                <MinPoolSize>0</MinPoolSize>
                <PurgeInterval>0</PurgeInterval>
                <InitializeAttempts>1</InitializeAttempts>
            </PoolDefinition>
            <PoolInstance/>
            <InitializeOption>0</InitializeOption>
        </Connector>
        <Connector name="FetchLDAPDataWithoutFilter">
            <InheritFrom>system:/Connectors/ibmdi.LDAP</InheritFrom>
            <ModTime>1398114854619</ModTime>
            <ConnectorMode>Iterator</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="ldapBinaryAttributes"><![CDATA[@SUBSTITUTE{javascript load_lcConf(true);
ret.value = lcConf.source_ldap_binary_attributes.join("\n");}]]></parameter>
                <parameter name="ldapPassword">@SUBSTITUTE{property.profiles:source_ldap_user_password}</parameter>
                <parameter name="ldapReturnAttributes"><![CDATA[@SUBSTITUTE{javascript load_lcConf(true);
ret.value = lcConf.source_ldap_return_attributes.join("\n");}]]></parameter>
                <parameter name="ldapSearchBase">@SUBSTITUTE{property.profiles:source_ldap_search_base}</parameter>
                <parameter name="ldapSearchFilter"/>
                <parameter name="ldapUrl">@SUBSTITUTE{property.profiles:source_ldap_url}</parameter>
                <parameter name="ldapUsername">@SUBSTITUTE{property.profiles:source_ldap_user_login}</parameter>
                <parameter name="script"><![CDATA[load_lcConf(true);
ret.value = lcConf.source_ldap_return_attributes.join("\n");]]></parameter>
            </Configuration>
            <Parser>
                <InheritFrom>[parent]</InheritFrom>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <DeltaSettings>
                <WhenToCommit>After every database operation</WhenToCommit>
            </DeltaSettings>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
            </LinkCriteria>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
                <Enabled>false</Enabled>
                <MinPoolSize>0</MinPoolSize>
                <PurgeInterval>0</PurgeInterval>
                <InitializeAttempts>1</InitializeAttempts>
            </PoolDefinition>
            <PoolInstance/>
            <InitializeOption>0</InitializeOption>
        </Connector>

        <Connector name="LDAPLookupUser">
            <InheritFrom>/Connectors/FetchLDAPDataWithoutFilter</InheritFrom>
            <ModTime>1398114854744</ModTime>
            <ConnectorMode>Update</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="ldapUseSSL">@SUBSTITUTE{property.profiles:source_ldap_use_ssl}</parameter>
            </Configuration>
            <Parser>
                <InheritFrom>[parent]</InheritFrom>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>*</Name>
                    <Type>simple</Type>
                    <Simple>*</Simple>
                </AttributeMapItem>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <DeltaSettings/>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
                <LinkCriteriaItem>
                    <Key>12bca2772d7</Key>
                    <Attribute>$dn</Attribute>
                    <Operator>equals</Operator>
                    <Value>$dn</Value>
                </LinkCriteriaItem>
            </LinkCriteria>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
                <Hook name="default_fail">
                    <Name>default_fail</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="default_ok">
                    <Name>default_ok</Name>
                    <Script><![CDATA[
work.setAttribute("$lookup_status", "success");
//task.logmsg("++++***+++ next dnVal in .in file is "); //qqq comment out

//task.logmsg("dump work ^^^^^^^^^^^^^^^^^");
//task.dumpEntry(work);
//task.logmsg("dump conn ^^^^^^^^^^^^^^^^^");
//task.dumpEntry(conn);

]]></Script>


                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="lookup_fail">
                    <Name>lookup_fail</Name>
                    <Script><![CDATA[
work.setAttribute("$lookup_status", "nomatch");
system.skipEntry();
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="lookup_nomatch">
                    <Name>lookup_nomatch</Name>
                    <Script><![CDATA[
work.setAttribute("$lookup_status", "nomatch");
system.skipEntry();
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
            </PoolDefinition>
            <PoolInstance/>
            <InitializeOption>0</InitializeOption>
        </Connector>
        <Connector name="LDIFFWriter">
            <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
            <ModTime>1398114854853</ModTime>
            <ConnectorMode>AddOnly</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="fileAppend">true</parameter>
                <parameter name="filePath">sync_updates/tbd.ldiff</parameter>
            </Configuration>
            <ComputeChanges>true</ComputeChanges>
            <DeltaBehavior>0</DeltaBehavior>
            <DeltaStrict>true</DeltaStrict>
            <Parser>
                <InheritFrom>/Parsers/lc_ldiff_parser</InheritFrom>
                <parameter name="attributeName">snprofiles_hash_code</parameter>
                <parameter name="characterSet">UTF-8</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="ldifBinaryAttributes"><![CDATA[@SUBSTITUTE{javascript load_lcConf(true);
ret.value = lcConf.source_ldap_binary_attributes.join("\n");}]]></parameter>
                <parameter name="ldifDNAttributeName">$dn</parameter>
                <parameter name="ldifVersion">false</parameter>
                <parameter name="script"><![CDATA[load_lcConf(true);
ret.value = lcConf.source_ldap_binary_attributes.join("\n");]]></parameter>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>*</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>*</Simple>
                    <SubstitutionTemplate>null</SubstitutionTemplate>
                </AttributeMapItem>
            </AttributeMap>
            <DeltaSettings>
                <WhenToCommit>After every database operation</WhenToCommit>
                <Driver>CloudScape</Driver>
            </DeltaSettings>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
            </LinkCriteria>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
                <Hook name="after_close">
                    <Name>after_close</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="before_add">
                    <Name>before_add</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="before_execute">
                    <Name>before_execute</Name>
                    <Script><![CDATA[
if(work.getAttribute("dn") == null) {
	system.skipEntry();
}
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="before_initialize">
                    <Name>before_initialize</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
                <Enabled>false</Enabled>
                <MinPoolSize>0</MinPoolSize>
                <PurgeInterval>0</PurgeInterval>
                <InitializeAttempts>1</InitializeAttempts>
            </PoolDefinition>
            <PoolInstance>
                <Enabled>false</Enabled>
                <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
            </PoolInstance>
            <InitializeOption>0</InitializeOption>
        </Connector>
        <Connector name="PopFromDns_iterate_over_dns">
            <InheritFrom>system:/Connectors/ibmdi.FileSystem</InheritFrom>
            <ModTime>1398114854962</ModTime>
            <ConnectorMode>Iterator</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="filePath">@SUBSTITUTE{property.profiles:source_ldap_collect_dns_file}</parameter>
            </Configuration>
            <ComputeChanges>true</ComputeChanges>
            <DeltaBehavior>0</DeltaBehavior>
            <DeltaStrict>true</DeltaStrict>
            <Parser>
                <InheritFrom>system:/Parsers/ibmdi.LineReader</InheritFrom>
                <parameter name="attributeName">line</parameter>
                <parameter name="characterSet">@SUBSTITUTE{javascript ret.value = lcConf.file_encoding;}</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>$dn</Name>
                    <Type>simple</Type>
                    <Enabled>true</Enabled>
                    <Add>true</Add>
                    <Modify>true</Modify>
                    <Simple>line</Simple>
                    <SubstitutionTemplate>null</SubstitutionTemplate>
                </AttributeMapItem>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <DeltaSettings>
                <WhenToCommit>After every database operation</WhenToCommit>
                <Driver>CloudScape</Driver>
                <RowLocking>SERIALIZABLE</RowLocking>
                <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
            </DeltaSettings>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <SchemaItem>
                    <Name>line</Name>
                    <Syntax>java.lang.String</Syntax>
                    <Presence>null</Presence>
                </SchemaItem>
                <SchemaItem>
                    <Name>linenumber</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
            </LinkCriteria>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
                <Hook name="after_close">
                    <Name>after_close</Name>
                    <Script><![CDATA[
var outFileName = eval_tdi_expression("./_tdi.rc");
write_return_code(retCode, outFileName);

log4("INFO", "info_iteration_result", "" + getCounterState(successCounter), 
"" + getCounterState(dupCounter),
"" + getCounterState(failCounter), 
"" + lastSuccessfulDN);

console4("out", "info_iteration_result", 
"" + getCounterState(successCounter), 
"" + getCounterState(dupCounter),
"" + getCounterState(failCounter), 
"" + lastSuccessfulDN);

lcIterUtil.report();

if(getCounterState(dupCounter) > 0)
{
	logmsg("INFO", "**********");
	log0("INFO", "info_iteration_duplicate");
	logmsg("INFO", "**********");
	for(var i = 0; i< duplicateDNArray.length; i++)
	{
		task.logmsg("$dn=" + duplicateDNArray[i]);
		task.logmsg("uid=" + duplicateUIDArray[i]);
		task.logmsg(".");
	}
}]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="after_getnext">
                    <Name>after_getnext</Name>
                    <Script><![CDATA[lcIterUtil.incr();

if (js_trace_level.debug <= trace_javascript_level)
{
	// After GetNext
	task.dumpEntry(conn);
}]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="after_initialize">
                    <Name>after_initialize</Name>
                    <Script><![CDATA[var lastSuccessfulDN = null;
var retCode = 0;

// this is the overall counter
lcIterUtil.reset();
lcIterUtil.setIncr(1000);

var successCounter = "successCounter";
var failCounter = "failCounter";
var dupCounter = "dupCounter";

//clear counter result
clearCounter(successCounter);
clearCounter(failCounter);
clearCounter(dupCounter);

//re-create counter
createCounter(successCounter);
createCounter(failCounter);
createCounter(dupCounter);]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="before_initialize">
                    <Name>before_initialize</Name>
                    <Script><![CDATA[
//---------------------------------------------------------------------
// Set return code to indicate error here, in case initialization fails. 
// If initialization succeeds, we will set back to zero.
//---------------------------------------------------------------------
var retCode = 1;
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="before_selectEntries">
                    <Name>before_selectEntries</Name>
                    <Script><![CDATA[
	// before selection
	check_for_BOM_at_BOF_and_skip_it( "source_ldap_collect_dns_file");

]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="end_of_data">
                    <Name>end_of_data</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="get_fail">
                    <Name>get_fail</Name>
                    <Script><![CDATA[
msgText = log2("ERROR", "err_iteration_failure", lastSuccessfulDN, error.getString("message"));
incrementCounter(failCounter);
retCode = 1;
system.skipEntry();]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="get_ok">
                    <Name>get_ok</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
                <Enabled>false</Enabled>
                <MinPoolSize>0</MinPoolSize>
                <MaxPoolSize>0</MaxPoolSize>
                <PurgeInterval>0</PurgeInterval>
                <InitializeAttempts>1</InitializeAttempts>
                <InitializeSleepInterval>0</InitializeSleepInterval>
            </PoolDefinition>
            <PoolInstance>
                <Enabled>false</Enabled>
                <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
            </PoolInstance>
            <InitializeOption>0</InitializeOption>
        </Connector>
        <Connector name="read_values_lib">
            <UserComment>lookup if modified, not replaced</UserComment>
            <InheritFrom>system:/Connectors/ibmdi.LDAP</InheritFrom>
            <ModTime>1398114855071</ModTime>
            <ConnectorMode>Lookup</ConnectorMode>
            <ConnectorState>Enabled</ConnectorState>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="automapADPassword">false</parameter>
                <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
                <parameter name="ldapAddAttr">false</parameter>
                <parameter name="ldapAuthenticationMethod">@SUBSTITUTE{property.profiles:source_ldap_authentication_method}</parameter>
                <parameter name="ldapBinaryAttributes"><![CDATA[
GUID
objectGUID
objectSid]]></parameter>
                <parameter name="ldapPageSize">0</parameter>
                <parameter name="ldapPassword">@SUBSTITUTE{property.profiles:source_ldap_user_password}</parameter>
                <parameter name="ldapReferrals">follow</parameter>
                <parameter name="ldapReturnAttributes"><![CDATA[
ibm-entryUuid
entryUUID
objectGUID
nsuniqueid
dominounid
GUID
*]]></parameter>
                <parameter name="ldapUrl">@SUBSTITUTE{property.profiles:source_ldap_url}</parameter>
                <parameter name="ldapUseSSL">@SUBSTITUTE{property.profiles:source_ldap_use_ssl}</parameter>
                <parameter name="ldapSearchBase">@SUBSTITUTE{property.profiles:source_ldap_search_base}</parameter>
                <parameter name="ldapSearchFilter">@SUBSTITUTE{property.profiles:source_ldap_search_filter}</parameter>
                <parameter name="ldapSearchScope">subtree</parameter>
                <parameter name="ldapSizeLimit">0</parameter>
                <parameter name="ldapTimeLimit">0</parameter>
                <parameter name="ldapUsername">@SUBSTITUTE{property.profiles:source_ldap_user_login}</parameter>
                <parameter name="ldapVLVPageSize">0</parameter>
                <parameter name="simulateRename">false</parameter>
            </Configuration>
            <ComputeChanges>true</ComputeChanges>
            <DeltaBehavior>0</DeltaBehavior>
            <DeltaStrict>true</DeltaStrict>
            <Parser>
                <InheritFrom>[parent]</InheritFrom>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
            </Parser>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>*</Name>
                    <Type>simple</Type>
                    <Simple>*</Simple>
                </AttributeMapItem>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <DeltaSettings>
                <WhenToCommit>After every database operation</WhenToCommit>
                <Driver>CloudScape</Driver>
            </DeltaSettings>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <SchemaItem>
                    <Name>$dn</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>businesscategory</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>carlicense</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>cn</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>departmentnumber</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>description</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>displayname</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>employeenumber</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>employeetype</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>givenname</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>initials</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>mail</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>manager</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>mobile</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>o</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>objectclass</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>pager</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>postalcode</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>roomnumber</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>secretary</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>sn</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>telephonenumber</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>title</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>uid</Name>
                    <Syntax>java.lang.String</Syntax>
                </SchemaItem>
                <SchemaItem>
                    <Name>userpassword</Name>
                    <Syntax>[byte array]</Syntax>
                </SchemaItem>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <LinkCriteria>
                <InheritFrom>[parent]</InheritFrom>
                <LinkCriteriaItem>
                    <Key>1105a8d4274</Key>
                    <Attribute>$dn</Attribute>
                    <Operator>equals</Operator>
                    <Value>$targetDN</Value>
                </LinkCriteriaItem>
            </LinkCriteria>

            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
                <Hook name="after_lookup">
                    <Name>after_lookup</Name>
                    <Script><![CDATA[
//----------------------------------------
// For any attributes we marked as needing
// full values for, we attempt to get from
// conn and if found, replace the 
// attribute in work.  This will replace
// modify attributes with replace 
// attributes
//----------------------------------------
for(i=0; i < attrsToLookup.length; ++i) {
	var attrName = attrsToLookup[i];
	var anAttr = conn.getAttribute(attrName);
	if(anAttr != null) {
		work.setAttribute(anAttr);
	}
}
]]></Script>
                    <Enabled>false</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="before_execute">
                    <Name>before_execute</Name>
                    <Script><![CDATA[
//---------------------------------------------
// Look for any attributes that are marked
// modify and if found, we add to list of
// values to look up completely so we can
// use replace attributes
//---------------------------------------------
if (js_trace_level.debug <= trace_javascript_level) {
	task.logmsg("entry in process_tds_change:");
	task.dumpEntry(conn);
	task.dumpEntry(work);
}
var needLookup = false;
attrsToLookup = new Array();
var attrCount = 0;
var workNames = work.getAttributeNames();
for(i=0; i < workNames.length; ++i) {
	var getAttr = work.getAttribute(workNames[i]);
	if((getAttr != null) && (getAttr.getOperation() == "modify")) {
		needLookup = true;
		attrsToLookup[attrCount] = workNames[i];
		++attrCount;
	}
}
if(!needLookup) {
	system.ignoreEntry();
}
]]></Script>
                    <Enabled>false</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
                <Hook name="before_lookup">
                    <Name>before_lookup</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="lookup_nomatch">
                    <Name>lookup_nomatch</Name>
                    <Script><![CDATA[
log1("WARN", "warn_no_existing_record_to_modify", work.getString("$dn"));
system.skipEntry();
]]></Script>
                    <Enabled>true</Enabled>
                    <DebugBreak>false</DebugBreak>
                </Hook>
            </Hooks>
            <CheckpointConfig/>
            <SandboxConfig/>
            <Reconnect>
                <InheritFrom>[parent]</InheritFrom>
                <ReconnectRules/>
            </Reconnect>
            <Operations/>
            <OperationCarrierIsProperty>false</OperationCarrierIsProperty>
            <PoolDefinition>
                <InheritFrom>[parent]</InheritFrom>
                <Enabled>false</Enabled>
                <MinPoolSize>0</MinPoolSize>
                <PurgeInterval>0</PurgeInterval>
                <InitializeAttempts>1</InitializeAttempts>
            </PoolDefinition>
            <PoolInstance>
                <Enabled>false</Enabled>
                <ExhaustedPoolBehavior>Wait</ExhaustedPoolBehavior>
            </PoolInstance>
            <InitializeOption>0</InitializeOption>
        </Connector>



    </Folder>
    <Folder name="Parsers">
        <Parser name="lc_ldiff_parser">
            <InheritFrom>system:/Parsers/ibmdi.LDIF</InheritFrom>
            <ModTime>1398114855368</ModTime>
            <parameter name="characterSet">UTF-8</parameter>
            <parameter name="debug">@SUBSTITUTE{property.profiles:debug_update_profile}</parameter>
            <parameter name="ldifBinaryAttributes"><![CDATA[@SUBSTITUTE{javascript load_lcConf(true);
ret.value = lcConf.source_ldap_binary_attributes.join("\n");}]]></parameter>
            <parameter name="ldifVersion">true</parameter>
            <parameter name="script"><![CDATA[load_lcConf(true);
ret.value = lcConf.source_ldap_binary_attributes.join("\n");]]></parameter>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
        </Parser>
    </Folder>
    <Folder name="Scripts">
        <Script name="FilterInvalidSourceUsers">
            <ModTime>1398114855477</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//
// This script filters invalid source repository users from the input
//

// filter if no $dn
if(work.getAttribute("$dn") == null) {
	system.skipEntry();
}
]]></parameter>
        </Script>
        <Script name="config_utils">
            <ModTime>1398114855586</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[
/* ***************************************************************** */
/*                                                                   */
/* Copyright IBM Corp. 2010, 2012                                    */
/*                                                                   */
/* The source code for this program is not published or otherwise    */
/* divested of its trade secrets, irrespective of what has been      */
/* deposited with the U.S. Copyright Office.                         */
/*                                                                   */
/* ***************************************************************** */

/**
 * Utility functions to handle profile config properties
 */
lcConfUtils = {
	
	/**
	 * Internal map of keys
	 */
	_profileStoreKeys: (function(){
		var keySet = new java.util.HashSet();
		var keys = system.getTDIProperties().getPropertyStore("profiles").keys();
		while (keys.hasNext()) {
			keySet.add(keys.next());
		}

		return keySet;
	})(),
	
	/**
	 * Internal utility function to get raw 'profiles' config property
	 */
	_prop: function(pName) {
		if (!lcConfUtils._profileStoreKeys.contains(pName)) {
			return null;
		}
		
		return system.getTDIProperty("profiles", pName);
	},
	
	/**
	 * Internal utility function to ensure default value defined
	 */
	_defVal: function(defVal, altVal) {
		if (!defVal) {
			return altVal;
		}
		
		return defVal;
	},
	
	/**
	 * Gets the boolean property.  If defVal is undefined will return false
	 */
	boolProp: function (pName, defVal) {
		var aProp = lcConfUtils._prop(pName);
		defVal = lcConfUtils._defVal(defVal, false);
		
		if ("true" == aProp) {
			return true;
		} else if ("false" == aProp) {
			return false;
		}
		
		return defVal; 
	},

	/**
	 * Returns the setting or 'null' if the default value is undefined
	 */
	strProp: function (pName, defVal) {
		var aProp = lcConfUtils._prop(pName);
		defVal = lcConfUtils._defVal(defVal, null);
		
		if (aProp == null || aProp == "") {
			return defVal;
		}
		
		return aProp;
	},
	
	/**
	 * Returns a list (guarenteed not null) that results from splitting a config vlaue by ',' and '\s'
	 */
	strTokenProp : function(propName) {
		var confVal = lcConfUtils.strProp(propName);
		if (confVal != null) {
			return java.util.Arrays.asList(confVal.split("((\\s+)|(\\s*\\,\\s*))"));
		} else {
			return new java.util.ArrayList();
		}	
	},
	
	/**
	 * Returns the setting or '0' if the default value is undefined
	 */
	intProp: function (pName, defVal) {
		var aProp = lcConfUtils._prop(pName);
		defVal = lcConfUtils._defVal(defVal, 0);
		
		try {
			return java.lang.Integer.parseInt(aProp);
		} catch (e) {
			return defVal;
		}
	},
	
	/**
	 * Returns a pointer to the ldap compute function if one is defined in the config
	 */
	getSourceDataComputeFunc : function (propName) {
		var aProp = lcConfUtils.strProp(propName, "");
		if ((aProp != null) && (aProp != "") && (aProp.toLowerCase() != "null")) {
			var func = eval("this." + aProp);
			if(func) {
				if(typeof(func) == "function") {
					if(func.length == 0) {
						return func;
					} else {
						var msgText = log3("FATAL", "err_bad_map_func_arg_count", aProp, "" + func.length, "0");
						system.abortAssemblyLine(msgText);
					}	
				}
			} else /* !func */ {
				var msgText = log1("FATAL", "err_map_func_not_loaded", aProp);
				system.abortAssemblyLine(msgText);
			}
		}
	},
	
	/**
	 * Converts a JavaScript list of values into a HashSet
	 */
	valuesToSet : function(valList) {
		var mSet = new java.util.HashSet();
		for (var key in valList) {
			mSet.add(valList[key]);
		}
		return mSet;
	},
	
	/**
	 * Converts a java.util.Collection to a JavaScript array object
	 */
	collectionToJSArray : function(coll) {
		var retVal = [];
		var it = coll.iterator();
		while (it.hasNext()) {
			retVal.push(it.next());
		}
		return retVal;
	}
};


/**
 * listing of all configuration options
 */
function load_lcConf(dontDumpConf) {
	
	// check for first time thru in the current context.  if so, get the config; else
	// skip all the work. 
	if (!this.lcConf) {
		// load dependencies
		load_message_bundle();
		
		//
		// main config object
		// 	
		lcConf = { 

			/**
			 * Dump the config settings 
			 */
			_dumpConfigSettings: function() {
				var sortedProps = [];
				for (var p in lcConf) { sortedProps.push(p); } 
				sortedProps.sort();
				
				logmsg("INFO", "START: dump config settings");
				for (var index in sortedProps) {
					var p = sortedProps[index];					
					if (p != '_dumpConfigSettings') {
						logmsg("INFO", " - lcConf[" + p + "]: " + lcConf[p]);
					}	
				}
				logmsg("INFO", "END: dump config settings");
			},

			//
			// Debug settings
			//
			debug_source_repository_connectors       : lcConfUtils.boolProp("debug_source_repository_connectors", false),

			debug_managers                            : lcConfUtils.boolProp("debug_managers", false),
			debug_photos                              : lcConfUtils.boolProp("debug_photos", false),
			debug_pronounce                           : lcConfUtils.boolProp("debug_pronounce", false),
			debug_collect                             : lcConfUtils.boolProp("debug_collect", false),
			debug_fill_codes                          : lcConfUtils.boolProp("debug_fill_codes", false),
			debug_draft                               : lcConfUtils.boolProp("debug_draft", false),
			debug_update_profile                      : lcConfUtils.boolProp("debug_update_profile", false),
			debug_special                             : lcConfUtils.boolProp("debug_special", false),

			//
			dbrepos_mark_manager_if_referenced : lcConfUtils.boolProp("dbrepos_mark_manager_if_referenced", true),
			
			//--------------------------------------------------------------
			// LDAP / source repository related config settings
			//--------------------------------------------------------------
			
			//--------------------------------------------------------------
			// Get the regex expression which is used to filter DNs from
			// property file, if any
			//--------------------------------------------------------------
			source_ldap_required_dn_regex_pattern : (function(){
				var regExpLdapProp = lcConfUtils.strProp("source_ldap_required_dn_regex");
				var pattern = null;

				if((regExpLdapProp != null) && (regExpLdapProp != "")) {
					pattern = new RegExp(regExpLdapProp);
					log1("INFO", "info_dn_regex", pattern);

					return pattern;	
				}
				else {
					return null;
				}
			})(),

			//-----------------------------------------------
			// Variables needed in case we do our own sorted
			// page search
			//-----------------------------------------------
			source_ldap_sort_attribute : lcConfUtils.strProp("source_ldap_sort_attribute"),
						
			source_ldap_sort_page_size : (function(){
				var t = lcConfUtils.intProp("source_ldap_sort_page_size", 0);
				if(t < 0) {
					var msgTxt = log1("ERROR", "err_sort_page_size_not_valid", t);
					system.abortAssemblyLine(msgTxt);
				}
				return t;
			})(),
			
			// Setting for collect_dns script on how to encode results
			source_ldap_escape_dns : lcConfUtils.boolProp("source_ldap_escape_dns", false),
			
			// DNS collection file setting
			source_ldap_collect_dns_file : lcConfUtils.strProp("source_ldap_collect_dns_file", "collect.dns"),
			
			// mapping functions file
			source_ldap_map_functions_file : lcConfUtils.strProp("source_ldap_map_functions_file"),

			// indicates if should give debug level output for ldap			
			source_ldap_debug : lcConfUtils.boolProp("source_ldap_debug", false),
			
			// source url
			source_ldap_url : lcConfUtils.strProp("source_ldap_url", "ldap://_undefined_"),
			
			// ldap search base
			source_ldap_search_base : lcConfUtils.strProp("source_ldap_search_base", "(undefined=_search_base_)"),
			
			// ldap search filter
			source_ldap_search_filter : lcConfUtils.strProp("source_ldap_search_filter", "(undefined=_search_filter_)"),
			
			// indicates that the default SRP iterate connector will iterate via the .js iteration file
			source_ldap_iterate_with_filter : lcConfUtils.boolProp("source_ldap_iterate_with_filter", false),
			
			// for sync_all_dns
			source_ldap_collect_updates_file : 
				lcConfUtils.strProp("source_ldap_collect_updates_file", "employee.updates"),
			
			// binary attributes of the LDAP
			source_ldap_binary_attributes : (function(){
				// initialize default value
				var defVal = lcConfUtils.valuesToSet(["GUID", "objectGUID", "objectSid", "sourceObjectGUID"]);

				// add additional values from config
				defVal.addAll(lcConfUtils.strTokenProp("source_ldap_binary_attributes"));

				return lcConfUtils.collectionToJSArray(defVal);
			})(),
			
			// explicit return attributes for LDAP connector
			source_ldap_return_attributes : (function(){
				// initialize default value
				var defVal = lcConfUtils.valuesToSet([
						"ibm-entryUuid", "entryUUID", "objectGUID", 
						"nsuniqueid", "dominounid", "GUID", "*"]);

				// add additional values from config
				defVal.addAll(lcConfUtils.strTokenProp("source_ldap_return_attributes"));

				return lcConfUtils.collectionToJSArray(defVal);
			})(),
			
			//--------------------------------------------------------------
			// SyncUpdates config settings
			//--------------------------------------------------------------
			sync_updates_working_directory : lcConfUtils.strProp("sync_updates_working_directory", "sync_updates"),
			
			sync_updates_hash_field : lcConfUtils.strProp("sync_updates_hash_field", "uid"),
			
			sync_updates_hash_partitions : (function() {
				var t;
				var sync_updates_hash_partitionsTemp = parseInt(system.getTDIProperty("profilesPartitions", "sync_updates_hash_partitions_if_large_model"));
				//task.logmsg("%%%%% sync_updates_hash_partitionsTmp: " + sync_updates_hash_partitionsTmp);

				if (sync_updates_hash_partitionsTemp == 0)
				{

					t = lcConfUtils.intProp("sync_updates_hash_partitions", 10);
					if (t < 1) {
						system.abortAssemblyLine("sync_updates_hash_partitions may not be set to zero or negative value");
					}
				}
				else
				{
					t = sync_updates_hash_partitionsTemp;
				}
				return t;
			})(),
						
			sync_updates_show_summary_only : lcConfUtils.boolProp("sync_updates_show_summary_only", false),
			
			perform_deletion_or_inactivate_for_sync : (function() {
				// default is true.  If user specifies one as false then action should not be carried out
				return 
					(lcConfUtils.boolProp("perform_deletion_for_sync", true) &&
					 lcConfUtils.boolProp("perform_deletion_or_inactivate_for_sync", true));
			})(),
						
			perform_deletion_for_sync : lcConfUtils.boolProp("perform_deletion_for_sync", true),
			
			sync_updates_double_check : lcConfUtils.boolProp("sync_updates_double_check", false),

			// default is to log when delete double check finds user in LDAP
			log_check_if_remove_prevents_delete : lcConfUtils.boolProp("log_check_if_remove_prevents_delete", true),

			// value script should use to override 'source_url' setting with the following value
			// - initialized below
			sync_store_source_url : null,
			
			// indicates that script should overwrite the sync url
			sync_source_url_override : lcConfUtils.boolProp("sync_source_url_override", false),
			
			// indicates that script should only synchronize against the defined LDAP url for this config
			sync_source_url_enforce : lcConfUtils.boolProp("sync_source_url_enforce", false),
			
			// AL to use for deletion process checking
			sync_check_if_remove : lcConfUtils.strProp("sync_check_if_remove", "sync_all_dns_check_if_remove"),
			
			//--------------------------------------------------------------
			// Source repository config settings
			//--------------------------------------------------------------
			source_repository_lookup_assemblyline :
				lcConfUtils.strProp("source_repository_lookup_assemblyline", "_internal_ldap_lookup_by_dn"),

			source_repository_iterator_assemblyline : (function(){
				var with_filter = lcConfUtils.boolProp("source_ldap_iterate_with_filter", false);
				var doIterate = java.lang.Boolean.parseBoolean(java.lang.System.getenv("CONN_IFIX_COMPATIBILITY_MODE"));
				var default_al = "_internal_ldap_iterate";
				
				if (with_filter || doIterate) {
					default_al = "_internal_ldap_iterate_loop";
				}
				
				return lcConfUtils.strProp("source_repository_iterator_assemblyline", default_al);
			})(),
			
			// used internally by loop connector; not a public setting
			_internal_source_repository_iterator_loopflow_assemblyline :
				lcConfUtils.strProp("_internal_source_repository_iterator_loopflow_assemblyline", "_internal_ldap_iterate"),
			
			//--------------------------------------------------------------
			// Manager / Secretary settings
			//--------------------------------------------------------------
			source_repository_lookup_manager_field : (function(){
				return lcConfUtils.strProp("source_ldap_manager_lookup_field", "manager");
			})(),
			
			source_repository_lookup_secretary_field : (function(){
				return lcConfUtils.strProp("source_ldap_secretary_lookup_field", "secretary");
			})(),

			// Setting for whether to maintain ldap timestamp table - EMP_UPDATE_TIMESTAMP
			// and do timestamp logic
			sync_use_ldap_timestamp : (function(){

				var sync_use_ldap_timestamp = lcConfUtils.boolProp("sync_updates_use_ldap_timestamp", false);

				// if tmestamp enabled, see if disabled by disableTs arg on sync_all_dns
				if (sync_use_ldap_timestamp)
				{
					var bTimestampDisabledByCommandArg = system.getTDIProperty("profilesPartitions", "sync_updates_hash_timestamp_disabled_by_command_arg");

					if (bTimestampDisabledByCommandArg == null)
						bTimestampDisabledByCommandArg = "false";

					if (bTimestampDisabledByCommandArg == "true")
						sync_use_ldap_timestamp = false;
				}

				return sync_use_ldap_timestamp;

			})(),

			file_encoding : (function(){
				var property_value = lcConfUtils.strProp( "fileencoding", "UTF-8");

				if (property_value.toUpperCase() == "UTF-8") {
					return_value = "UTF-8";
				}
				else if (property_value.toUpperCase() == "UTF-16") {
					return_value = "Unicode";
				}
				else if (property_value.toUpperCase() == "UTF-32") {
					return_value = "UTF-32";   // do we want to allow this???
				}
				else if (property_value.toUpperCase() == "UNICODE") {
					return_value = "Unicode";	// the casing I've tested with
				}
				else {
					return_value = "UTF-8";
				}
				
				return return_value;
			})()

	};
			
	lcConf.sync_updates_hash_email_bool = false;
	if (lcConf.sync_updates_hash_field.toLowerCase() == "email")
	{
		lcConf.sync_updates_hash_email_bool = true;
	}
	
	//
	// finish init
	//
	lcConf.sync_store_source_url = (function() {
			var aProp = lcConfUtils.strProp("sync_store_source_url");
			if((aProp != null) && (aProp == "true")) {
				return 
					lcConf.source_ldap_url + "/" + lcConf.source_ldap_search_base + "?" 
						+ lcConf.source_ldap_search_filter;
			}
			else {
				return null;
			}
		})();

	js_trace_retcode = false;
	// now deal with trace level
	js_trace_level = {"off" : 0, "fatal" : 1, "error" : 2, "warn" : 3, "info" : 4, "debug" : 5, "fine" : 6, "finer" : 7, "all" : 10};
	// process log4j settings in profile_tdi.properties and javascript tracing
	if (lcConf.debug_update_profile)
	{
		{
			task.logmsg("Turning on log4j java logging because debug_update_profile is true:"  );
		}

		try
		{
			// turn on standard java logging if using profileconnector
			com.ibm.lconn.profiles.api.tdi.util.TDIServiceHelper.setRootDebugProperty( "trace_log4j.logger.com.ibm.lconn.profiles.api.tdi", "all");	
			com.ibm.lconn.profiles.api.tdi.util.TDIServiceHelper.setRootDebugProperty( "trace_log4j.logger.com.ibm.lconn.profiles.internal.service", "all");
			// do not turn on sql be default	
			//com.ibm.lconn.profiles.api.tdi.util.TDIServiceHelper.setRootDebugProperty( "trace_log4j.logger.java.sql", "all");	
		}
		catch(e)
		{
		}
	}

	trace_javascript_level = js_trace_level.off;
	trace_javascript_level_str = "off";
	var aValue_trace = "off";
	var stream = java.io.FileInputStream("profiles_tdi.properties");
	var profiles_tdi_map = java.util.Properties();
	profiles_tdi_map.load(stream);
	stream.close();
	var eNames = profiles_tdi_map.propertyNames();
	while(eNames.hasMoreElements()) {
		var aName = eNames.nextElement();
		var aValue = profiles_tdi_map.getProperty(aName);
		if (aName.startsWith("trace_log4j")) {
			// support extension of java logging
			try
			{
				com.ibm.lconn.profiles.api.tdi.util.TDIServiceHelper.setRootDebugProperty( aName, aValue);
			}
			catch(e)
			{
			}
		}
		if (aName == "trace_profile_tdi_javascript") {
			aValue_trace = aValue;
			var lower_aValue = aValue.toLowerCase();
			if (( lower_aValue == "false") || ( lower_aValue == "off"))
			{
				trace_javascript_level_str = lower_aValue;
				continue;
			}
			else
			if ( lower_aValue == "fatal")
				trace_javascript_level = js_trace_level.fatal;
			else
			if ( lower_aValue == "error")
				trace_javascript_level = js_trace_level.error;
			else
			if ( lower_aValue == "warn")
				trace_javascript_level = js_trace_level.warn;
			else
			if ( lower_aValue == "info")
				trace_javascript_level = js_trace_level.info;
			else
			if ( lower_aValue == "debug")
			{
				trace_javascript_level = js_trace_level.debug;
				// make log4j default DEBUG
				try
				{
					com.ibm.lconn.profiles.api.tdi.util.TDIServiceHelper.setRootDebugProperty( "trace_log4j.rootCategory", "DEBUG");
				}
				catch(e)
				{
				}
			}
			else
			if ( lower_aValue == "finer")
			{
				trace_javascript_level = js_trace_level.finer;
				// make log4j default DEBUG
				try
				{
					com.ibm.lconn.profiles.api.tdi.util.TDIServiceHelper.setRootDebugProperty( "trace_log4j.rootCategory", "DEBUG");
				}
				catch(e)
				{
				}
			}
			else
			if ( lower_aValue == "all")
			{
				trace_javascript_level = js_trace_level.all;
				// make log4j default DEBUG
				try
				{
					com.ibm.lconn.profiles.api.tdi.util.TDIServiceHelper.setRootDebugProperty( "trace_log4j.rootCategory", "DEBUG");
				}
				catch(e)
				{
				}
			}
		}
	}

		if (js_trace_level.off != trace_javascript_level)
		{
			// property must have been used
			trace_javascript_level_str = aValue_trace;
		}

		//
		// Dump config settings
		//
		if (!dontDumpConf) {
			lcConf._dumpConfigSettings();
		}	
	}	
}
]]></parameter>
        </Script>
        <Script name="counter_utils">
            <ModTime>1398114855695</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[function createCounter(counterName)
{
	var result = com.ibm.lconn.profiles.api.tdi.util.ProfilesTDIState.createCounter(counterName);
	return result;
}

function incrementCounter(counterName)
{
	var result = com.ibm.lconn.profiles.api.tdi.util.ProfilesTDIState.incrementCounter(counterName);
	return result;
}

function decrementCounter(counterName)
{
	var result = com.ibm.lconn.profiles.api.tdi.util.ProfilesTDIState.decrementCounter(counterName);
	return result;
}

function getCounterState(counterName)
{
	var result = com.ibm.lconn.profiles.api.tdi.util.ProfilesTDIState.getCounterState(counterName);
	return result;
}

function clearCounter(counterName)
{
	com.ibm.lconn.profiles.api.tdi.util.ProfilesTDIState.clearCounter(counterName);
	
}]]></parameter>
        </Script>
        <Script name="expression_utils">
            <ModTime>1398114855805</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//----------------------------------------
// Try the given attribute and return if
// not null. Otherwise, evaluate
// the expression. 
//----------------------------------------
function attr_or_expression(attrName, otherwiseExpression) {
	var result = work.getString(attrName);
	if(result == null) {
		result = eval_tdi_expression(otherwiseExpression)
	}

	return result;
}

//-----------------------------------------
// Evaluate the given tdi expression, and
// return the value. The assumption is that
// work is the entry used for any entry
// sourced information
//-----------------------------------------
function eval_tdi_expression(expression) {
	var result = null;

	var ps = new com.ibm.di.util.ParameterSubstitution(expression);
	var map = new java.util.HashMap();
	map.put("mc", main.getMetamergeConfig());
	map.put("work", work);
	result = ps.substitute(map);

	return result;
}

//-----------------------------------------
// Return the opEntry operation, if any
//-----------------------------------------
function getOperation() {
	var result = null;

	var opEntry = task.getOpEntry();
	if(opEntry != null) {
		result = opEntry.getString("$operation");
		opEntry = null;
	}

	return result;
}]]></parameter>
        </Script>
        <Script name="load_mapping_properties">
            <ModTime>1398114855914</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles">@SUBSTITUTE{property.profiles:source_ldap_map_functions_file}</parameter>
            <parameter name="script"><![CDATA[//----------------------------------------------------------------------
// check debug setting in mapping
//----------------------------------------------------------------------
function check_debug_setting_inMapping() {
	var ret = false;
	var aProp = system.getTDIProperty("profiles", "source_ldap_debug");
	if((aProp != null) && (aProp == "true")) {
		ret = true;
	}
	else
	{
		var aProp = system.getTDIProperty("profiles", "monitor_changes_debug");
		if((aProp != null) && (aProp == "true")) {
			ret = true;
		}
		else
		{
			var aProp = system.getTDIProperty("profiles", "tds_changelog_debug");
			if((aProp != null) && (aProp == "true")) {
				ret = true;
			}
			else
			{
				var aProp = system.getTDIProperty("profiles", "ad_changelog_debug");
				if((aProp != null) && (aProp == "true")) {
					ret = true;
				}
			}
		}
	}
	return ret;
}	

//----------------------------------------------------------------------
// Load in mapping that shows how DB fields map to source fields. Builds
// associative array ldap_from_db_array with ldap field names as the
// indexes.
//----------------------------------------------------------------------
function load_mappings_dbrepos_to_source() {
	var debug = check_debug_setting_inMapping();
	var stream = java.io.FileInputStream("map_dbrepos_to_source.properties");
	var map = java.util.Properties();
	map.load(stream);
	ldap_from_db_array = {};
	var eNames = map.propertyNames();
	while(eNames.hasMoreElements()) {
		var aName = eNames.nextElement();
		var aValue = map.getProperty(aName);
		if(aValue != null) {
			//------------------------------------------------
			// Check for function definition and assign the
			// function as the value in the map if found.
			// Make sure it has the expected number of
			// arguments
			//------------------------------------------------
			if(aValue.startsWith("{")) {
				var pos = aValue.indexOf("}");
				if(pos > 0) {
					var funcName = aValue.substring(1, pos);
					var func = eval("this." + funcName);
					if(func) {
						if(typeof(func) == "function") {
							if(func.length == 1) {
								ldap_from_db_array[aName] = func;
								if(debug == true)
									log2("INFO", "info_db_to_source_mapping_function", aName, funcName);
							}
							else {
								msgText = log3("FATAL", "err_bad_map_func_arg_count", funcName, "" + func.length, "1");
								system.abortAssemblyLine(msgText);
							}						
						}
						else {
							msgText = log1("FATAL", "err_map_func_not_func", funcName);
							system.abortAssemblyLine(msgText);
						}
					}
					else {
						msgText = log1("FATAL", "err_map_func_not_loaded", funcName);
						system.abortAssemblyLine(msgText);
					}
				}
				else {
					msgText = log2("FATAL", "err_map_func_syntax", "map_dbrepos_to_source.properties", aName);
					system.abortAssemblyLine(msgText);
				}
			}
			else {
				if(aValue.toLowerCase() != "null") {
					ldap_from_db_array[aName] = aValue;
					if(debug == true)
						log2("INFO", "info_db_to_source_mapping", aName, aValue);
				}
			}
		}
		else {
			msgText = log2("FATAL", "err_map_no_value", "map_dbrepos_to_source.properties", aName);
			system.abortAssemblyLine(msgText);
		}
	}

	// now load the extension mappings
	load_extension_mappings_to_source();
}


//----------------------------------------------------------------------
// Load in mapping that shows how LDAP fields map to DB fields. Builds
// db_from_ldap_array which is an associative array with database field
// names as indexes.
//----------------------------------------------------------------------
function load_mappings_dbrepos_from_source() {
	var debug = check_debug_setting_inMapping();
	var stream = java.io.FileInputStream("map_dbrepos_from_source.properties");
	var map = java.util.Properties();
	map.load(stream);

	var extPropCount = 0;
	db_extension_property_names = new Array();
	db_from_ldap_array = {};
	var eNames = map.propertyNames();
	while(eNames.hasMoreElements()) {
		var aName = eNames.nextElement();
		var aValue = map.getProperty(aName);
		if(aValue != null) {
			var temp = org.apache.commons.lang.StringUtils.trim(aValue);
			aValue = temp;

			//------------------------------------------------
			// Check for function definition and assign the
			// function as the value in the map if found.
			// Make sure it has the expected number of
			// arguments
			//------------------------------------------------
			if(aValue.startsWith("{")) {
				var pos = aValue.indexOf("}");
				if(pos > 0) {
					var funcName = aValue.substring(1, pos);
					var func = eval("this." + funcName);
					if(func) {
						if(typeof(func) == "function") {
							if(func.length == 1) {
								db_from_ldap_array[aName] = func;
								if(debug == true)
									log2("INFO", "info_source_to_db_mapping_function", aName, funcName);
							}
							else {
								msgText = log3("FATAL", "err_bad_map_func_arg_count", funcName, "" + func.length, "1");
								system.abortAssemblyLine(msgText);
							}						
						}
						else {
							msgText = log1("FATAL", "err_map_func_not_func", funcName);
							system.abortAssemblyLine(msgText);
						}
					}
					else {
						msgText = log1("FATAL", "err_map_func_not_loaded", funcName);
						system.abortAssemblyLine(msgText);
					}
				}
				else {
					msgText = log2("FATAL", "err_map_func_syntax", "map_dbrepos_from_source.properties", aName);
					system.abortAssemblyLine(msgText);
				}
			}
			else {
				if(aValue.toLowerCase() != "null") {
					if(aName.startsWith("PROF_VALUE.")) {
						var propName = aName.substring(9);
						var foundName = false;
						for(i=0; i < extPropCount; ++i) {
							if(db_extension_property_names[i] == propName) {
								foundName = true;
							}
						}
						if(!foundName) {
							db_extension_property_names.push(propName);
							++extPropCount;
						}
					}
					db_from_ldap_array[aName] = aValue;
					if(debug == true)
						log2("INFO", "info_source_to_db_mapping", aName, aValue);
				}
//add by tyw
				else // aValue == null
				{
					if(aName.toLowerCase()=="guid" || aName.toLowerCase()=="guid" )
					{
						system.abortAssemblyLine("ERROR: guid cannot be null in the mapping file.");
					}
				}
//end add
			}
		}
		else {
			msgText = log2("FATAL", "err_map_no_value", "map_dbrepos_from_source.properties", aName);
			system.abortAssemblyLine(msgText);
		}
	}

	// now load the extension mappings
	load_extension_mappings_to_source();
}

function load_extension_mappings_to_source()
{
	extension_property_id_array = new Array();
	extension_def_array = {};
	var tdiCRUDSvc = com.ibm.lconn.profiles.api.tdi.service.impl.ProfilesTDICRUDServiceImpl.getInstance();
	var extenArray = new Array();
	extenArray = tdiCRUDSvc.getExtensionArray();
	var i;
	for(i=0;i<extenArray.length;i++){
		var id = extenArray[i].getExtensionId();
		if(id!=null){
			var aKey = extenArray[i].getSourceKey();
			if(aKey!=null){
				var aName = extenArray[i].getUserLabel();
				var aDataType = extenArray[i].getUserDataType();
				if(aDataType == null) {
					aDataType = "String";
				}
				if(aName == null) {	 // if display name not provided, set it to the ldap field name
					aName = aKey;
				}
				var anEntry = {
					key : aKey,		   // the ldap field name (sourceKey in tdi-profiles-config.xml)
					name : aName,	   // display name (userLabel in tdi-profiles-config.xml)
					dataType : aDataType
				};
				extension_def_array[id] = anEntry;

				if (js_trace_level.debug <= trace_javascript_level)
				{
					task.logmsg("extension id: " + id);
					task.logmsg("extension anEntry: " + anEntry);
					task.logmsg("extension aKey: " + aKey);
					task.logmsg("extension aName: " + aName);
					task.logmsg("extension aDataType: " + aDataType);
				}

			}else{
				log3("WARN", "warn_ext_mapping_missing_value", id, id, "tdi-profiles-config.xml");
			}
		}else{
			log2("WARN", "warn_ext_mapping_missing_ids", "extensionId", "tdi-profiles-config.xml");
		}
	}
}

function map_ext_into_entry( entry)
{
	var valid = true;
	log0("DEBUG", "info_begin_mapping_process");

	var names2 = work.getAttributeNames();
	if (js_trace_level.debug <= trace_javascript_level) {
		task.logmsg("+++ attribute names2.length: " + names2.length);
	}

	var count = 0;
	for (nameIndex=0; nameIndex < names2.length; ++nameIndex)
	{
		var name2 = names2[nameIndex];
		var attr = work.getString(name2);
		
		if (js_trace_level.debug <= trace_javascript_level) {
			task.logmsg("+++ attribute name2: " + name2);
			task.logmsg("+++ attribute attr2: " + attr);

			task.logmsg("about to call getLDAPnameGivenExtensionId for real: ");
		}			

		// convert to ldap name
		var ldapName = getLDAPnameGivenExtensionId(name2);
		if (js_trace_level.debug <= trace_javascript_level) {
			task.logmsg("return value of about to call getLDAPnameGivenExtensionId: " + ldapName); 
		}			

		if (ldapName != null)
		{
			count++;
			var ldapattr = connEntry.newAttribute(ldapName);
			if (js_trace_level.debug <= trace_javascript_level)	{
				task.logmsg("about to add for real to ldapattr: attr: " + attr);
			}			
			ldapattr.setValue( attr);
		}
	}

	if (count == 0)
		valid = false;

	return valid;
}
function getLDAPnameGivenExtensionId( id)
{
	if (js_trace_level.debug <= trace_javascript_level) {
		task.logmsg("extension list id: " + id);
	}
	for(anAttrName in extension_def_array) 
	{
		if (js_trace_level.debug <= trace_javascript_level) {
			//task.logmsg("extension list anAttrName: " + anAttrName);
		}
		if (anAttrName == id) {
			var entry = extension_def_array[anAttrName];
			if (js_trace_level.finer <= trace_javascript_level) {
				task.logmsg("extension list entry: " + entry);
				task.logmsg("extension list entry.key: " + entry.key);
				task.logmsg("extension list entry.name: " + entry.name);
				task.logmsg("extension list entry.dataType: " + entry.dataType);
			}

			return(entry.key);
		}
	}
	return(null);

}]]></parameter>
        </Script>
        <Script name="load_validation_properties">
            <ModTime>1398114856023</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[
//----------------------------------------------------------------------
// check debug setting in validation
//----------------------------------------------------------------------
function check_debug_setting_inValidation() {
	var ret = false;
	var aProp = system.getTDIProperty("profiles", "source_ldap_debug");
	if((aProp != null) && (aProp == "true")) {
		ret = true;
	}
	else
	{
		var aProp = system.getTDIProperty("profiles", "monitor_changes_debug");  // qqq
		if((aProp != null) && (aProp == "true")) {
			ret = true;
		}
		else
		{
			var aProp = system.getTDIProperty("profiles", "tds_changelog_debug");
			if((aProp != null) && (aProp == "true")) {
				ret = true;
			}
			else
			{
				var aProp = system.getTDIProperty("profiles", "ad_changelog_debug");
				if((aProp != null) && (aProp == "true")) {
					ret = true;
				}
			}
		}
	}
	return ret;
}	


//----------------------------------------------------------------------
// Load in mapping that shows how to validate database repository 
// fields.  Creates the associative array validate_dbrepos_field_array
// indexed by database field name with functions as values
//----------------------------------------------------------------------
function load_validations_dbrepos() {
	var debug = check_debug_setting_inValidation();
	var stream = java.io.FileInputStream("validate_dbrepos_fields.properties")
	var map = java.util.Properties();
	map.load(stream);
	validate_dbrepos_field_array = {};
	var eNames = map.propertyNames();
	while(eNames.hasMoreElements()) {
		var aName = eNames.nextElement();
		var aValue = map.getProperty(aName);
		if(aValue != null) {
			aValue = "" + aValue; //convert to js string
			//------------------------------------------------
			// Check for function definition and assign the
			// function as the value in the map if found.
			// Make sure it has the expected number of
			// arguments
			//------------------------------------------------
			if(aValue.startsWith("{")) {
				var pos = aValue.indexOf("}");
				if(pos > 0) {
					var funcName = aValue.substring(1, pos);
					var func = eval("this." + funcName);
					if(func) {
						if(typeof(func) == "function") {
							if((func.length == 1) || (func.length == 2)) {
								validate_dbrepos_field_array[aName] = func;
								if(debug == true)
									log2("INFO", "info_validate_db_function_name", aName, funcName);
							}
							else {
								msgText = log4("FATAL", "err_bad_valid_func_arg_count", funcName, "" + func.length, "1", "2");
								system.abortAssemblyLine(msgText);
							}						
						}
						else {
							msgText = log1("FATAL", "err_valid_func_not_func", funcName);
							system.abortAssemblyLine(msgText);
						}
					}
					else {
						msgText = log1("FATAL", "err_valid_func_not_loaded", funcName);
						system.abortAssemblyLine(msgText);
					}
				}
				else {
					msgText = log2("FATAL", "err_valid_func_syntax", "map_dbrepos_from_source.properties", aName);
					system.abortAssemblyLine(msgText);
				}
			}
			else {
				if(aValue.toLowerCase() != "null") {
					var funcArg = null;
					var funcBody = null;
					//-------------------------------------------------
					// Check to see if the string is an integer. If so
					// so we create a function that checks to see if 
					// the length is less than or equal to that
					// integer
					//-------------------------------------------------
					if(aValue.match(/^([0-9])*$/)) {
						funcArg = "x";
						funcBody = "return ((x == null) || (x.length() <= " + aValue + "));";
					}
					else {
						funcArg = "x";
						funcBody = "return (" + aValue + ");";
					}
					try
					{
						//-------------------------------------------------
						// We tried to use new Function(funcArg, funcBody))
						// to create an anonymous function, but it did not 
						// seem to work, so we eval a function
						// definition instead
						//-------------------------------------------------
						validate_dbrepos_field_array[aName] = eval("function ___func_val___" + aName + "(" + funcArg + ") {" + funcBody + "}");
						if(debug == true)
							log2("INFO", "info_validate_db_function", aName, "Function(" + funcArg + ") {" + funcBody + "}");
					}
					catch(e)
					{
						msgText = log2("FATAL", "err_valid_internal_func_exception", aName, "" + e);
						system.abortAssemblyLine(msgText);
					}
					
					
				}
			}
		}
		else {
			msgText = log2("FATAL", "err_map_no_value", "validate_dbrepos_fields.properties", aName);
			system.abortAssemblyLine(msgText);
		}
	}
}
]]></parameter>
        </Script>
        <Script name="log_functions">
            <ModTime>1398114856132</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//----------------------------------------------------------
// Load the main message bundle if not done already
//
// Loads messages into variable messageLookup
//----------------------------------------------------------
function load_message_bundle() {
	if(!this.messageBundle) {
		var messageBundle = java.util.PropertyResourceBundle.getBundle("profiles_messages");
		messageLookup = new com.ibm.lconn.profiles.api.tdi.util.MessageLookup(messageBundle);
	}
}

//----------------------------------------------------------
// Log an untranslated message
//
// @param level logging level ("INFO", "WARN", "ERROR", etc)
// @param text the text
//----------------------------------------------------------
function logmsg(level, text) {
	task.logmsg(level, text);

	return text;
}

//----------------------------------------------------------
// Log a translated message with 0 parameters
//
// @param level logging level ("INFO", "WARN", "ERROR", etc)
// @param res the resource string to lookup
//----------------------------------------------------------
function log0(level, res) {
	var text = messageLookup.getString(res);
	task.logmsg(level, text);

	return text;
}

//----------------------------------------------------------
// Log the exception stack trace
//
// @param level logging level ("INFO", "WARN", "ERROR", etc)
// @param the exception
//----------------------------------------------------------
function logStackTrace(level, throwable){
	var stringwriter = java.io.StringWriter();
	var printWriter = java.io.PrintWriter(stringwriter);
	throwable.printStackTrace(printWriter);
	task.logmsg(level, stringwriter.toString());
    return stringwriter.toString();
}

//----------------------------------------------------------
// Log a translated message with 1 parameter
//
// @param level logging level ("INFO", "WARN", "ERROR", etc)
// @param res the resource string to lookup
// @param param1 parameter
//----------------------------------------------------------
function log1(level, res, param1) {
	var text = messageLookup.getString1(res);
	text = task.getLog().getString(text, param1);
	task.logmsg(level, text);

	return text;
}

//----------------------------------------------------------
// Log a translated message with 2 parameters
//
// @param level logging level ("INFO", "WARN", "ERROR", etc)
// @param res the resource string to lookup
// @param param1 parameter 1
// @param param1 parameter 2
//----------------------------------------------------------
function log2(level, res, param1, param2) {
	var text = messageLookup.getString2(res);
	text = task.getLog().getString(text, param1, param2);
	task.logmsg(level, text);

	return text;
}

//----------------------------------------------------------
// Log a translated message with 3 parameters
//
// @param level logging level ("INFO", "WARN", "ERROR", etc)
// @param res the resource string to lookup
// @param param1 parameter 1
// @param param1 parameter 2
// @param param1 parameter 3
//----------------------------------------------------------
function log3(level, res, param1, param2, param3) {
	var text = messageLookup.getStringN(res, 3);
	text = task.getLog().getString(text, [param1, param2, param3]);
	task.logmsg(level, text);

	return text;
}

//----------------------------------------------------------
// Log a translated message with 4 parameters
//
// @param level logging level ("INFO", "WARN", "ERROR", etc)
// @param res the resource string to lookup
// @param param1 parameter 1
// @param param1 parameter 2
// @param param1 parameter 3
// @param param1 parameter 4
//----------------------------------------------------------
function log4(level, res, param1, param2, param3, param4) {
	var text = messageLookup.getStringN(res, 4);
	text = task.getLog().getString(text, [param1, param2, param3, param4]);
	task.logmsg(level, text);

	return text;
}

//----------------------------------------------------------
// Write an untranslated message to the console
//
// @param type console type ("out" or "err")
// @param text the text
//----------------------------------------------------------
function consoleMsg(type, text) {
	if(type == "out") {
		java.lang.System.out.println(text);
	}
	else {
		java.lang.System.err.println(text);
	}
}

//----------------------------------------------------------
// Write to console a translated message with 0 parameters
//
// @param type console type ("out" or "err")
// @param res the resource string to lookup
//----------------------------------------------------------
function console0(type, res) {
	var text = messageLookup.getString(res);
	consoleMsg(type, text);
}

//----------------------------------------------------------
// Write to console a translated message with 1 parameter
//
// @param type console type ("out" or "err")
// @param res the resource string to lookup
// @param param1 parameter
//----------------------------------------------------------
function console1(type, res, param1) {
	var text = messageLookup.getString1(res);
	text = task.getLog().getString(text, param1);
	consoleMsg(type, text);
}

//----------------------------------------------------------
// Write to console a translated message with 2 parameters
//
// @param type console type ("out" or "err")
// @param res the resource string to lookup
// @param param1 parameter 1
// @param param1 parameter 2
//----------------------------------------------------------
function console2(type, res, param1, param2) {
	var text = messageLookup.getString2(res);
	text = task.getLog().getString(text, param1, param2);
	consoleMsg(type, text);
}

//----------------------------------------------------------
// Write to console a translated message with 3 parameters
//
// @param type console type ("out" or "err")
// @param res the resource string to lookup
// @param param1 parameter 1
// @param param1 parameter 2
// @param param1 parameter 3
//----------------------------------------------------------
function console3(type, res, param1, param2, param3) {
	var text = messageLookup.getStringN(res, 3);
	text = task.getLog().getString(text, [param1, param2, param3]);
	consoleMsg(type, text);
}

//----------------------------------------------------------
// Write to console a translated message with 4 parameters
//
// @param type console type ("out" or "err")
// @param res the resource string to lookup
// @param param1 parameter 1
// @param param1 parameter 2
// @param param1 parameter 3
// @param param1 parameter 4
//----------------------------------------------------------
function console4(type, res, param1, param2, param3, param4) {
	var text = messageLookup.getStringN(res, 4);
	text = task.getLog().getString(text, [param1, param2, param3, param4]);
	consoleMsg(type, text);
}

//----------------------------------------------------------
// Write the given return code to the given file
//
// @param returnCode the return code
// @param file the name of the file to write to
//----------------------------------------------------------
function write_return_code(returnCode, file) {
	try
	{
		var out = new java.io.FileWriter(file);
		out.write("" + returnCode + "\n");
		out.close();
	}
	catch(e)
	{
		task.logmsg("" + e);
	}
}


]]></parameter>
        </Script>
        <Script name="parse_dn">
            <ModTime>1398114856241</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//---------------------------------------------------
// Parse the given dn into an associative array of
// parts.
//
// @param dn the DN
//
// @return an associative array containing the parts
//         of the dn indexed by attribute name
//---------------------------------------------------
function parse_dn(dn)
{
	var error = 0;
	var result = {};
	var start = 0;
	var pos = dn.indexOf(",");
	var eqpos = -1;
	while(pos > 0) {
		var aField = dn.substring(start, pos);
		eqpos = aField.indexOf("=");
		if(eqpos > 0) {
			result[aField.substring(0, eqpos)] = aField.substring(eqpos + 1);
		}
		else {
			task.logmsg("ERROR: DN subfield does not contain equals:" + aField);
			error = 1;
		}
		start = pos + 1;
		pos = dn.indexOf(",", start);	
	}
	if(start < dn.length) {
		var aField = dn.substring(start);
		eqpos = aField.indexOf("=");
		if(eqpos > 0) {
			result[aField.substring(0, eqpos)] = aField.substring(eqpos + 1);
		}
		else {
			task.logmsg("ERROR: DN subfield does not contain equals:" + aField);
			error = 1;
		}
	}
	if(error != 0) {
		result = null;
	}
	
	return result;
}]]></parameter>
        </Script>
        <Script name="perform_mappings">
            <ModTime>1398114856351</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//------------------------------------------------
// Take the given associative array and
// map values from work and map them
// into the given entry object (typically conn)
//
// @param assoc_array the mapping array
// @param entry the entry object to map into
//
// @return true if successful, false otherwise
//------------------------------------------------
function map_into_entry(assoc_array, entry)
{
	var valid = true;
	log0("DEBUG", "info_begin_mapping_process");
	
	//----------------------------------------------
	// Loop through all the names in our associative
	// array and do the mapping and put the result
	// in the given toEntry object
	//----------------------------------------------
	for (key in assoc_array) {
		if (js_trace_level.all <= trace_javascript_level)
		{
			task.logmsg("function map_into_entry: key: " + key  );
		}

		var result = null;
		var ldapAttrNameOrFunc = assoc_array[key];
		if (js_trace_level.all <= trace_javascript_level)
		{
			// ldapAttrNameOrFunc is the mapping to the ldap attribute
			task.logmsg("function map_into_entry: ldapAttrNameOrFunc: " + ldapAttrNameOrFunc  );
		}
		if(ldapAttrNameOrFunc != null) {
			if(typeof(ldapAttrNameOrFunc) == "function") {
				//----------------------------------
				// The value is a function, so we
				// call it passing the field name,
				// which is our convention
				//----------------------------------
				try
				{
					if (js_trace_level.all <= trace_javascript_level)
					{
						task.logmsg("map_into_entry: key: " + key);
					}

					result = ldapAttrNameOrFunc(key);

					// if this is mode, check for abort return
					if (key == "mode" && (result == null || result == "abort"))
					{
						system.abortAssemblyLine("ERROR: the mode funtion in the flie profiles_functions.js detected a rule violation in the source_ldap.. properties in file profiles_tdi.properties (see this file for the rules as well).");
					}

					if (js_trace_level.all <= trace_javascript_level)
					{
						// ldapAttrNameOrFunc is the mapping to the ldap attribute
						task.logmsg("function map_into_entry: result (of function): " + result  );
					}
				}
				catch(e)
				{
					//----------------------------------------------------
					// We log the error and set valid to false so
					// that the caller will know it failed. It should
					// log the identity of the record which failed
					//----------------------------------------------------
					log2("ERROR", "err_map_func_exception", key, "" + e);
					valid = false;
				}
			}
			else 
			{
				//----------------------------------
				// The value must be an attribute, 
				// so we get that value from the 
				// source
				//----------------------------------

				result = work.getAttribute(ldapAttrNameOrFunc);

				if (js_trace_level.all <= trace_javascript_level)
				{
					// ldapAttrNameOrFunc is the mapping to the ldap attribute
					task.logmsg("function map_into_entry: list of attributes: value of attr in ldap: " + result  );
				}

				if(result != null) {
					//------------------------------
					// Make a copy so we do not
					// modify the original map
					//------------------------------
					result = result.clone();
					
					var len = result.size();
					for (var i = 0; i < len; i++) {
						var val = result.getValue(i);
						if (!(val instanceof java.lang.String)) {
							val = java.lang.String.valueOf(val);
							result.setValue(i, val);
						}
					}

					if (js_trace_level.all <= trace_javascript_level)
					{
						// ldapAttrNameOrFunc is the mapping to the ldap attribute
						task.logmsg("function map_into_entry: list of attributes: value of attr in ldap: result2: " + result  );
					}

				}
			}

			// added to support 'blanking' of null ldap attributes
			if (result == null) 
			{
				result = new java.lang.String("");
			}

			//--------------------------------------
			// If we got a value, add it to the
			// entry object.  In case the value is
			// expressed as an Attribute object
			// already, we handle that
			//--------------------------------------
			if(result != null) {
				if(result instanceof com.ibm.di.entry.AttributeInterface) {	
					result.setName(key);
					entry.setAttribute(result);
				}
				if (result instanceof com.ibm.di.entry.Attribute) 
				{
					result.setName (key);
					entry.setAttribute (result);
				} 
				else {
					var attr = entry.newAttribute(key);
					attr.setValue(result);
				}
				log2("DEBUG", "info_mapping_process_result", key, result);
			}
		}
	}
	
	log0("DEBUG", "info_end_mapping_process");

	return valid;
}

//------------------------------------------------
// Take the given associative array and
// map the given field name, returning the
// Attribute object or null if none. Uses work.
//
// @param fieldname the field name needed
// @param assoc_array the mapping array
// 
//
// @return Attribute object if successful, null
//         otherwise
//------------------------------------------------
function map_single_field(fieldName, assoc_array) {
	//task.logmsg("map_single_field: fieldName: " + fieldName);
	var result = null;
	var tmpEntry = system.newEntry();
	var tmpMapping = {};
	tmpMapping[fieldName] = assoc_array[fieldName];
	if(map_into_entry(tmpMapping, tmpEntry)) {
		result = tmpEntry.getAttribute(fieldName);
		if(result != null) {
			//------------------------------
			// Make a copy so we do not	
			// modify the original map
			//------------------------------
			result = result.clone();
		}
	}

	//task.logmsg("map_single_field: result: " + result);
	return result;
}

//
// Create extension attribute mappings
//
function create_extension_attribute_mappings(assoc_array, entry)
{
	for(anAttrName in extension_def_array) 
	{
		var e = extension_def_array[anAttrName];

		var extAttrId = "extattr." + anAttrName;
		var extVal = null;

		if (assoc_array[extAttrId] == null) 
		{
			extVal = work.getString(e.key);
		} 
		else 
		{
			extVal = entry.getString(extAttrId);
			if (extVal != null) 
			{
				// this is done to allow validations to find the value
				var ta = entry.newAttribute(extAttrId);
				ta.addValue(extVal);
			}
		}

		// Added to support 'blanking' of 'null' ldap attributes
		if (extVal == null) 
		{
			extVal = "";  //make sure extVal can not be null
		}

		if (extVal != null) 
		{
			//work.setString(extVal); 

			var extAttr = entry.newAttribute("_extAttrs_" + anAttrName);

			var keyString = "key:" + e.key;
			var valueString = "value:" + extVal;
			var nameString = "name:" + e.name;
			var dataTypeString = "dataType:" + e.dataType;

			extAttr.addValue(keyString);
			extAttr.addValue(valueString);
			extAttr.addValue(nameString);
			extAttr.addValue(dataTypeString);
		}

		else 
		{
			// Not an error condition if LDAP does not contain value
			log1("DEBUG", "err_mapping_extensionAttrb", anAttrName);
		}
	}
}

//------------------------------------------------
// Take the given entry and find all attributes
// with names starting with the given prefix and
// remove them from the entry, and return an 
// entry containing the removed attributes
//
// @param prefix the field name prefix
// @param entry the entry to remove attrs from
// 
//
// @return entry with removed entries, can be empty
//------------------------------------------------
function split_prefixed_fields_from_entry(prefix, entry) {
	result = system.newEntry();

	var names = entry.getAttributeNames();
	for(i=0; i < names.length; ++i) {
		var aName = names[i];
		if(aName.startsWith(prefix)) {
			var attr = entry.getAttribute(aName);
			if(attr != null) {
				entry.removeAttribute(aName);
				var propName = aName.substring(prefix.length());
				attr.setName(propName);
				result.setAttribute(attr);
			}
		}
	}

	return result;

}]]></parameter>
        </Script>
        <Script name="perform_validation">
            <ModTime>1398114856507</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//----------------------------------------
// Validate all entries in the given
// associative_array against the given
// entry
//
//@param assoc_array the associative array
//@param entry the entry attrs are in
//----------------------------------------
function validate_all(assoc_array, entry)
{
	var result = true;
	log0("DEBUG", "info_begin_validation_process");
	//----------------------------------------------
	// Loop through all the names in our associative
	// array and run the validation function. The
	// entry may not have a value for the given
	// entry but the validation may have a check
	// for not null. We will warn about any that
	// fail validation 
	//----------------------------------------------
	for (key in assoc_array) {
		var aFunc = assoc_array[key];
		if(!call_validation_func(aFunc, entry)) {
			result = false;
		}
	}
	log0("DEBUG", "info_end_validation_process");

	return result;
}

//----------------------------------------
// Validate existing entries in the given
// entry using the validation functions
// in the given associative array
//
//@param assoc_array the associative array
//@param entry the entry attrs are in
//----------------------------------------
function validate_existing(assoc_array, entry)
{
	var result = true;
	log0("DEBUG", "info_begin_validation_process");
	//----------------------------------------------
	// Loop through all the names in entry
	// array and run the associated validation 
	// function if any. We will warn about any that
	// fail validation 
	//----------------------------------------------
	var names = entry.getAttributeNames();
	for (i = 0; i < names.length; ++i) {
		key = names[i];
		var aFunc = assoc_array[key];
		if(!call_validation_func(aFunc, entry)) {
			result = false;
		}
	}
	log0("DEBUG", "info_end_validation_process");

	return result;
}

function call_validation_func(aFunc, entry) {
	var result = true;
	if(aFunc != null) {
		if(typeof(aFunc) == "function") {
			//----------------------------------
			// The value is a function, so we
			// call it passing the value of the
			// attribute or, if it takes 2 
			// arguments the name as well
			//----------------------------------
			try
			{
				var aValue = entry.getAttribute(key);
				if(aValue != null) {
					aValue = aValue.getValue(0);
				}
				var valid = null;
				if(aFunc.length == 2) {
					valid = aFunc(key, aValue);
				}
				else {
					valid = aFunc(aValue);
				}
				log2("DEBUG", "info_validation_result_for", key, "" + valid);
				if(typeof(valid) != "boolean") {
					log1("ERROR", "err_valid_func_not_boolean", key);
					result = false;
				}
				else {
					if(!valid) {
						log2("WARN", "warn_validation_failed_for", key, "" + aValue);
						result = false;
					}
				}
			}
			catch(e)
			{
				msgText = log2("ERROR", "err_valid_func_exception", key, "" + e);
				result = false;
			}
		}
		else {
			//----------------------------------
			// It should only be a function so
			// this is an internal error
			//----------------------------------
			log2("ERROR", "err_valid_internal_not_func", key, typeof(aFunc));
			result = false;
		}
	}

	return result;
}]]></parameter>
        </Script>
        <Script name="read_functions_from_file">
            <ModTime>1398114856616</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//-------------------------------------------------
// Read functions from the given filename and
// return the file text as a string
// 
// @param filename name of file to read
//
// @return the function text to evaluate
//-------------------------------------------------
function read_functions_from_file(filename) {
	var funcData = null;	
	try
	{
		var reader = system.openFileForInput(filename);
		var funcData = "";
		var aLine = null;
		while((aLine = reader.readLine()) != null) {
			funcData = funcData + aLine + "\n";
		}
		reader.close();
	}
	catch(e)
	{
		msgText = log2("ERROR", "err_reading_map_functions_file", filename, e.toString());
		system.abortAssemblyLine(msgText);
	}

	return funcData;
}]]></parameter>
        </Script>
        <Script name="sql_utilities">
            <ModTime>1398114856725</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//----------------------------------------------
// Return a single quoted string for SQL 
// query, including any needed escaping
//
// @param s the value
// @return the value properly quoted, including
//         escaping as needed
//----------------------------------------------
function sql_quoted(s) {
	var result = s;
	var start = 0;
	var pos = result.indexOf("\'");
	while(pos >= 0) {
		result = result.substring(0, pos + 1) + "\'" + result.substring(pos + 1);
		start = pos + 2;
		pos = result.indexOf("\'", start);
	}
	result = "\'" + result + "\'";
	return result;
}]]></parameter>
        </Script>
        <Script name="state_utils">
            <ModTime>1398114856834</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[/**
 * Utility class for keeping track of iterations
 */
if (!this.lcIterUtil) {
	lcIterUtil = {
		_logIncr : 10000,
		
		setIncr : function(inc) {
			lcIterUtil._logIncr = inc;
		},
		
		_getIncr : function() {
			if (lcIterUtil._logIncr == null) return 10000;
			else return lcIterUtil._logIncr;
		},
				
		/**
		 * Format the time string for output
		 */
		_formattedTimeString : function() {
			var timeStamp = java.lang.System.currentTimeMillis();
			var dateFormat = new java.text.SimpleDateFormat("yyyyMMddHHmmss");
			return dateFormat.format(timeStamp);
		},
		
		/**
		 * reset the counter
		 */
		reset : function() {
			clearCounter("globalIterCntr");
		},
		
		/**
		 * Increment the counter
		 */
		incr : function() {
			incrementCounter("globalIterCntr");
			
			var itrCount = lcIterUtil.getValue();
			
			if((itrCount % lcIterUtil._getIncr()) == 0) {
				var time = lcIterUtil._formattedTimeString();
				console2("out", "disp_iteration_count", "" + time, "" + itrCount);
			}
		},
		
		/**
		 * Get the current value
		 */
		getValue : function() {
			return getCounterState("globalIterCntr");
		},
		
		/**
		 * Report the value
		 */
		report : function() {
			var time = lcIterUtil._formattedTimeString();
			var itrCount = lcIterUtil.getValue();
			console2("out", "disp_iteration_count_total", "" + time, "" + itrCount);
		}	
	};
}]]></parameter>
        </Script>
        <Script name="sync_dns_utilities">
            <ModTime>1398114856943</ModTime>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//
// Utilities for working with sync dns
//

lcSyncDnsUtils = { 

	/**
 	 * Removes files of a given file extenions from the sync_updates directory
	 * and creates blank files.
	 */
	resetTempFiles: function(fileExtension) {
		var aProp = lcConf.sync_updates_working_directory;
		var aFD = java.io.File(aProp);
		if (aFD.exists() && aFD.isDirectory()) {
			var afiles = aFD.listFiles();
			var afile;
			for (afile in afiles) {
				if (afile.getName().indexOf(fileExtension) != -1) {
					afile["delete"]();
				}
			}
		} else if (aFD.exists()) { // && !isDirectory()
			aFD["delete"]();
			aFD.mkdir();
		} else {
			aFD.mkdir();
		}
		
		// create blank ancillary files
		aFD = java.io.File(aProp);
		for (var i = 0; i < lcConf.sync_updates_hash_partitions; i++) {
			var afile = new java.io.File(lcConf.sync_updates_working_directory + "/" + i + fileExtension);
			afile.createNewFile();
		}
	}
}]]></parameter>
        </Script>
        <Script name="tds_change_parsing">
            <ModTime>1398114857052</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//--------------------------------------------------
// Parse a TDS change entry into its parts
// changes: the changes string
// @param start  where to start in the changes string
//
// Sets variables: operation, attribute, flag
//--------------------------------------------------
function parse_a_change(changes, start) 
{
	count = 0;
	parse_a_change_error = 0;
	pos = changes.indexOf("\n", start);
	while((pos >= 0) && (count < 3)) {
		anEntry = changes.substring(start, pos);
		++count;
		switch(count) {
			case 1:
				operation = anEntry;
				break;
			case 2:
				attribute = anEntry;
				break;
			case 3:
				flag = anEntry;
				break;
			default:
				parse_a_change_error = 1;
				break;
		}
		start = pos + 1;
		pos = changes.indexOf("\n", start);
	}
	if((start < changes.length()) && (count < 3)){
		if(count == 2) {
			flag = changes.substring(start);
		}
		else {
			parse_a_change_error = 1;
		}
	}

	return start;
}

//--------------------------------------------------
// Parse the name out of name/value pair
// @param pair the name/value pair string
//
// @return the name part
//--------------------------------------------------
function parse_name_from_pair(pair)
{
	var result = "";
	var pos = pair.indexOf(":");
	if(pos > 0) {
		result = pair.substring(0, pos);
	}

	return result;
}

//--------------------------------------------------
// Parse the value out of name/value pair
// @param pair the name/value pair string
//
// @return the value part
//--------------------------------------------------
function parse_value_from_pair(pair)
{
	var result = "";
	var pos = pair.indexOf(":");
	if(pos > 0) {
		var after = pair.substring(pos+1);
		pos = after.search(/[^ ]/);
		if(pos > 0) {
			result = after.substring(pos);
		}
		else {
			result = after;
		}
	}

	return result;
}]]></parameter>
        </Script>
        <Script name="utilities">
            <ModTime>1398114857162</ModTime>
            <parameter name="autoInclude">true</parameter>
            <parameter name="includeFiles"/>
            <parameter name="script"><![CDATA[//function getCurrentTime()
//{
//	var currentTime = com.ibm.lconn.profiles.api.tdi.util.TDIServiceHelper.getCurrentTimeStamp();
//	return currentTime;
//}

//-------------------------------------------
// Get the java class of the given object
// or return javascript otherwise
//-------------------------------------------
function getClass(o) {
	var result = null;

	try
	{
		result = o.getClass().getName();
	}
	catch(e)
	{
		result = "javascript";
	}

	return result;
}

function fileExists(path) {
	var f = java.io.File(path);
	return f.exists();
}

//-------------------------------------------
// Convert a modify operation into a replace.
// NOTE: This only really makes sense for a
// single-valued attribute (or multi-valued)
// where all values being deleted and added
//-------------------------------------------
function convert_modify_attr_to_replace(anAttr) {
	var op = anAttr.getOperation();
	if((op != null) && (op == "modify")) {
		var list = new java.util.ArrayList();
		var newAttr = system.newAttribute(anAttr.getName());
		for(i=0; i < anAttr.size(); ++i) {
			var anAttrVal = anAttr.getValueAV(i);
			var valOp = anAttrVal.getOperation();
			if((valOp != null) && (valOp == "add")) {
				list.add(anAttrVal.getValue());
			}
		}
		anAttr.clear();
		for(i=0; i < list.size(); ++i) {
			anAttr.addValue(list.get(i));
		}
	}
	
}

//---------------------------------------
// Look up the path for the given
// property store for display purposes
//---------------------------------------
function get_properties_file_path_for(storeName) {
	var path = null;
	
	var propertiesConfig = main.getConfiguration("Properties");
	if(propertiesConfig != null) {
		var storeConfig = propertiesConfig.getPropertyStore(storeName);
		if(storeConfig != null) {
			var connConfig = storeConfig.getConnectionConfig();
			if(connConfig != null) {
				path = connConfig.getParameter("collection");
			}
		}
	}

	return path;
}

//---------------------------------------
// Look up the path for the profiles
// property store for display purposes
//---------------------------------------
function get_properties_file_path() {
	return get_properties_file_path_for("profiles");
}

//---------------------------------------
// Validate a given property is set and
// not empty in given property store.
// Abort if not set
//---------------------------------------
function abort_if_required_property_not_set_in(propertyName, storeName) {
	var propVal = system.getTDIProperty(storeName, propertyName);
	if((propVal == null) || (propVal == "")) {
		var path = get_properties_file_path_for(storeName);
		var msgText = null;
		if(path != null) {
			msgText = log2("ERROR", "err_required_property_not_set_in", propertyName, path);
		}
		else {
			msgText = log1("ERROR", "err_required_property_not_set", propertyName);
		}
		system.abortAssemblyLine(msgText);
	}
}

function abbreviate_notes_email(email) {
	var result = email;
	if(result != null) {
		if(result.startsWith("CN=")) {
			result = result.substring(3);
			var pos = result.indexOf("/OU=");
			while(pos > 0) {
				pos = pos + 1;
				result = result.substring(0, pos) + result.substring(pos + 3);
				pos = result.indexOf("/OU=");
			}
			pos = result.indexOf("/O=");
			if(pos > 0) {
				pos = pos + 1;
				result = result.substring(0, pos) + result.substring(pos + 2);
			}
			pos = result.indexOf("/C=");
			if(pos > 0) {
				pos = pos + 1;
				result = result.substring(0, pos) + result.substring(pos + 2);
			}
		}
	}

	return result;
}

//---------------------------------------
// Validate a given property is set and
// not empty in profiles property store
//---------------------------------------
function abort_if_required_property_not_set(propertyName) {
	return abort_if_required_property_not_set_in(propertyName, "profiles");
}

//---------------------------------------
// Compare two entries for equivalence.
// Return true if they have the same
// attribute names and values, and 
// false otherwise
//
// @param entry1 first entry
// @param entry2 second entry
//
// @return true if equivalent
//---------------------------------------
function entriesEquiv(entry1, entry2) {
	var result = true;
	if(entry1.size() == entry2.size()) {
		var names = entry1.getAttributeNames();
 		for (i = 0; result && (i < names.length); i++) {
    		var attr1 = entry1.getAttribute(names[i]);
			var attr2 = entry2.getAttribute(names[i]);
			if((attr2 != null) && (attr1.size() == attr2.size())) {
    			for (j = 0;result && (j < attr1.size()); j++) {
      				if(!attr1.getValue(j).equals(attr2.getValue(j))) {
						result = false;
					}
    			}
			}
			else {
				result = false;
			}
 		}
	}
	else {
		result = false;
	}

	return result;
}

function parsePageNumber(pns) {
	var indexOf = pns.indexOf('.');
	return pns.substrint(0,indexOf-1);
}

function removeSpaces(s) {
	var js = "" + s;//make sure js string
	return js.replace(/ /g,"");
}

function escape_dn(dnVal) {
	if(dnVal != null) {
		var startPos = 0;
		var pos = 0;

		// backslash (\)
		pos = dnVal.indexOf('\\', startPos);
		while(pos >= 0) {
			dnVal = dnVal.substring(0, pos) + "\\" + dnVal.substring(pos);
			startPos = pos + 2;
			pos = dnVal.indexOf('\\', startPos);
		}

		// plus (+)
		startPos = 0;
		pos = dnVal.indexOf('+', startPos);
		while(pos >= 0) {
			dnVal = dnVal.substring(0, pos) + "\\" + dnVal.substring(pos);
			startPos = pos + 2;
			pos = dnVal.indexOf('+', startPos);
		}

		// less than (<)
		startPos = 0;
		pos = dnVal.indexOf('<', startPos);
		while(pos >= 0) {
			dnVal = dnVal.substring(0, pos) + "\\" + dnVal.substring(pos);
			startPos = pos + 2;
			pos = dnVal.indexOf('<', startPos);
		}

		// greater than (>)
		startPos = 0;
		pos = dnVal.indexOf('>', startPos);
		while(pos >= 0) {
			dnVal = dnVal.substring(0, pos) + "\\" + dnVal.substring(pos);
			startPos = pos + 2;
			pos = dnVal.indexOf('>', startPos);
		}

		// hash or pound or number (#)
		startPos = 0;
		pos = dnVal.indexOf('#', startPos);
		while(pos >= 0) {
			dnVal = dnVal.substring(0, pos) + "\\" + dnVal.substring(pos);
			startPos = pos + 2;
			pos = dnVal.indexOf('#', startPos);
		}

		// semi-colon (;)
		startPos = 0;
		pos = dnVal.indexOf(';', startPos);
		while(pos >= 0) {
			dnVal = dnVal.substring(0, pos) + "\\" + dnVal.substring(pos);
			startPos = pos + 2;
			pos = dnVal.indexOf(';', startPos);
		}

		// double quote (")
		startPos = 0;
		pos = dnVal.indexOf('"', startPos);
		while(pos >= 0) {
			dnVal = dnVal.substring(0, pos) + "\\" + dnVal.substring(pos);
			startPos = pos + 2;
			pos = dnVal.indexOf('"', startPos);
		}
	}
	return dnVal;
}

function checkALExist(alName)
{
	var instances = session.getConfigInstances();
	var isExist = false;
	
	for(var j = 0; j < instances.length; j++)
	{
		if(isExist == true)
			break;
		var configuration = instances[j].getConfiguration();
		var configFolder = configuration.getDefaultFolder(main.getMetamergeConfig().ASSEMBLYLINE_FOLDER); 
		var assemblyLineNames = configFolder.getNames();
		if (assemblyLineNames != null)
		{ 
			for (var k=0; k<assemblyLineNames.length; k++) 
			{
				if(assemblyLineNames[k].equals(alName))
				{
					isExist = true;
					break;
				}
				isExist = false;
			}
		}
	}

	var msgText = null;
	if(isExist == true) {
		msgText = "AssemblyLine defined in check_if_remove property: "  + alName + " exist in current project";
		logmsg("INFO", msgText);
	}
	else
	{
		msgText = "ERROR! AssemblyLine defined in check_if_remove property: " + alName + " cannot be found in current project";
		logmsg("ERROR", msgText);
		consoleMsg("err", msgText);
		system.abortAssemblyLine(msgText);
	}
}

// want to print:
// - version info of jars in solution dir (profiles_tdi.jar)
// - metamerge info from top of this file
// - time of this file (profiles_tdi.xml)
// this function should be called from a Prolog after init hook
function print_version_info() {

	try {
		logmsg("INFO", "START: TDI solution version info");

		// log metamergeconfig info from top of profiles_tdi.xml
		var root = main.getMetamergeConfig().getRootElement();
		logmsg("INFO", " - START: profiles_tdi.xml MetamergeConfig information ");
		logmsg("INFO", " - MetamergConfig IDIversion=" + root.getAttribute("IDIversion"));
		logmsg("INFO", " - MetamergConfig created=" + root.getAttribute("created"));
		logmsg("INFO", " - MetamergConfig createdBy=" + root.getAttribute("createdBy"));
		logmsg("INFO", " - MetamergConfig modified=" + root.getAttribute("modified"));
		logmsg("INFO", " - MetamergConfig modifiedBy=" + root.getAttribute("modifiedBy"));
		logmsg("INFO", " - END: profiles_tdi.xml MetamergeConfig information ");

		// log jar manifest info for profiles_tdi.jar
		var jarfile = new java.util.jar.JarFile("lib/profiles_tdi.jar");
		var version = jarfile.getManifest().getMainAttributes().getValue( "Implementation-Version");
		logmsg("INFO", " - profiles_tdi.jar version " + version);
		jarfile.close();

		// log profiles_tdi.xml file modified time
		var configName = "profiles_tdi.xml";	
		var configFile = java.io.File(configName);
		var configDate = new Date(configFile.lastModified());
		var dateFormat = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm");
		var configDateStr = dateFormat.format(configDate);

		logmsg("INFO", " - profiles_tdi.xml file modified time " + configDateStr);

		// First try at providing reliable version information. Manually log simple version info in case 
		// other information is corrupted.

		// Note that the MetamergConfig (top element in profiles_tdi.xml) version info verges on being 
		// useless, and I've seen the profiles_tdi.jar version info be questionable.  The version info 
		// from the jar's MANIFEST.MF has been unreliable, and the file date is meaningless most of the time.

		// Try to remember to increase the integer below each time a change is reflected in
		// TDISOL (i.e., what the customer sees).  In the second try, this will be automated.
		logmsg("INFO", " - ####################################################################");
		logmsg("INFO", " - ####################################################################");
		logmsg("INFO", " - Internal build number: 005.005.00001  (014812920)(925804367 00001)");
		logmsg("INFO", " - Internal target release: IC5.5_Profiles CR");
		logmsg("INFO", " - Internal last update: 2016-02-03");
		logmsg("INFO", " - ####################################################################");
		logmsg("INFO", " - ####################################################################");

		logmsg("INFO", "END: TDI solution version info");
	}	
	catch(e) {
		system.abortAssemblyLine("" + e);
	}
	
}

// check for BOM (Byte Order Marker) at beginning of file,
// and skip if found.  Note we only have to do this for UTF-8
// since this is done automatically for other character sets.
// if the file doesn't exist, let std exception happen.
function check_for_BOM_at_BOF_and_skip_it( property_name) {

	if ((lcConf.file_encoding).toUpperCase() == "UTF-8")
	{
		if (js_trace_level.debug < trace_javascript_level)
		{
			task.logmsg("fileencoding is UTF-8, will look for BOM as first char: property_name: " + property_name);
		}
		var csvFileName = system.getTDIProperty("profiles", property_name);
		var inputStream = java.io.FileInputStream( csvFileName);
		var inputStreamReader = java.io.InputStreamReader( inputStream, "UTF-8");
		var firstChar = inputStreamReader.read();
		if (js_trace_level.debug < trace_javascript_level)
		{
			task.logmsg("BOM is 65279 or -1, first char is :  " + firstChar);
		}
		inputStreamReader.close();

		// now check for BOM
		if ((firstChar == 65279) || (firstChar == -1))
		{
			var bom = thisConnector.connector.getParser().getReader().read(); // skip the BOM = 65279
			if (js_trace_level.debug < trace_javascript_level)
			{
				task.logmsg("found BOM, skipping it: " + bom );
			}
		}
	}
}


// Check the profiles property store, i.e. profiles_tdi.properties,
// to make sure that the new 40 properties are defined.  If not,
// add the missing one.
//
// note that you can not do js tracing here.
function check_40_Properties_in_profiles() {
	//task.logmsg(" check_40_Properties_in_profiles ENTRY:  ");

	var stream = java.io.FileInputStream("profiles_tdi.properties");
	var profiles_tdi_map = java.util.Properties();
	profiles_tdi_map.load(stream);
	stream.close();

	var bAddPropertyIx = 0;
	var propsToAdd = new Array();

	if ( ! profiles_tdi_map.containsKey("debug_managers"))
	{
		propsToAdd[bAddPropertyIx] = "debug_managers=false"; //1
		bAddPropertyIx++;
	}

	if ( ! profiles_tdi_map.containsKey("debug_photos"))
	{
		propsToAdd[bAddPropertyIx] = "debug_photos=false"; //2
		bAddPropertyIx++;
	}

	if ( ! profiles_tdi_map.containsKey("debug_pronounce"))
	{
		propsToAdd[bAddPropertyIx] = "debug_pronounce=false";//3
		bAddPropertyIx++;
	}

	if ( ! profiles_tdi_map.containsKey("debug_fill_codes"))
	{
		propsToAdd[bAddPropertyIx] = "debug_fill_codes=false";//4
		bAddPropertyIx++;
	}

	if ( ! profiles_tdi_map.containsKey("debug_draft"))
	{
		propsToAdd[bAddPropertyIx] = "debug_draft=false";//5
		bAddPropertyIx++;
	}

	if ( ! profiles_tdi_map.containsKey("debug_update_profile"))
	{
		propsToAdd[bAddPropertyIx] = "debug_update_profile=false"; //6
		bAddPropertyIx++;
	}

	if ( ! profiles_tdi_map.containsKey("debug_collect"))
	{
		propsToAdd[bAddPropertyIx] = "debug_collect=false"; //7
		bAddPropertyIx++;
	}

	if ( ! profiles_tdi_map.containsKey("debug_special"))
	{
		propsToAdd[bAddPropertyIx] = "debug_special=false"; //8
		bAddPropertyIx++;
	}

	if ( ! profiles_tdi_map.containsKey("trace_profile_tdi_javascript"))
	{
		propsToAdd[bAddPropertyIx] = "trace_profile_tdi_javascript=off"; //9
		bAddPropertyIx++;
	}

	//task.logmsg("about to try append: bAddPropertyIx: " + bAddPropertyIx);

	if (bAddPropertyIx > 0)
	{
		task.logmsg("about add profiles property");

		var outFile = new java.io.File( "profiles_tdi.properties");
		var fos = new java.io.FileOutputStream(outFile, true);

		// loop over added properties
		for (var ixProp = 0; ixProp < bAddPropertyIx; ++ixProp) 
		{
			var str = propsToAdd[ixProp];
			var bytes = [];
			for (var ixStr = 0; ixStr < str.length; ++ixStr) 
			{     
				bytes.push(str.charCodeAt(ixStr));
			} 
			bytes.push(13); bytes.push(10);   // windows line end 
			fos.write(bytes);
		} 	
		fos.close();
	}

	//task.logmsg(" check_40_Properties_in_profiles EXIT: bAddPropertyIx: " + bAddPropertyIx);
}

]]></parameter>
        </Script>
    </Folder>
    <JavaLibraries/>
    <JavaProperties/>
    <Folder name="Includes"/>
    <Folder name="Config">
        <LogConfig name="Logging"/>
        <InstanceProperties name="AutoStart">
            <AutoStart/>
        </InstanceProperties>
        <TombstonesConfig name="Tombstones"/>
        <SolutionInterface name="SolutionInterface">
            <PollInterval>-1</PollInterval>
            <InstanceID>TDISOL30</InstanceID>
            <enabled>true</enabled>
        </SolutionInterface>
    </Folder>
    <Folder name="Functions">
        <Function name="AddManagerDataFC">
            <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
            <ModTime>1398114857271</ModTime>
            <ConnectorState>Enabled</ConnectorState>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <SchemaItem>
                    <Name>$_already_lookup_manager</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_lookup_dn</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_manager_dn</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_manager_uid</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_should_lookup</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_should_lookup_manager</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$lookup_uid</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$manager_uid</Name>
                </SchemaItem>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <SchemaItem>
                    <Name>$_already_lookup_manager</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_lookup_dn</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_manager_dn</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_should_lookup</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_should_lookup_manager</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$dn</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$lookup_operation</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$lookup_status</Name>
                </SchemaItem>
            </Schema>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
            </Hooks>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="assemblyLine">_internal_lookup_secOrMgr_uid</parameter>
                <parameter name="debug">false</parameter>
                <parameter name="mode">2</parameter>
                <parameter name="shareLog">true</parameter>
            </Configuration>
            <SandboxConfig/>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>$_already_lookup_manager</Name>
                    <Type>simple</Type>
                    <Simple>$_already_lookup_manager</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>$manager_uid</Name>
                    <Type>advanced</Type>
                    <Script>conn["$manager_uid"]</Script>
                    <Simple>$manager_uid</Simple>
                </AttributeMapItem>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>$lookup_operation</Name>
                    <Type>advanced</Type>
                    <Script>ret.value = 'lookup_manager';</Script>
                    <Simple>$lookup_operation</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>*</Name>
                    <Type>simple</Type>
                    <Simple>*</Simple>
                </AttributeMapItem>
            </AttributeMap>
        </Function>
        <Function name="AddSecretaryDataFC">
            <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
            <ModTime>1398114857380</ModTime>
            <ConnectorState>Enabled</ConnectorState>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <SchemaItem>
                    <Name>$_already_lookup_manager</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_lookup_dn</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_manager_dn</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_manager_uid</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_should_lookup</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_should_lookup_manager</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$lookup_uid</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$manager_uid</Name>
                </SchemaItem>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <SchemaItem>
                    <Name>$_already_lookup_manager</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_lookup_dn</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_manager_dn</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_should_lookup</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$_should_lookup_manager</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$dn</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$lookup_operation</Name>
                </SchemaItem>
                <SchemaItem>
                    <Name>$lookup_status</Name>
                </SchemaItem>
            </Schema>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
            </Hooks>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="assemblyLine">_internal_lookup_secOrMgr_uid</parameter>
                <parameter name="debug">false</parameter>
                <parameter name="mode">2</parameter>
                <parameter name="shareLog">true</parameter>
            </Configuration>
            <SandboxConfig/>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>$_already_lookup_secretary</Name>
                    <Type>advanced</Type>
                    <Script>conn["$_already_lookup_secretary"]</Script>
                    <Simple>$_already_lookup_secretary</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>$secretary_uid</Name>
                    <Type>advanced</Type>
                    <Script>conn["$secretary_uid"]</Script>
                    <Simple>$manager_uid</Simple>
                </AttributeMapItem>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>$lookup_operation</Name>
                    <Type>advanced</Type>
                    <Script>ret.value = 'lookup_secretary';</Script>
                    <Simple>$lookup_operation</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>*</Name>
                    <Type>simple</Type>
                    <Simple>*</Simple>
                </AttributeMapItem>
            </AttributeMap>
        </Function>
        <Function name="IntLookupSecOrMgr_lookup">
            <InheritFrom>/Functions/SourceRepositoryLookupFC</InheritFrom>
            <ModTime>1398114857489</ModTime>
            <ConnectorState>Enabled</ConnectorState>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
                <Hook name="after_functioncall">
                    <Name>after_functioncall</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="before_initialize">
                    <Name>before_initialize</Name>
                    <Script>load_lcConf(true);</Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="default_fail">
                    <Name>default_fail</Name>
                    <Script><![CDATA[
var text = messageLookup.getString1("err_lookup_dn");
text = task.getLog().getString(text, work.getString("$dn"));
task.logmsg("INFO", text + " (" + work.getString("$lookup_operation") + ")");

system.ignoreEntry();
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="default_ok">
                    <Name>default_ok</Name>
                    <Script><![CDATA[
if ("success" != conn.getString("$lookup_status")) {
	var text = messageLookup.getString1("err_lookup_dn");
	text = task.getLog().getString(text, work.getString("$dn"));
	task.logmsg("INFO", text + " (" + work.getString("$lookup_operation") + ")");
	system.ignoreEntry();
}
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="functioncall_fail">
                    <Name>functioncall_fail</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
            </Hooks>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="operation"/>
            </Configuration>
            <SandboxConfig/>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>$lookup_uid</Name>
                    <Type>advanced</Type>
                    <Script><![CDATA[
ret.value = null;
//------------------------------------------------
// We use the mapping functions to get the
// PROF_UID value from the manager record.
// Our mapping functions assume work is the 
// Entry object used.   Our work is set to to 
// contents from the original record, but now we
// need to deal with the manager record.  Since
// our functions use the work variable, we can 
// temporarily set work to the conn while we
// call the mapping function, and then set the
// work variable back. Note that we are not
// changing the work Entry for the AL, just 
// the temporarily the work variable which is
// what our functions use.
//------------------------------------------------
var saveWork = work;
work = conn;
try
{
	var uidAttr = map_single_field("uid", db_from_ldap_array);
	work = saveWork;
	if(uidAttr != null) {
		ret.value = uidAttr.getValue(0);
	}
}
catch(e)
{
	work = saveWork;
}
]]></Script>
                    <Simple>$_manager_uid</Simple>
                </AttributeMapItem>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>$dn</Name>
                    <Type>advanced</Type>
                    <Script>work["$_lookup_dn"]</Script>
                    <Simple>$dn</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>$lookup_operation</Name>
                    <Type>advanced</Type>
                    <Script>work["$lookup_operation"]</Script>
                    <Simple>$lookup_operation</Simple>
                </AttributeMapItem>
            </AttributeMap>
        </Function>
        <Function name="LookupUserFC">
            <InheritFrom>/Functions/SourceRepositoryLookupFC</InheritFrom>
            <ModTime>1398114857692</ModTime>
            <ConnectorState>Enabled</ConnectorState>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
                <Hook name="default_fail">
                    <Name>default_fail</Name>
                    <Script><![CDATA[
log1("WARN", "err_lookup_dn", work.getString("$dn"));
system.skipEntry();
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="default_ok">
                    <Name>default_ok</Name>
                    <Script><![CDATA[
if ("success" != conn.getString("$lookup_status")) {
	log1("WARN", "err_lookup_dn", work.getString("$dn"));
	system.skipEntry();
}
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="operation"/>
            </Configuration>
            <SandboxConfig/>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>*</Name>
                    <Type>simple</Type>
                    <Simple>*</Simple>
                </AttributeMapItem>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>$dn</Name>
                    <Type>simple</Type>
                    <Simple>$dn</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>$lookup_operation</Name>
                    <Type>advanced</Type>
                    <Script>ret.value = 'lookup_user';</Script>
                    <Simple>$lookup_operation</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>$lookup_status</Name>
                    <Type>advanced</Type>
                    <Script>ret.value = 'success';</Script>
                    <Simple>$lookup_status</Simple>
                </AttributeMapItem>
            </AttributeMap>
        </Function>
        <Function name="PopFromDns_lookup_dn">
            <InheritFrom>/Functions/LookupUserFC</InheritFrom>
            <ModTime>1398114857801</ModTime>
            <ConnectorState>Enabled</ConnectorState>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
                <Hook name="after_functioncall">
                    <Name>after_functioncall</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
                <Hook name="before_functioncall">
                    <Name>before_functioncall</Name>
                    <Script><![CDATA[
	if (lcConf.source_ldap_escape_dns) {
	var dnVal = work.getString("$dn");
		if(dnVal != null) {
			var newDn = escape_dn(dnVal);
			if(newDn != dnVal) {
				if (js_trace_level.debug <= trace_javascript_level)
					task.logmsg("+++new dnVal is " + newDn);
				work.setAttribute("$dn", newDn);
			}
		}
	}
]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="default_fail">
                    <Name>default_fail</Name>
                    <Script><![CDATA[log1("ERROR", "err_lookup_dn", work.getString("$dn"));
incrementCounter(failCounter);
retCode = 1;
system.skipEntry();]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
                <Hook name="default_ok">
                    <Name>default_ok</Name>
                    <Script><![CDATA[
if (js_trace_level.debug <= trace_javascript_level)
{
	// After GetNext
	task.dumpEntry(conn);
}

// If call is not actual success note error
//
if (conn.getString("$lookup_status") != "success") {
	log1("ERROR", "err_lookup_dn", work.getString("$dn"));
	incrementCounter(failCounter);
	retCode = 1;
	system.skipEntry();
}]]></Script>
                    <Enabled>true</Enabled>
                </Hook>
            </Hooks>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
            </Configuration>
            <SandboxConfig/>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
        </Function>
        <Function name="SourceRepositoryIterateFC">
            <InheritFrom>system:/Functions/ibmdi.ScriptedFC</InheritFrom>
            <ModTime>1398114857910</ModTime>
            <ConnectorState>Enabled</ConnectorState>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
                <Hook name="before_initialize">
                    <Name>before_initialize</Name>
                    <Script/>
                    <Enabled>false</Enabled>
                </Hook>
            </Hooks>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="debug">false</parameter>
                <parameter name="script"><![CDATA[
function initialize(fc,obj) {
}

function terminate(fc) {
}

function perform(fc,obj) {
	
	var mDebug = obj.getAttribute("accumulatorDebug") == true;
	
	//
	// Get hold of accumulator
	//
	var mAccumulator = null;

	var mAttr = obj.getAttribute("accumulatorConnector");
	if (mAttr != null && mAttr.size() > 0) {
		mAccumulator = mAttr.getValue(0);
	} else {
		task.logmsg("###### NO accumulator!!!");
		result.setStatus (1);
		result.setMessage ("Failed to find 'accumulatorConnector' work attribute");
		return;
	}

	// pass through to allow additional props
	var mAddAttrs = obj.getAttribute("accumulatorParameters");
//	can't use (js_trace_level.debug or trace_javascript_level here
//		task.logmsg("###### SourceRepositoryIterateFC: mAddAttrs: " + mAddAttrs);

	var mDoNotTerminate = obj.getAttribute("overrideAccumulatorTerminate");
//	can't use (js_trace_level.debug or trace_javascript_level here
//		task.logmsg("###### SourceRepositoryIterateFC: mDoNotTerminate: " + mDoNotTerminate );

	// create TCB
	var mTCB = system.newTCB();
	mTCB.setAccumulator(mAccumulator);
	mTCB.setALSetting("__accumulator__", mAccumulator);
	if (mAddAttrs != null) {
		mTCB.setALSetting("__accumulatorParameters__", mAddAttrs);
	}
	
	// run AL with callback
	var iterateAl = obj.getString("sourceRepositoryIterator");
//	can't use (js_trace_level.debug or trace_javascript_level here
//		task.logmsg("###### SourceRepositoryIterateFC: iterateAl : " + iterateAl );
	
	if (mDebug) {
		task.logmsg("About to start call Iterate AL: " + iterateAl + " with TCB: " + mTCB);
	}	

	var al = main.startAL ( iterateAl, mTCB );      // Start AL with tcb
//	can't use (js_trace_level.debug or trace_javascript_level here
//		task.logmsg("###### SourceRepositoryIterateFC: al: " + al );
	al.join();
//	can't use (js_trace_level.debug or trace_javascript_level here
//		task.logmsg("###### SourceRepositoryIterateFC: a1 post join: " + al.getStats().getError() );
	if (al.getStats().getError()!=null)
    	throw al.getStats().getError();                                        
    	
    	// Wait for AL to finish
//	can't use (js_trace_level.debug or trace_javascript_level here
//		task.logmsg("###### SourceRepositoryIterateFC: mDoNotTerminate1: " + mDoNotTerminate );

	if (!mDoNotTerminate) {
		mAccumulator.terminate();
	}
	
	if (mDebug) {
		task.logmsg("Completed call to iterate AL: " + iterateAl);
	}	
	
	// return entry
	var retVal = system.newEntry();
	return retVal;
}
]]></parameter>
            </Configuration>
            <SandboxConfig/>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>*</Name>
                    <Type>simple</Type>
                    <Simple>*</Simple>
                </AttributeMapItem>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>accumulatorConnector</Name>
                    <Type>advanced</Type>
                    <Script>work.accumulatorConnector</Script>
                    <Simple>accumulatorConnector</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>accumulatorDebug</Name>
                    <Type>advanced</Type>
                    <Script>ret.value = lcConf.debug_source_repository_connectors;</Script>
                    <Simple>accumulatorDebug</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>accumulatorParameters</Name>
                    <Type>simple</Type>
                    <Simple>accumulatorParameters</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>overrideAccumulatorTerminate</Name>
                    <Type>advanced</Type>
                    <Script>work.overrideAccumulatorTerminate</Script>
                    <Simple>overrideAccumulatorTerminate</Simple>
                </AttributeMapItem>
                <AttributeMapItem>
                    <Name>sourceRepositoryIterator</Name>
                    <Type>advanced</Type>
                    <Script><![CDATA[var _override_sri = work.overrideIteratorAssemblyline;

if (_override_sri) {
	ret.value = _override_sri;
} else {
	ret.value = lcConf.source_repository_iterator_assemblyline;
}]]></Script>
                    <Simple>sourceRepositoryIterator</Simple>
                </AttributeMapItem>
            </AttributeMap>
        </Function>
        <Function name="SourceRepositoryLookupFC">
            <InheritFrom>system:/Functions/ibmdi.AssemblyLineFC</InheritFrom>
            <ModTime>1398114858020</ModTime>
            <ConnectorState>Enabled</ConnectorState>
            <Schema name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Schema name="Output">
                <InheritFrom>[parent]</InheritFrom>
            </Schema>
            <Hooks>
                <InheritFrom>[parent]</InheritFrom>
            </Hooks>
            <Configuration>
                <InheritFrom>[parent]</InheritFrom>
                <parameter name="assemblyLine">@SUBSTITUTE{javascript ret.value = lcConf.source_repository_lookup_assemblyline;}</parameter>
                <parameter name="debug">false</parameter>
                <parameter name="mode">2</parameter>
                <parameter name="script">ret.value = lcConf.source_repository_lookup_assemblyline;</parameter>
                <parameter name="shareLog">true</parameter>
            </Configuration>
            <SandboxConfig/>
            <AttributeMap name="Input">
                <InheritFrom>[parent]</InheritFrom>
            </AttributeMap>
            <AttributeMap name="Output">
                <InheritFrom>[parent]</InheritFrom>
                <AttributeMapItem>
                    <Name>$lookup_status</Name>
                    <Type>advanced</Type>
                    <Script>ret.value = "success";</Script>
                    <Simple>$lookup_status</Simple>
                </AttributeMapItem>
            </AttributeMap>
        </Function>

    </Folder>
    <Folder name="AttributeMaps"/>
    <Properties name="Properties">
        <Stores>
            <PropertyStore name="Solution-Properties">
                <Parser>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                </Parser>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collectionType">Solution-Properties</parameter>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="Global-Properties">
                <Parser>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                </Parser>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collectionType">Global-Properties</parameter>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="System-Properties">
                <Parser>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                </Parser>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="collectionType">System-Properties</parameter>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="Java-Properties">
                <Parser>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                </Parser>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
          <parameter name="collection">@SUBSTITUTE{config.$directory}/profiles.properties</parameter>
                    <parameter name="collectionType">Java-Properties</parameter>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>
            <PropertyStore name="profiles">
                <Parser>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                </Parser>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="autorewrite">true</parameter>
                    <parameter name="collection">profiles_tdi.properties</parameter>
                    <parameter name="collectionType">User-Defined</parameter>
                    <parameter name="debug">false</parameter>
                    <parameter name="keyAlias"/>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>

            <PropertyStore name="profilesPartitions">
                <Parser>
                    <Schema name="Input">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                    <Schema name="Output">
                        <InheritFrom>[parent]</InheritFrom>
                    </Schema>
                </Parser>
                <RawConnector>
                    <InheritFrom>system:/Connectors/ibmdi.Properties</InheritFrom>
                    <parameter name="autorewrite">true</parameter>
                    <parameter name="collection">profiles_tdi_partitions.properties</parameter>
                    <parameter name="collectionType">User-Defined</parameter>
                    <parameter name="debug">false</parameter>
                    <parameter name="keyAlias"/>
                </RawConnector>
                <Key>key</Key>
                <Value>value</Value>
                <ReadOnly>false</ReadOnly>
                <InitialLoad>true</InitialLoad>
                <CacheTimeout>0</CacheTimeout>
            </PropertyStore>


        </Stores>
    </Properties>
    <Folder name="Schedules"/>
    <Folder name="Sequences"/>
</MetamergeConfig>
